<Dictionary
 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
 xsi:noNamespaceSchemaLocation="DataDictionary.xsd"
>
<Specification
 Name="Requirements"
>
</Specification><NameSpaces>
</NameSpaces>
<Tests>
<FrameRef
 Name="Gamma FrInP"
>
</FrameRef><FrameRef
 Name="Gamma PasInP"
>
</FrameRef><FrameRef
 Name="Gamma FrInG"
>
</FrameRef><FrameRef
 Name="Lambda PasInP NomMass 40% DistAntenna 10"
>
</FrameRef><FrameRef
 Name="Lambda PasInP TractCutOff 2 + SBInterface + TCOInterface"
>
</FrameRef><FrameRef
 Name="Lambda PasInP TractCutOff 2"
>
</FrameRef><FrameRef
 Name="Lambda PasInP TractCutOff 2 + TCOInterface"
>
</FrameRef><FrameRef
 Name="Lambda PasInP SBInterface"
>
</FrameRef><FrameRef
 Name="Lambda PasInP 200%"
>
</FrameRef><FrameRef
 Name="Lambda PasInP 100%"
>
</FrameRef><FrameRef
 Name="Lambda FrInP 100%"
>
</FrameRef><FrameRef
 Name="Lambda FrInP 150%"
>
</FrameRef><FrameRef
 Name="Lambda FrInG 100%"
>
</FrameRef><FrameRef
 Name="Lambda FrInG 180%"
>
</FrameRef></Tests>
<TranslationDictionary
>
<Folders>
<Folder
 Name="DMI"
>
<Translations>
<Translation
 Implemented="TRUE"
>
<SourceTexts>
<SourceText
 Name="Driver opens desk"
>
</SourceText></SourceTexts>
<SubSteps>
<SubStep
 Name="Sub-step1"
>
<Actions>
<Action>DMI.MasterDMI().DeskOpen &lt;- True</Action></Actions>
</SubStep></SubSteps>
<Comment></Comment>
</Translation><Translation
 Implemented="TRUE"
>
<SourceTexts>
<SourceText
 Name="The actual mode SB is DISPLAYED"
>
</SourceText></SourceTexts>
<SubSteps>
<SubStep
 Name="Sub-step1"
>
<Expectations>
<Expectation
 Kind="Instantaneous"
 DeadLine="1000"
 Name="Expectation"
>DMI.MasterDMI().Out_ErtmsEtcsMode.Mode == %Step_ModeIN</Expectation><Expectation
 Kind="Instantaneous"
 DeadLine="1000"
>DMI.MasterDMI().Out_ErtmsEtcsMode.OutputInformation.DisplayRequested </Expectation></Expectations>
</SubStep></SubSteps>
<Comment></Comment>
</Translation><Translation
>
<SourceTexts>
<SourceText
 Name="SB mode is permanently displayed to the driver when the on-board equipment is in SB mode."
>
</SourceText></SourceTexts>
<SubSteps>
<SubStep
 Name="Sub-step1"
>
<Expectations>
<Expectation
 Kind="Instantaneous"
 DeadLine="1000"
>DMI.MasterDMI().Out_ErtmsEtcsMode.Mode == Mode.SB</Expectation><Expectation
 Kind="Instantaneous"
 DeadLine="1000"
>DMI.MasterDMI().Out_ErtmsEtcsMode.OutputInformation.DisplayRequested</Expectation></Expectations>
</SubStep></SubSteps>
<Comment>We cannot express permanent expectations rigth now -&gt; to be modified.</Comment>
</Translation><Translation
 Implemented="TRUE"
>
<SourceTexts>
<SourceText
 Name="The driver enters a correct Driver ID"
>
</SourceText><SourceText
 Name="The driver validates the Driver Id."
>
</SourceText></SourceTexts>
<SubSteps>
<SubStep
 Name="Sub-step1"
>
<Actions>
<Action>DMI.MasterDMI().In_DriverId.Id &lt;- &apos;Driver_ID&apos;</Action></Actions>
</SubStep></SubSteps>
</Translation><Translation
 Implemented="TRUE"
>
<SourceTexts>
<SourceText
 Name="The on-board equipment requires the driver to enter a Driver ID 
There is NO initial Driver ID value displayed"
>
</SourceText></SourceTexts>
<SubSteps>
<SubStep
 Name="Sub-step1"
>
<Expectations>
<Expectation
 Kind="Instantaneous"
 DeadLine="1000"
 Name=""
>DMI.MasterDMI().In_DriverId.InputInformation.DisplayRequested</Expectation><Expectation
 Kind="Instantaneous"
 DeadLine="1000"
>DMI.MasterDMI().In_DriverId.DriverAction.Enter</Expectation><Expectation
 Kind="Instantaneous"
 DeadLine="1000"
>DMI.MasterDMI().Out_DriverId.OutputInformation.DisplayRequested == False</Expectation></Expectations>
</SubStep></SubSteps>
<Comment></Comment>
</Translation><Translation
 Implemented="TRUE"
>
<SourceTexts>
<SourceText
 Name="The on-board equipment allow the driver to validate the Driver Id"
>
</SourceText></SourceTexts>
<SubSteps>
<SubStep
 Name="Sub-step1"
>
<Expectations>
<Expectation
 Kind="Instantaneous"
 DeadLine="1000"
>DMI.MasterDMI().In_DriverId.InputInformation.DisplayRequested</Expectation><Expectation
 Kind="Instantaneous"
 DeadLine="1000"
>DMI.MasterDMI().In_DriverId.DriverAction.Enter</Expectation></Expectations>
</SubStep></SubSteps>
<Comment></Comment>
</Translation><Translation
 Implemented="TRUE"
>
<SourceTexts>
<SourceText
 Name="The driver validates the ERTMS/ETCS level."
>
</SourceText><SourceText
 Name="The driver validates the ERMS/ETCS level."
>
</SourceText><SourceText
 Name="The driver validates the ERMS/ETCS level."
>
</SourceText></SourceTexts>
<SubSteps>
<SubStep
 Name="Sub-step1"
>
<Actions>
<Action>DMI.MasterDMI().In_ErtmsEtcsLevel.InputInformation.DriverAnswered &lt;- True</Action></Actions>
<Expectations>
<Expectation
 Kind="Instantaneous"
 DeadLine="1000"
>DMI.MasterDMI().In_ErtmsEtcsLevel.InputInformation.RequestStatus == Request.Response</Expectation></Expectations>
</SubStep></SubSteps>
</Translation><Translation
 Implemented="TRUE"
>
<SourceTexts>
<SourceText
 Name="The driver can select either SH or NL or ?Train Data Entry? or &apos;change of level&apos;"
>
</SourceText></SourceTexts>
<SubSteps>
<SubStep
 Name="Sub-step1"
>
<Expectations>
<Expectation
 Kind="Instantaneous"
 DeadLine="1000"
>DMI.MasterDMI().In_NonLeadingRequest.InputInformation.DisplayRequested</Expectation><Expectation
 Kind="Instantaneous"
 DeadLine="1000"
>DMI.MasterDMI().In_ShuntingRequest.InputInformation.DisplayRequested</Expectation><Expectation
 Kind="Instantaneous"
 DeadLine="1000"
>DMI.MasterDMI().In_TrainDataEntryRequest.InputInformation.DisplayRequested</Expectation><Expectation
 Kind="Instantaneous"
 DeadLine="1000"
>DMI.MasterDMI().In_ErtmsEtcsLevel.InputInformation.DisplayRequested</Expectation></Expectations>
</SubStep></SubSteps>
</Translation><Translation
 Implemented="TRUE"
>
<SourceTexts>
<SourceText
 Name="It is not possible to select &apos;Override EoA&apos;, since the train data is invalid or unknown."
>
</SourceText></SourceTexts>
<SubSteps>
<SubStep
 Name="Sub-step1"
>
<Expectations>
<Expectation
 Kind="Instantaneous"
 DeadLine="1000"
>NOT DMI.MasterDMI().In_OverrideRequest.InputInformation.DisplayRequested</Expectation></Expectations>
</SubStep></SubSteps>
</Translation><Translation
>
<SourceTexts>
<SourceText
 Name="A complete set of Train Data is displayed to the driver 
The driver is allowed to modify/validate the train data. Those data includes the train running number (always), the additional train data (always) and the additional STM data (if needed)."
>
</SourceText></SourceTexts>
<SubSteps>
<SubStep
 Name="Sub-step1"
>
<Expectations>
<Expectation
 Kind="Instantaneous"
 DeadLine="1000"
>DMI.MasterDMI().In_TrainData.InputInformation.DisplayRequested</Expectation><Expectation
 Kind="Instantaneous"
 DeadLine="1000"
>DMI.MasterDMI().In_TrainData.Data == Kernel.TrainData.TrainData.Value</Expectation></Expectations>
</SubStep></SubSteps>
<Comment></Comment>
</Translation><Translation
 Implemented="TRUE"
>
<SourceTexts>
<SourceText
 Name="The driver validates the Driver Id."
>
</SourceText></SourceTexts>
<SubSteps>
<SubStep
 Name="Sub-step1"
>
<Actions>
<Action>DMI.MasterDMI().In_DriverId.InputInformation.DriverAnswered &lt;- True</Action></Actions>
<Expectations>
<Expectation
 Kind="Instantaneous"
 DeadLine="1000"
>DMI.MasterDMI().In_DriverId.InputInformation.RequestStatus == Request.Response</Expectation></Expectations>
</SubStep></SubSteps>
</Translation><Translation
 Implemented="TRUE"
>
<SourceTexts>
<SourceText
 Name="The driver modifies the ERTMS/ETCS Level data (e.g. a new valid data is input)."
>
</SourceText></SourceTexts>
<SubSteps>
<SubStep
 Name="Sub-step1"
>
<Expectations>
<Expectation
 Kind="Instantaneous"
 DeadLine="1000"
>DMI.MasterDMI().In_ErtmsEtcsLevel.InputInformation.DisplayRequested</Expectation></Expectations>
</SubStep><SubStep
 Name="Sub-step2"
>
<Actions>
<Action>DMI.MasterDMI().In_ErtmsEtcsLevel.Level &lt;- Level.L1</Action></Actions>
</SubStep></SubSteps>
<Comment></Comment>
</Translation><Translation
 Implemented="TRUE"
>
<SourceTexts>
<SourceText
 Name="The driver modify and validates the train data."
>
</SourceText></SourceTexts>
<SubSteps>
<SubStep
 Name="Sub-step1"
>
<Actions>
<Action>DMI.MasterDMI().In_TrainData.Data.TrainLength &lt;- 640.0</Action><Action>DMI.MasterDMI().In_TrainData.InputInformation.DriverAnswered &lt;- True</Action></Actions>
</SubStep></SubSteps>
</Translation><Translation
 Implemented="TRUE"
>
<SourceTexts>
<SourceText
 Name="The DMI allows the driver to select again the option ?Train Data Entry? or the option ?START?."
>
</SourceText></SourceTexts>
<SubSteps>
<SubStep
 Name="Sub-step1"
>
<Expectations>
<Expectation
 Kind="Instantaneous"
 DeadLine="1000"
>DMI.MasterDMI().In_TrainDataEntryRequest.InputInformation.DisplayRequested</Expectation><Expectation
 Kind="Instantaneous"
 DeadLine="1000"
>DMI.MasterDMI().In_Start.InputInformation.DisplayRequested</Expectation></Expectations>
</SubStep></SubSteps>
</Translation><Translation
 Implemented="TRUE"
>
<SourceTexts>
<SourceText
 Name="The On-Board equipment allows the driver to select  &apos;Start&apos;.
ERTMS Level 1 and SB or PT mode are displayed on the DMI"
>
</SourceText></SourceTexts>
<SubSteps>
<SubStep
 Name="Sub-step1"
>
<Expectations>
<Expectation
 Kind="Instantaneous"
 DeadLine="1000"
>DMI.MasterDMI().Out_CurrentErtmsEtcsLevel.OutputInformation.DisplayRequested</Expectation><Expectation
 Kind="Instantaneous"
 DeadLine="1000"
>DMI.MasterDMI().Out_CurrentErtmsEtcsLevel.Level == Level.L1</Expectation><Expectation
 Kind="Instantaneous"
 DeadLine="1000"
>DMI.MasterDMI().In_Start.InputInformation.DisplayRequested</Expectation><Expectation
 Kind="Instantaneous"
 DeadLine="1000"
>DMI.MasterDMI().Out_ErtmsEtcsMode.Mode in [Mode.SB, Mode.PT]</Expectation><Expectation
 Kind="Instantaneous"
 DeadLine="1000"
>DMI.MasterDMI().Out_ErtmsEtcsMode.OutputInformation.DisplayRequested</Expectation></Expectations>
</SubStep></SubSteps>
<Comment></Comment>
</Translation><Translation
 Implemented="TRUE"
>
<SourceTexts>
<SourceText
 Name="The driver selects &apos;Start&apos;."
>
</SourceText></SourceTexts>
<SubSteps>
<SubStep
 Name="Sub-step1"
>
<Actions>
<Action>DMI.MasterDMI().In_Start.InputInformation.DriverAnswered &lt;- True</Action></Actions>
</SubStep></SubSteps>
</Translation><Translation
 Implemented="TRUE"
>
<SourceTexts>
<SourceText
 Name="An acknowledgement request for running in Staff Responsible mode is displayed on the DMI"
>
</SourceText></SourceTexts>
<SubSteps>
<SubStep
 Name="Sub-step1"
>
<Expectations>
<Expectation
 Kind="Instantaneous"
 DeadLine="1000"
>DMI.MasterDMI().In_AcknOfSRMode .InputInformation.DisplayRequested</Expectation></Expectations>
</SubStep></SubSteps>
</Translation><Translation
 Implemented="TRUE"
>
<SourceTexts>
<SourceText
 Name="The text message of acknowledgment for SR mode is acknowledged"
>
</SourceText></SourceTexts>
<SubSteps>
<SubStep
 Name="Sub-step1"
>
<Actions>
<Action>DMI.MasterDMI().In_AcknOfSRMode .InputInformation.DriverAnswered &lt;- True</Action></Actions>
</SubStep></SubSteps>
</Translation><Translation
 Implemented="TRUE"
>
<SourceTexts>
<SourceText
 Name="Indication of SR mode is DISPLAYED"
>
</SourceText></SourceTexts>
<SubSteps>
<SubStep
 Name="Sub-step1"
>
<Expectations>
<Expectation
 Kind="Instantaneous"
 DeadLine="1000"
>DMI.MasterDMI().Out_ErtmsEtcsMode.OutputInformation.DisplayRequested</Expectation><Expectation
 Kind="Instantaneous"
 DeadLine="1000"
>DMI.MasterDMI().Out_ErtmsEtcsMode.Mode == Mode.SR</Expectation></Expectations>
</SubStep></SubSteps>
</Translation><Translation
>
<SourceTexts>
<SourceText
 Name="Permanent Indication of mode SR to the driver"
>
</SourceText></SourceTexts>
<SubSteps>
<SubStep
 Name="Sub-step1"
>
<Expectations>
<Expectation
 Kind="Instantaneous"
 DeadLine="1000"
>DMI.MasterDMI().Out_ErtmsEtcsMode.OutputInformation.DisplayRequested</Expectation><Expectation
 Kind="Instantaneous"
 DeadLine="1000"
>DMI.MasterDMI().Out_ErtmsEtcsMode.Mode == Mode.SR</Expectation></Expectations>
</SubStep></SubSteps>
<Comment>We cannot express permanent expectations right now -&gt; to me modified.</Comment>
</Translation><Translation
 Implemented="TRUE"
>
<SourceTexts>
<SourceText
 Name="The driver validates the train data."
>
</SourceText></SourceTexts>
<SubSteps>
<SubStep
 Name="Sub-step1"
>
<Actions>
<Action>DMI.MasterDMI().In_TrainData.InputInformation.DriverAnswered &lt;- True</Action></Actions>
</SubStep></SubSteps>
<Comment></Comment>
</Translation><Translation
>
<SourceTexts>
<SourceText
 Name="The on-board equipment requires the driver to enter all Train Data unknown by the on-board equipment and prevents the driver from performing any other actions. Those data includes the train running number (always), and the additional STM data (if needed)."
>
</SourceText></SourceTexts>
<SubSteps>
<SubStep
 Name="Sub-step1"
>
<Expectations>
<Expectation
 Kind="Instantaneous"
 DeadLine="1000"
>DMI.MasterDMI().In_TrainData.Data == Kernel.TrainData.TrainData.Value</Expectation><Expectation
 Kind="Instantaneous"
 DeadLine="1000"
>DMI.MasterDMI().In_TrainData.InputInformation.DisplayRequested</Expectation></Expectations>
</SubStep></SubSteps>
</Translation><Translation
>
<SourceTexts>
<SourceText
 Name="The driver is allowed to validate the train data"
>
</SourceText></SourceTexts>
<SubSteps>
<SubStep
 Name="Sub-step1"
>
<Expectations>
<Expectation
 Kind="Instantaneous"
 DeadLine="1000"
>DMI.MasterDMI().In_TrainData.InputInformation.DisplayRequested</Expectation></Expectations>
</SubStep></SubSteps>
</Translation></Translations>
</Folder><Folder
 Name="JRU"
>
<Translations>
<Translation
 Implemented="TRUE"
>
<SourceTexts>
<SourceText
 Name="The new current mode SB is RECORDED on JRU"
>
</SourceText><SourceText
 Name="The transition to SR mode is RECORDED"
>
</SourceText><SourceText
 Name="The mode change to FS is stored."
>
</SourceText></SourceTexts>
<SubSteps>
<SubStep
 Name="Sub-step1"
>
<Expectations>
<Expectation
 Kind="Instantaneous"
 DeadLine="1000"
 Name="Expectation"
>JRU.jru1.ReportModeChange.Mode == %Step_ModeIN</Expectation><Expectation
 Kind="Instantaneous"
 DeadLine="1000"
 Name="Expectation..."
>JRU.jru1.ReportModeChange.Request == Request.Request</Expectation></Expectations>
</SubStep><SubStep
 Name="Sub-step2"
>
<Actions>
<Action>JRU.jru1.ReportModeChange.Request &lt;- Request.Disabled</Action></Actions>
</SubStep></SubSteps>
</Translation></Translations>
</Folder><Folder
 Name="EURORADIO"
>
<Translations>
<Translation
 Implemented="TRUE"
>
<SourceTexts>
<SourceText
 Name="Train tries to set up a safe connection."
>
</SourceText></SourceTexts>
<SubSteps>
<SubStep
 Name="Sub-step1"
>
<Expectations>
<Expectation
 Kind="Instantaneous"
 DeadLine="1000"
 Name=""
>EURORADIO.RequestOpenRbcSession.RequestState == Request.Request</Expectation></Expectations>
</SubStep></SubSteps>
</Translation></Translations>
</Folder><Folder
 Name="Setup"
>
<Translations>
<Translation
 Implemented="TRUE"
 Name="Manual setup test sequence"
>
<SourceTexts>
<SourceText
 Name="Manual setup test sequence"
>
</SourceText></SourceTexts>
<SubSteps>
<SubStep
 Name="Sub-step1"
>
<Actions>
<Action>Kernel.Level.Value &lt;- %Level</Action><Action>Kernel.Mode &lt;- %Mode</Action></Actions>
</SubStep></SubSteps>
</Translation><Translation
 Implemented="TRUE"
>
<SourceTexts>
<SourceText
 Name="Setup test sequence"
>
</SourceText></SourceTexts>
<SubSteps>
<SubStep
 Name="Sub-step1"
>
<Actions>
<Action>EURORADIO.RBCContactInformation.DataState &lt;- DataState.Valid</Action><Action>EURORADIO.RBCContactInformation.RBCIdOrPhoneNumber.Id &lt;- &apos;%RBC_ID&apos;</Action><Action>EURORADIO.RBCContactInformation.RBCIdOrPhoneNumber.PhoneNumber &lt;- &apos;%RBCPhone&apos;</Action><Action>Kernel.Level.DataState &lt;- DataState.Valid</Action><Action>Kernel.TrainPosition.TrainPosition.DataState &lt;- DataState.Valid</Action><Action>Kernel.TrainRunningNumber.Value &lt;- &apos;TR007&apos;</Action><Action>Kernel.TrainRunningNumber.DataState &lt;- Default.DataState.Valid</Action><Action>DMI.DMI1.IsMaster &lt;- True</Action><Action>Kernel.TrainPosition.TrainPosition.DirectionalPositionInformation.TrainOrientation &lt;- Default.Orientation.Nominal</Action></Actions>
</SubStep></SubSteps>
<Comment></Comment>
</Translation><Translation
 Implemented="TRUE"
 Name="Initialize train data"
>
<SourceTexts>
<SourceText
 Name="Initialize train data"
>
</SourceText></SourceTexts>
<SubSteps>
<SubStep
 Name="Sub-step1"
>
<Actions>
<Action>Kernel.TrainData.Initialize()</Action></Actions>
</SubStep></SubSteps>
</Translation></Translations>
</Folder><Folder
 Name="BTM"
>
<Translations>
<Translation
 Implemented="TRUE"
>
<SourceTexts>
<SourceText
 Name="The train receives a balise telegram with, at least:
Packet 12: Level 1 Movement Authority"
>
</SourceText></SourceTexts>
<SubSteps>
<SubStep
 Name="Sub-step1"
>
<Actions>
<Action>BTM.Message &lt;- %Step_Messages_0</Action></Actions>
<Expectations>
<Expectation
 Kind="Instantaneous"
 DeadLine="1000"
>NOT Available ( BTM.Message )</Expectation></Expectations>
</SubStep><SubStep
 Name="Sub-step2"
>
<Actions>
<Action>BTM.Message &lt;- %Step_Messages_1</Action></Actions>
</SubStep></SubSteps>
</Translation></Translations>
</Folder><Folder
 Name="Kernel"
>
<Translations>
<Translation
 Implemented="TRUE"
>
<SourceTexts>
<SourceText
 Name="The on-board equipment switches to FS mode.
The driver is informed on the DMI of the change to FS mode."
>
</SourceText></SourceTexts>
<SubSteps>
<SubStep
 Name="Sub-step1"
>
<Expectations>
<Expectation
 Kind="Instantaneous"
 DeadLine="1000"
>Kernel.Mode == Mode.FS</Expectation><Expectation
 Kind="Instantaneous"
 DeadLine="1000"
>DMI.MasterDMI().Out_ErtmsEtcsMode.Mode == Mode.FS</Expectation><Expectation
 Kind="Instantaneous"
 DeadLine="1000"
>DMI.MasterDMI().Out_ErtmsEtcsMode.OutputInformation.DisplayRequested</Expectation></Expectations>
</SubStep></SubSteps>
</Translation></Translations>
</Folder></Folders>
<Translations>
<Translation
 Implemented="TRUE"
>
<SourceTexts>
<SourceText
 Name="The power of the on-board is switched on.
The on-board equipment changes to SB mode."
>
</SourceText></SourceTexts>
<SubSteps>
<SubStep
 Name="Sub-step1"
>
<Actions>
<Action>Kernel.PowerOn &lt;- Boolean.True</Action></Actions>
<Expectations>
<Expectation
 Kind="Instantaneous"
 DeadLine="1000"
>Kernel.Mode == Mode.SB</Expectation></Expectations>
</SubStep></SubSteps>
</Translation></Translations>
</TranslationDictionary><ShortcutDictionary
 Name="braking curves verification"
>
</ShortcutDictionary></Dictionary>
