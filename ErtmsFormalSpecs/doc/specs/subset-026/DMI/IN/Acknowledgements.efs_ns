<NameSpace
 X="790"
 Y="40"
 Width="100"
 Height="50"
 Name="Acknowledgements"
 Guid="9213a9a0-d971-4c92-8506-b4f75896a6b2"
>
<NameSpaces>
</NameSpaces>
<Enumerations>
<Enum
 Default="DMI.IN.Acknowledgements.AckTypeEnum.Undefined"
 X="250"
 Y="200"
 Width="100"
 Height="50"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="AckTypeEnum"
 Guid="a82af46f-3bd0-4503-b623-eb6c6015e815"
>
<Comment>Possible acknowledgement types.</Comment>
<Values>
<EnumValue
 Value=""
 Name="LSMode"
 Guid="0dda033a-b5b4-45ff-9560-1bda1a232864"
>
</EnumValue><EnumValue
 Value=""
 Name="OSMode"
 Guid="faf7983f-88d7-4b66-a61c-bed4fe61353f"
>
</EnumValue><EnumValue
 Value=""
 Name="SHMode"
 Guid="a99dfc48-8ddd-4da3-a16a-475d5df7bb8b"
>
</EnumValue><EnumValue
 Value=""
 Name="RVMode"
 Guid="2e2eccbe-837e-47ef-860f-4d07d8724edf"
>
</EnumValue><EnumValue
 Value=""
 Name="SNMode"
 Guid="a4a60779-8c57-45de-a3b0-9360e8bca4b2"
>
</EnumValue><EnumValue
 Value=""
 Name="SRMode"
 Guid="10cd6011-ddeb-426c-9387-d5ccf2c0db6a"
>
</EnumValue><EnumValue
 Value=""
 Name="UNMode"
 Guid="b31f15cf-ee2c-4a24-89be-46e18d99650d"
>
</EnumValue><EnumValue
 Value=""
 Name="TrainTrip"
 Guid="063c9ae1-c286-4440-ba83-b2e5ba636b95"
>
</EnumValue><EnumValue
 Value=""
 Name="LevelTransition"
 Guid="997ee0a1-a08a-4284-8ad5-c2be04a9b3cf"
>
</EnumValue><EnumValue
 Value=""
 Name="PostTripDistanceExceeded"
 Guid="d26da1ea-e8f8-484a-9926-b4b37bf62ba3"
>
</EnumValue><EnumValue
 Value=""
 Name="ReverseMovementProtection"
 Guid="432ebff6-dbc4-4078-9c41-b5b851be6da5"
>
</EnumValue><EnumValue
 Value=""
 Name="ReversingDistanceExceeded"
 Guid="01832eb4-f393-4329-a37c-e088be46e231"
>
</EnumValue><EnumValue
 Value=""
 Name="RollAwayProtection"
 Guid="5dd45fe7-e0c0-45b0-8f8c-521161380acc"
>
</EnumValue><EnumValue
 Value=""
 Name="StandstillSupervision"
 Guid="b2eb300f-428b-420f-8ec1-b298ffcfc87c"
>
</EnumValue><EnumValue
 Value=""
 Name="PlainTextInformation"
 Guid="4c313c1d-e67b-4c92-b1c0-a645ebcb0dd4"
>
</EnumValue><EnumValue
 Value=""
 Name="FixedTextInformation"
 Guid="9312477e-1e27-4e7b-a87c-068d2eda6b70"
>
</EnumValue><EnumValue
 Value=""
 Name="TrainDataChangeFromOtherSource"
 Guid="8ce440b5-0a30-45b6-b6fd-15d5f200a152"
>
</EnumValue><EnumValue
 Value=""
 Name="Undefined"
 Guid="48124aaa-bafc-4ee3-8865-eeae70c4753f"
>
</EnumValue></Values>
</Enum></Enumerations>
<Structures>
<Structure
 Default=""
 X="10"
 Y="200"
 Width="100"
 Height="50"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="AcknowledgementStruct"
 Guid="0777a085-5fc4-4ea7-9fe2-03ce6382e632"
>
<Comment>Represents an acknowledgement. Contains the acknowledgement type and, in case of text acknowledgements, the text to acknowledge.</Comment>
<StructureElement
 TypeName="AckTypeEnum"
 Default=""
 Mode="Internal"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Type"
 Guid="d2a4f1b3-22e2-4318-bf7f-57ee5189c951"
>
<Comment>The type of the acknowledgement.</Comment>
</StructureElement><StructureElement
 TypeName="LevelDataStruct"
 Default=""
 Mode="Internal"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Level"
 Guid="1a40a251-aaa8-4822-bcc8-738962e71249"
>
<Comment>If the current acknowledgement is a level transition acknowledgement, this field contains the level to acknowledge.</Comment>
</StructureElement><StructureElement
 TypeName="Kernel.TextMessages.PlainTextMessageStruct"
 Mode="Internal"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="PlainTextMessage"
 Guid="393c4145-84a3-41bf-98bf-7b46f7844d94"
>
<Comment>If the current acknowledgement is a plain text message acknowledgement, this field contains the message to acknowledge.</Comment>
</StructureElement><StructureElement
 TypeName="Kernel.TextMessages.FixedTextMessageStruct"
 Mode="Internal"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="FixedTextMessage"
 Guid="8e11d458-e7e9-4437-90cb-9bcac2679ad9"
>
<Comment>If the current acknowledgement is a fixed text message acknowledgement, this field contains the message to acknowledge.</Comment>
</StructureElement></Structure></Structures>
<Collections>
<Collection
 TypeName="AcknowledgementStruct"
 Default="[]"
 X="10"
 Y="120"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="AcknowledgementsCol"
 Guid="d5db5bd6-49fe-4e3c-be03-c002216cad3f"
>
<ReqRef
 Id="ccc55fee-cf12-4cb6-a94e-b1ac9643bd74"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="2fd49f06-3ade-4a0b-9db2-5023cde63475"
>
</ReqRef><Comment>Collection of acknowledgements.</Comment>
</Collection></Collections>
<Functions>
<Function
 Type="InputInformationStruct"
 Default=""
 X="10"
 Y="290"
 Width="100"
 Height="50"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="FindDMIStructure"
 Guid="ecea8373-15fd-4952-8da7-3d1613666651"
>
<Comment>Converts the acknowledgement type to the corresponding DMI structure.</Comment>
<Parameters>
<Parameter
 Type="AckTypeEnum"
 Name="anAck"
 Guid="a0f76de7-744e-4021-81c5-bded3f857e2f"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="Fixed text information"
 Guid="c59913cc-8a34-41bd-b5ad-a1e5eb99414e"
>
<PreConditions>
<PreCondition
 Guid="6443a54c-8ca3-48ed-bb3e-0a2c7161189c"
>anAck == DMI.IN.Acknowledgements.AckTypeEnum.FixedTextInformation</PreCondition></PreConditions>
<Expression>DMI.MasterDMI().In_AcknOfFixedTextInformation.InputInformation</Expression>
</Case><Case
 Name="Level transition"
 Guid="333f2897-0441-46fc-9c41-b5b7e6c806c0"
>
<PreConditions>
<PreCondition
 Guid="56a383e9-8c1a-4da2-aa1e-489ed51ab0e7"
>anAck == DMI.IN.Acknowledgements.AckTypeEnum.LevelTransition</PreCondition></PreConditions>
<Expression>DMI.MasterDMI().In_AcknOfLevelTransition.InputInformation</Expression>
</Case><Case
 Name="LS mode"
 Guid="5b77d47d-dbc0-4749-8f4c-4f5b1a1dec13"
>
<PreConditions>
<PreCondition
 Guid="c2c935c8-c400-42f3-8f4a-f1117e4158af"
>anAck == DMI.IN.Acknowledgements.AckTypeEnum.LSMode</PreCondition></PreConditions>
<Expression>DMI.MasterDMI().In_AcknOfLSMode.InputInformation</Expression>
</Case><Case
 Name="OS mode"
 Guid="59d3f49e-24b9-44f8-9d77-3d3824e123ff"
>
<PreConditions>
<PreCondition
 Guid="10d1d615-6ed6-41ab-861d-c8f77c774d59"
>anAck == DMI.IN.Acknowledgements.AckTypeEnum.OSMode</PreCondition></PreConditions>
<Expression>DMI.MasterDMI().In_AcknOfOSMode.InputInformation</Expression>
</Case><Case
 Name="Plain text information"
 Guid="395d3df9-d472-4588-a803-f539aff8d2dd"
>
<PreConditions>
<PreCondition
 Guid="91e23ce8-75d7-4097-b442-b348fdf5c292"
>anAck == DMI.IN.Acknowledgements.AckTypeEnum.PlainTextInformation</PreCondition></PreConditions>
<Expression>DMI.MasterDMI().In_AcknOfPlainTextInformation.InputInformation</Expression>
</Case><Case
 Name="Post trip distance exceeded"
 Guid="9ad55fe4-77f4-4638-a888-8a0a0d54ad64"
>
<PreConditions>
<PreCondition
 Guid="02141e7a-2ff9-45eb-849a-519f447281c0"
>anAck == DMI.IN.Acknowledgements.AckTypeEnum.PostTripDistanceExceeded</PreCondition></PreConditions>
<Expression>DMI.MasterDMI().In_AcknForPostTripDistanceExceeded.InputInformation</Expression>
</Case><Case
 Name="Reverse movement protection"
 Guid="309ce76a-3e7e-4511-a39a-6bf403297d93"
>
<PreConditions>
<PreCondition
 Guid="0229427c-e40b-4ce0-87b0-d03d0bf8d1aa"
>anAck == DMI.IN.Acknowledgements.AckTypeEnum.ReverseMovementProtection</PreCondition></PreConditions>
<Expression>DMI.MasterDMI().In_AcknForReverseMovementProtection.InputInformation</Expression>
</Case><Case
 Name="Reversing distance exceeded"
 Guid="66be5d09-d2c1-4a99-8adc-1b0ee8a396e3"
>
<PreConditions>
<PreCondition
 Guid="696595c7-9ec9-4c28-99aa-13f69426617d"
>anAck == DMI.IN.Acknowledgements.AckTypeEnum.ReversingDistanceExceeded</PreCondition></PreConditions>
<Expression>DMI.MasterDMI().In_AcknForReversingDistanceExceeded.InputInformation</Expression>
</Case><Case
 Name="Roll away protection"
 Guid="b45b1751-3548-425c-966a-d830df533749"
>
<PreConditions>
<PreCondition
 Guid="a28592e9-1ba4-4292-9e8d-7556c267038c"
>anAck == DMI.IN.Acknowledgements.AckTypeEnum.RollAwayProtection</PreCondition></PreConditions>
<Expression>DMI.MasterDMI().In_AcknForRollAwayProtection.InputInformation</Expression>
</Case><Case
 Name="RV mode"
 Guid="d7348eb8-d608-4995-b6e2-c8356f03b228"
>
<PreConditions>
<PreCondition
 Guid="fd59e668-0887-41fe-aa11-e8612ebdad9c"
>anAck == DMI.IN.Acknowledgements.AckTypeEnum.RVMode</PreCondition></PreConditions>
<Expression>DMI.MasterDMI().In_AcknOfRVMode.InputInformation</Expression>
</Case><Case
 Name="SH mode"
 Guid="5fb86942-bf42-49fa-93ee-768773e2f363"
>
<PreConditions>
<PreCondition
 Guid="23d928be-cfcc-493d-aa3d-7fe62d7b82d4"
>anAck == DMI.IN.Acknowledgements.AckTypeEnum.SHMode</PreCondition></PreConditions>
<Expression>DMI.MasterDMI().In_AcknOfSHMode.InputInformation</Expression>
</Case><Case
 Name="SN mode"
 Guid="b8fac5c8-e09c-4187-bba4-158edb6d2a5e"
>
<PreConditions>
<PreCondition
 Guid="b0077805-c3ee-4123-9cf8-90f0628ba3fc"
>anAck == DMI.IN.Acknowledgements.AckTypeEnum.SNMode</PreCondition></PreConditions>
<Expression>DMI.MasterDMI().In_AcknOfSNMode.InputInformation</Expression>
</Case><Case
 Name="SR mode"
 Guid="c45734f7-6997-4af6-9944-690b299d9751"
>
<PreConditions>
<PreCondition
 Guid="47b20794-d0ec-46fb-903e-d957ed2666a2"
>anAck == DMI.IN.Acknowledgements.AckTypeEnum.SRMode</PreCondition></PreConditions>
<Expression>DMI.MasterDMI().In_AcknOfSRMode.InputInformation</Expression>
</Case><Case
 Name="Standstill supervision"
 Guid="6d56151d-efac-4a4c-b3db-99cb827b2314"
>
<PreConditions>
<PreCondition
 Guid="9707f684-f7ee-4157-aa79-1f90c0b653b5"
>anAck == DMI.IN.Acknowledgements.AckTypeEnum.StandstillSupervision</PreCondition></PreConditions>
<Expression>DMI.MasterDMI().In_AcknForStandstillSupervision.InputInformation</Expression>
</Case><Case
 Name="Train data change from other source"
 Guid="09bfd43e-013f-46e8-b931-0f527488ec6a"
>
<PreConditions>
<PreCondition
 Guid="c0880109-f4c9-40c2-9beb-e598a85f88eb"
>anAck == DMI.IN.Acknowledgements.AckTypeEnum.TrainDataChangeFromOtherSource</PreCondition></PreConditions>
<Expression>DMI.MasterDMI().In_AcknOfTrainDataChangeFromOtherSource.InputInformation</Expression>
</Case><Case
 Name="Train trip"
 Guid="d6aef83a-9457-4629-b64f-ca74b8f768f5"
>
<PreConditions>
<PreCondition
 Guid="86267c88-3628-4274-89ca-4b68f4c87719"
>anAck == DMI.IN.Acknowledgements.AckTypeEnum.TrainTrip</PreCondition></PreConditions>
<Expression>DMI.MasterDMI().In_AcknOfTrainTrip.InputInformation</Expression>
</Case><Case
 Name="UN mode"
 Guid="4ea39ad5-3613-4580-b7da-6e54208efca7"
>
<PreConditions>
<PreCondition
 Guid="6c354d46-9789-4a54-ba36-5770a1259bf6"
>anAck == DMI.IN.Acknowledgements.AckTypeEnum.UNMode</PreCondition></PreConditions>
<Expression>DMI.MasterDMI().In_AcknOfUNMode.InputInformation</Expression>
</Case></Cases>
</Function><Function
 Type="Boolean"
 Default=""
 X="130"
 Y="290"
 Width="100"
 Height="50"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="AcknowledgementAlreadyRequested"
 Guid="79948f76-f143-4ea3-a100-b5b8fe155115"
>
<Comment>Indicates if the acknowledgement provided as parameter is already requested.</Comment>
<Parameters>
<Parameter
 Type="AcknowledgementStruct"
 Name="anAck"
 Guid="e93a7744-8103-402f-bb56-f65680d386cf"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="Acknowledgement is in FIFO"
 Guid="a3aad52b-b492-4091-8442-8d4eafcd97cc"
>
<PreConditions>
<PreCondition
 Guid="a8c776d2-d76d-45f4-8372-7d5f144b8a6b"
>THERE_IS Ack IN DMI.IN.Acknowledgements.Acknowledgements | Ack == anAck</PreCondition></PreConditions>
<Expression>True</Expression>
</Case><Case
 Name="Acknowledgement is displayed, fixed text information"
 Guid="952b2e25-a7be-4606-adb3-946ad7dbf264"
>
<PreConditions>
<PreCondition
 Guid="e99f2a0f-e29a-48ef-9495-d81af331b46a"
>anAck.Type == DMI.IN.Acknowledgements.AckTypeEnum.FixedTextInformation</PreCondition><PreCondition
 Guid="8e2cc8a3-63fd-46f8-8ee3-2459c57e50a4"
>DMI.MasterDMI().In_AcknOfFixedTextInformation.Message == anAck.FixedTextMessage</PreCondition></PreConditions>
<Expression>DMI.MasterDMI().In_AcknOfFixedTextInformation.InputInformation.RequestStatus == RequestEnum.Request</Expression>
</Case><Case
 Name="Acknowledgement is displayed, plain text information"
 Guid="1698f55f-64c8-4c81-bbac-68e6ada495d7"
>
<PreConditions>
<PreCondition
 Guid="19821586-e405-461d-98a7-2baa176aca70"
>anAck.Type == DMI.IN.Acknowledgements.AckTypeEnum.PlainTextInformation</PreCondition><PreCondition
 Guid="65b5dafe-5c33-4134-8649-2d851d567819"
>DMI.MasterDMI().In_AcknOfPlainTextInformation.Message == anAck.PlainTextMessage</PreCondition></PreConditions>
<Expression>DMI.MasterDMI().In_AcknOfPlainTextInformation.InputInformation.RequestStatus == RequestEnum.Request</Expression>
</Case><Case
 Name="Acknowledgement is displayed, level transition"
 Guid="8dfbc3f9-4dc6-4634-82bf-018ffa3f9ee4"
>
<PreConditions>
<PreCondition
 Guid="5f76ca96-363f-40f5-91ce-ef57d1b14531"
>anAck.Type == DMI.IN.Acknowledgements.AckTypeEnum.LevelTransition</PreCondition><PreCondition
 Guid="e17252a9-92c2-4b6a-bd9c-0e77dadfe11f"
>DMI.MasterDMI().In_AcknOfLevelTransition.Level == anAck.Level</PreCondition></PreConditions>
<Expression>DMI.MasterDMI().In_AcknOfLevelTransition.InputInformation.RequestStatus == RequestEnum.Request</Expression>
</Case><Case
 Name="Acknowledgement is displayed, other types"
 Guid="b28c90c5-eb44-4915-b871-670d00e36a91"
>
<Expression>DMI.IN.Acknowledgements.FindDMIStructure( anAck =&gt; anAck.Type ).RequestStatus == RequestEnum.Request</Expression>
</Case><Case
 Name="Otherwise"
 Guid="f11e3a28-087b-45f6-93e8-2689213ac28f"
>
<Expression>False</Expression>
</Case></Cases>
</Function></Functions>
<Procedures>
<Procedure
 X="10"
 Y="380"
 Width="100"
 Height="50"
 Name="DisplayAcknowledgement"
 Guid="23cdc73d-a5d1-4e72-a028-ae71e6bae6ac"
>
<ReqRef
 Id="ccc55fee-cf12-4cb6-a94e-b1ac9643bd74"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="1fab6d33-3364-4682-b80d-03ab6c26722f"
>
</ReqRef><Comment>When an acknowledgement can be displayed (there is no other acknowledgement being displayed and 1 second interval has elapsed from the last acknowledgement), the first acknowledgement in the FIFO is displayed.</Comment>
<Rules>
<Rule
 Priority="Processing"
 Name="Display acknowledgement"
 Guid="c7e527c8-0596-4858-891b-2d659b647f26"
>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Name="Display acknowledgement"
 Guid="bc832c89-7983-450a-93bc-6e33a8a59cd5"
>
<PreConditions>
<PreCondition
 Guid="71ef5e84-9a54-4720-98af-7984189a661c"
>DMI.IN.Acknowledgements.Acknowledgements != []</PreCondition></PreConditions>
<Actions>
</Actions>
<SubRules>
<Rule
 Priority="Processing"
 Name="Display the first acknowledgement"
 Guid="aef22033-51de-4cf3-9624-35878fc053eb"
>
<Comment>If the first acknowledgement in the FIFO is acknowledgement for a fixed text information, display the corresponding text.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Name="Display the first acknowledgement"
 Guid="352cd135-76df-4610-b4c9-95af3f1f9272"
>
<PreConditions>
</PreConditions>
<Actions>
<Action
 Guid="79227b68-79a6-49a8-a778-0c20d4e365a2"
>DMI.IN.Acknowledgements.FindDMIStructure( anAck =&gt; (FIRST X IN DMI.IN.Acknowledgements.Acknowledgements).Type ).InitiateRequest()</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 Name="Handle special cases"
 Guid="3355dd44-b750-4e07-8bea-cc4e9bb6664b"
>
<Comment>Handles the fields relative to the text messages or level transitions, if any.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 NeedsRequirement="FALSE"
 Name="Fixed text information"
 Guid="8d0ac80b-db55-449c-a448-887699a94582"
>
<Comment>If the first acknowledgement in the FIFO is acknowledgement for fixed text information, display it.</Comment>
<PreConditions>
<PreCondition
 Guid="f452f880-ffda-4ee9-98cd-10b7a3ace314"
>(FIRST Ack IN DMI.IN.Acknowledgements.Acknowledgements).Type == DMI.IN.Acknowledgements.AckTypeEnum.FixedTextInformation</PreCondition></PreConditions>
<Actions>
<Action
 Guid="2155274f-5ec7-4899-a5ce-2c15266e57b7"
>DMI.MasterDMI().In_AcknOfFixedTextInformation.Message &lt;- (FIRST Ack IN DMI.IN.Acknowledgements.Acknowledgements).FixedTextMessage</Action></Actions>
</RuleCondition><RuleCondition
 NeedsRequirement="FALSE"
 Name="Plain text information"
 Guid="a7cd7215-1d0b-4fe9-a26d-50bd4de05f67"
>
<Comment>If the first acknowledgement in the FIFO is acknowledgement for a plain text information, display the corresponding text.</Comment>
<PreConditions>
<PreCondition
 Guid="80d87f94-3fef-457f-9ea4-6cd52cbb0b8f"
>(FIRST Ack IN DMI.IN.Acknowledgements.Acknowledgements).Type == DMI.IN.Acknowledgements.AckTypeEnum.PlainTextInformation</PreCondition></PreConditions>
<Actions>
<Action
 Guid="f7d3dd16-4133-4aad-9a4e-edd3b4993732"
>DMI.MasterDMI().In_AcknOfPlainTextInformation.Message &lt;- (FIRST Ack IN DMI.IN.Acknowledgements.Acknowledgements).PlainTextMessage</Action></Actions>
</RuleCondition><RuleCondition
 Name="Level transition"
 Guid="c38297d8-4b10-41a3-b5e0-67a7efb59a5d"
>
<Comment>If the first acknowledgement in the FIFO is acknowledgement for a level transition, display the corresponding level.</Comment>
<PreConditions>
<PreCondition
 Guid="82f781ca-6535-406a-ab48-9cefe9ce47b3"
>(FIRST Ack IN DMI.IN.Acknowledgements.Acknowledgements).Type == DMI.IN.Acknowledgements.AckTypeEnum.LevelTransition</PreCondition></PreConditions>
<Actions>
<Action
 Guid="2ab0dc5d-097c-431e-9e7d-e33a1781913f"
>DMI.MasterDMI().In_AcknOfLevelTransition.Level &lt;- (FIRST Ack IN DMI.IN.Acknowledgements.Acknowledgements).Level</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 Name="Remove the displayed acknowledgement"
 Guid="c9db9b36-f698-4139-bef6-bb4eda9e3a54"
>
<Comment>The displayed acknowledgement is removed.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Name="Remove the displayed acknowledgement"
 Guid="35ead2e3-fbed-4917-b3c4-c57429eed002"
>
<PreConditions>
</PreConditions>
<Actions>
<Action
 Guid="14f81e7f-fff4-49bf-8116-70f09fecc3cd"
>REMOVE FIRST IN DMI.IN.Acknowledgements.Acknowledgements</Action></Actions>
</RuleCondition></Conditions>
</Rule></SubRules>
</RuleCondition></Conditions>
</Rule></Rules>
</Procedure><Procedure
 X="130"
 Y="380"
 Width="100"
 Height="50"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="RemoveAcknowledgement"
 Guid="d0b6b9a9-c075-4981-9aab-a4c61261fcf4"
>
<Comment>Removes the acknowledgement provided as parameters from the list of acknowledgements to display.</Comment>
<Parameters>
<Parameter
 Type="AckTypeEnum"
 Name="AcknowledgementType"
 Guid="e40f8839-9431-438d-9872-e3c42bd37e28"
>
</Parameter></Parameters>
<Rules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Remove the provided acknowledgement from the FIFO"
 Guid="b46b1355-a1db-49b9-a643-d6f49461856a"
>
<Comment>Remove the provided acknowledgement from the FIFO.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Remove the provided acknowledgement from the FIFO"
 Guid="6aa33b35-7009-4b61-bbec-81a179892456"
>
<PreConditions>
</PreConditions>
<Actions>
<Action
 Guid="519ce4a2-3a2d-429c-a30e-a8f808e0cb1e"
>REMOVE FIRST X.Type == AcknowledgementType IN Acknowledgements</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="If the acknowledgement is already displayed, stop the display"
 Guid="1f87b4a2-2780-4998-abb1-167c5183d254"
>
<Comment>If the acknowledgement is already displayed, stop the display.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="If the acknowledgement is already displayed, stop the display"
 Guid="ea41fb60-dd14-4a07-9b93-e1b04e2ce3c3"
>
<PreConditions>
</PreConditions>
<Actions>
<Action
 Guid="5af13712-2075-4220-8604-764ff4d06a55"
>DMI.IN.Acknowledgements.FindDMIStructure( anAck =&gt; AcknowledgementType ).Disable()</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</Procedure><Procedure
 X="250"
 Y="380"
 Width="100"
 Height="50"
 Name="AddAcknowledgement"
 Guid="9aa818b9-4945-4c43-80c2-ed0ee886f3cc"
>
<ReqRef
 Id="69800a7a-752e-4dc5-b1a8-68ee2e692560"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="20fa99ff-fd53-4075-95ff-9a4c4f7b4972"
>
</ReqRef><Comment>Adds a new acknowledgement in the FIFO of acknowledgements. The acknowledgements of the same type are not added, except in case of text acknowledgements.</Comment>
<Parameters>
<Parameter
 Type="AckTypeEnum"
 Name="anAcknowledgement"
 Guid="ef7639a4-46a2-4f5d-aa1f-c248ac0af0fd"
>
</Parameter><Parameter
 Type="LevelDataStruct"
 Name="aLevel"
 Guid="1739fe24-c542-40c9-9280-7648fe17568c"
>
</Parameter><Parameter
 Type="Kernel.TextMessages.FixedTextMessageStruct"
 Name="aFixedTextMessage"
 Guid="09abe501-74e2-448b-8213-ab2e07c66b63"
>
</Parameter><Parameter
 Type="Kernel.TextMessages.PlainTextMessageStruct"
 Name="aPlainTextMessage"
 Guid="c5a5cb3f-21ae-407e-8fc1-badc8c435039"
>
</Parameter></Parameters>
<Rules>
<Rule
 Priority="Processing"
 Name="Add acknowledgement"
 Guid="99407627-48e6-48a3-8172-b118e64f8876"
>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Name="Add acknowledgement"
 Guid="337da90b-a5a7-4981-87f7-0f3f2889c9ba"
>
<PreConditions>
<PreCondition
 Guid="97516a52-9004-4c56-a36f-f6b38bd3c816"
>NOT THERE_IS Ack IN DMI.IN.Acknowledgements.Acknowledgements | Ack.Type == anAcknowledgement
  OR
anAcknowledgement == DMI.IN.Acknowledgements.AckTypeEnum.FixedTextInformation
  OR
anAcknowledgement == DMI.IN.Acknowledgements.AckTypeEnum.PlainTextInformation</PreCondition></PreConditions>
<Actions>
<Action
 Guid="73715758-ee84-42f3-a7a8-3dc20c12ed28"
>INSERT
  DMI.IN.Acknowledgements.AcknowledgementStruct
  {
    Type =&gt; anAcknowledgement,
    Level =&gt; aLevel,
    FixedTextMessage =&gt; aFixedTextMessage,
    PlainTextMessage =&gt; aPlainTextMessage
  }
IN
  DMI.IN.Acknowledgements.Acknowledgements</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</Procedure></Procedures>
<Variables>
<Variable
 Type="BaseTypes.Time"
 DefaultValue="5.0"
 VariableMode="Constant"
 X="130"
 Y="10"
 Width="100"
 Height="50"
 Pinned="TRUE"
 Implemented="TRUE"
 Name="Tack"
 Guid="43415c9b-e244-4abb-aaaa-f0d95525304d"
>
<ReqRef
 Id="c3352be2-25f7-499e-b638-51b4b8e180ed"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="bbd8432f-8d4f-4582-983c-aac72dc81350"
>
</ReqRef><ReqRef
 Id="19ba3404-792f-4f75-a058-7b89395bce5c"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="efe26c5b-b4e8-4fb4-839e-e3779f0c9df3"
>
</ReqRef><ReqRef
 Id="f1fefc2b-0ed9-4f11-9b47-0930e4ba5821"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="69e9b17b-6823-4770-b77d-bea6526c3301"
>
</ReqRef><ReqRef
 Id="81394bed-5665-4b0a-a527-9c845c6db537"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="5e92c17e-cc65-4d0d-8ec0-e40f8dad941e"
>
</ReqRef><ReqRef
 Id="c4b29bf1-b564-4981-9967-9bc22c91b8f9"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="660e9c71-4538-4e4f-ae21-4068386c9000"
>
</ReqRef><ReqRef
 Id="33d6b46d-2f8a-4411-8e48-aa43acd4cce3"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="65edfe30-804f-43ae-adbf-6b0bf6282260"
>
</ReqRef><ReqRef
 Id="8c5b881c-69d8-482a-9ec2-98778e9fddc2"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="670b530f-bfe9-4e27-af2a-b2e920b60561"
>
</ReqRef><Comment>Driver acknowledgement time.</Comment>
</Variable><Variable
 Type="AcknowledgementsCol"
 DefaultValue="[]"
 VariableMode="Internal"
 X="10"
 Y="10"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="Acknowledgements"
 Guid="f7e45cc0-d7d4-4ccd-99f9-50def786097b"
>
<ReqRef
 Id="ccc55fee-cf12-4cb6-a94e-b1ac9643bd74"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="32b6175f-3a75-4568-ab7b-4676789da324"
>
</ReqRef><Comment>Collection of acknowledgements, handled as a FIFO.</Comment>
</Variable><Variable
 Type="Boolean"
 DefaultValue="True"
 VariableMode="Internal"
 X="490"
 Y="10"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="DisplayAllowed"
 Guid="171648d3-6816-43b4-a0ea-750351eb49e7"
>
<ReqRef
 Id="ccc55fee-cf12-4cb6-a94e-b1ac9643bd74"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="f58aa596-a129-4379-aaf0-4728153f9ee5"
>
</ReqRef><Comment>Indicates if a new acknowledgement can be displayed. Set to true if there is no other acknowledgement displayed and if at least 1 second has elapsed from the last driver acknowledgement.</Comment>
</Variable><Variable
 Type="BaseTypes.Time"
 DefaultValue="BaseTypes.Time.NA"
 VariableMode="Internal"
 X="250"
 Y="10"
 Width="100"
 Height="50"
 Name="LastDriverAcknowledgementTime"
 Guid="810a392e-876a-41de-9161-096bf6190014"
>
<ReqRef
 Id="ccc55fee-cf12-4cb6-a94e-b1ac9643bd74"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="aaabdd1c-02a1-408c-81e2-9648b60e31d0"
>
</ReqRef><Comment>The time of the last driver acknowledgement. Used to check if the next acknowledgement can be displayed (=&gt; 1 second has elapsed from the last acknowledgement).</Comment>
</Variable><Variable
 Type="BaseTypes.Time"
 DefaultValue="1.0"
 VariableMode="Constant"
 X="370"
 Y="10"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="AcknowledgementInterval"
 Guid="bd70a259-d8c2-4920-b0e5-2c32a32dd90b"
>
<ReqRef
 Id="ccc55fee-cf12-4cb6-a94e-b1ac9643bd74"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="329a5b16-928b-4584-b455-65f5c9895019"
>
</ReqRef><Comment>The interval that has to be elapsed from the last acknowledgement in order to display the next acknowledgement.</Comment>
</Variable></Variables>
<Rules>
<Rule
 Priority="UpdateOUT"
 X="10"
 Y="470"
 Width="100"
 Height="50"
 Name="Display acknowledgement"
 Guid="cbbc98b0-2dd9-4ed0-9745-024638b9e0f1"
>
<ReqRef
 Id="ccc55fee-cf12-4cb6-a94e-b1ac9643bd74"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="a6fdfd7a-1470-4d38-b0c6-c2325fdb787f"
>
</ReqRef><Comment>If a new acknowledgement can be displayed and if there are acknowledgements to display, then the first acknowledgement is displayed.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Name="Display acknowledgement"
 Guid="48071a66-2787-466d-a663-a78e14c2606d"
>
<PreConditions>
<PreCondition
 Guid="ff7b5079-8cd8-40d2-8535-5410d87ab8f5"
>DMI.IN.Acknowledgements.Acknowledgements != []</PreCondition><PreCondition
 Guid="e285aee6-28af-4b3d-b0f0-1b595e052b5b"
>DMI.IN.Acknowledgements.DisplayAllowed</PreCondition></PreConditions>
<Actions>
<Action
 Guid="5c54291b-5813-4d6f-8419-5befb1cba05e"
>DMI.IN.Acknowledgements.DisplayAcknowledgement()</Action><Action
 Guid="be98d11f-a18d-491b-9892-ed233d96af66"
>DMI.IN.Acknowledgements.DisplayAllowed &lt;- False</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="CleanUp"
 X="130"
 Y="470"
 Width="100"
 Height="50"
 Name="Update permission to display"
 Guid="528e6078-c25e-461d-82f0-ec1251d5f8f0"
>
<ReqRef
 Id="ccc55fee-cf12-4cb6-a94e-b1ac9643bd74"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="fbb54166-86b8-4e5e-8b23-c805ee18fc85"
>
</ReqRef><Comment>A new acknowledgement can be displayed if no other acknowledgement is being displayed and if 1 second has elapsed from the response of the driver.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Name="Update permission to display"
 Guid="34e87d81-cad2-423f-ac04-5cd4dbd1d575"
>
<PreConditions>
<PreCondition
 Guid="3a65010c-6a46-4d91-abe1-07a6848dcd4c"
>DMI.IN.Acknowledgements.DisplayAllowed == False</PreCondition><PreCondition
 Guid="56e29de6-6f87-4f2e-b74e-27fd7c6bc295"
>DMI.IN.Acknowledgements.LastDriverAcknowledgementTime != BaseTypes.Time.NA</PreCondition><PreCondition
 Guid="424e8fc8-9992-4ec9-bf32-2689f8f02756"
>DMI.IN.Acknowledgements.LastDriverAcknowledgementTime + DMI.IN.Acknowledgements.AcknowledgementInterval &lt;= Kernel.DateAndTime.CurrentTime</PreCondition></PreConditions>
<Actions>
<Action
 Guid="8e93fb8b-6fc9-419c-b817-ffa5046117a8"
>DMI.IN.Acknowledgements.LastDriverAcknowledgementTime &lt;- BaseTypes.Time.NA</Action><Action
 Guid="a1c0a642-3dd4-462f-9ea6-c5995e05d660"
>DMI.IN.Acknowledgements.DisplayAllowed &lt;- True</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</NameSpace>
