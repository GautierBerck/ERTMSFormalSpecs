<Frame
 CycleDuration="Kernel.CycleDuration"
 Name="Targets and brake deceleration curves - Functional tests"
>
<SubSequences>
<SubSequence
 D_LRBG=""
 Level=""
 Mode=""
 NID_LRBG=""
 Q_DIRLRBG=""
 Q_DIRTRAIN=""
 Q_DLRBG=""
 RBC_ID=""
 RBCPhone=""
 Name="Compute EBD and SBD"
>
<TestCases>
<TestCase
 Feature="0"
 Case="0"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Setup"
>
<Steps>
<Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 Name="Step1 - Initialize train data"
>
<SubSteps>
<SubStep
 Name="Sub-step1"
>
<Actions>
<Action>Kernel.InitializeTestEnvironment()</Action></Actions>
</SubStep></SubSteps>
</Step><Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 Name="Step2 - Setup"
>
<SubSteps>
<SubStep
 Name="Sub-step1"
>
<Actions>
<Action>BTM.LRBG &lt;- BTM.BaliseGroup
{
    NID =&gt; 9616,
    Orientation =&gt; Orientation.Nominal,
    Position =&gt; BTM.Position
    {
        OverReadingAmountOdo =&gt; 1.0,
        Position =&gt; 0.0,
        UnderReadingAmountOdo =&gt; 2.0
    }
}</Action><Action>Kernel.TSR.TSRs &lt;- []</Action><Action>Odometry.NominalDistance &lt;- 2000.0</Action><Action>Kernel.MA.MA &lt;- EMPTY</Action><Action>Kernel.Level.Value &lt;- Level.L1</Action><Action>Kernel.Mode &lt;- Mode.LS</Action><Action>Kernel.TrackDescription.Gradient.Gradients &lt;- 
[
    Kernel.TrackDescription.Gradient.GradientInfo
    {
        Gradient =&gt; 0.004,
        Location =&gt; 1400.0
    },
    Kernel.TrackDescription.Gradient.GradientInfo
    {
        Gradient =&gt; 0.007,
        Location =&gt; 2600.0
    },
    Kernel.TrackDescription.Gradient.GradientInfo
    {
        Gradient =&gt; 0.002,
        Location =&gt; 5000.0
    },
    Kernel.TrackDescription.Gradient.GradientInfo
    {
        Gradient =&gt; 0.0,
        Location =&gt; 5700.0
    }
]</Action><Action>Kernel.NationalValues.ApplicableNationalValues &lt;- Kernel.NationalValues.NationalValues
{
    DataState =&gt; DataState.Valid,
    NID_C =&gt; 42,
    ApplicableDistance =&gt; 0.0,
    Value =&gt; Kernel.NationalValues.NationalDefaultData
    {
        ConfLevelForEmergBrakeSafeDecelerationOnDryRails =&gt; Messages.M_NVEBCL.Confidence_level___99_99,
        MaxDecelValueUnderReducedAdhesionCond1 =&gt; 0.2,
        MaxDecelValueUnderReducedAdhesionCond2 =&gt; 0.4,
        MaxDecelValueUnderReducedAdhesionCond3 =&gt; 0.7,
        WeightingFactorForAvailableWheelRailAdhesion =&gt; 0.2
    }
}</Action><Action>Kernel.TrackDescription.AdhesionFactors.AdhFactors &lt;-
[
    Kernel.TrackDescription.AdhesionFactors.AdhesionFactor
    {
        Distance =&gt; 1500.0,
        Length =&gt; 100.0,
        Value =&gt; Messages.M_ADHESION.Slippery_rail
    },
    Kernel.TrackDescription.AdhesionFactors.AdhesionFactor
    {
        Distance =&gt; 4000.0,
        Length =&gt; 500.0,
        Value =&gt; Messages.M_ADHESION.Slippery_rail
    }
]</Action><Action>Kernel.TrackDescription.TrackConditions.TCProfile &lt;- Kernel.TrackDescription.TrackConditions.TrackConditionProfile
{
    Conditions =&gt; 
    [
        Kernel.TrackDescription.TrackConditions.TrackConditionInformation
        {
            Distance =&gt; 1000.0,
            Length =&gt; 400.0,
            Value =&gt; Kernel.TrackDescription.TrackConditions.TrackCondition
            {
                SwitchOffEddyCurrentBrakeForEB =&gt; False,
                SwitchOffMagneticShoeBrake =&gt; False,
                SwitchOffRegenerativeBrake =&gt; True
            }
        },
        Kernel.TrackDescription.TrackConditions.TrackConditionInformation
        {
            Distance =&gt; 3000.0,
            Length =&gt; 1000.0,
            Value =&gt; Kernel.TrackDescription.TrackConditions.TrackCondition
            {
                SwitchOffEddyCurrentBrakeForEB =&gt; False,
                SwitchOffMagneticShoeBrake =&gt; True,
                SwitchOffRegenerativeBrake =&gt; True
            }
        },
        Kernel.TrackDescription.TrackConditions.TrackConditionInformation
        {
            Distance =&gt; 7000.0,
            Length =&gt; 700.0,
            Value =&gt; Kernel.TrackDescription.TrackConditions.TrackCondition
            {
                SwitchOffEddyCurrentBrakeForEB =&gt; False,
                SwitchOffMagneticShoeBrake =&gt; True,
                SwitchOffRegenerativeBrake =&gt; False
            }
        }
    ]
}</Action><Action>Kernel.TrainData.TrainData.DataState &lt;- Default.DataState.Valid</Action><Action>Kernel.TrainData.TrainData.Value.TrainLength &lt;- 100.0</Action><Action>Kernel.TrainData.TrainData.Value.MaximumSpeed &lt;- 110.0</Action><Action>Kernel.TrainData.TrainData.Value.M_rotating_nom &lt;- 0.05</Action><Action>Kernel.TrainData.TrainData.Value.BrakePosition &lt;- Kernel.TrainData.BrakingParameters.BrakePositions.FreightTrainInG</Action><Action>Kernel.TrainData.TrainData.Value.EddyCurrentBrake &lt;- Kernel.TrainData.BrakingParameters.SpecialBrake
{
    IsActive =&gt; True,
    InterfaceStatus =&gt; Kernel.TrainData.BrakingParameters.BrakeInterfaceStatus.Both
}</Action><Action>Kernel.TrainData.TrainData.Value.MagneticShoeBrake &lt;- Kernel.TrainData.BrakingParameters.SpecialBrake
{
    IsActive =&gt; True,
    InterfaceStatus =&gt; Kernel.TrainData.BrakingParameters.BrakeInterfaceStatus.Both
}</Action><Action>Kernel.TrainData.TrainData.Value.RegenerativeBrake &lt;- Kernel.TrainData.BrakingParameters.SpecialBrake
{
    IsActive =&gt; True,
    InterfaceStatus =&gt; Kernel.TrainData.BrakingParameters.BrakeInterfaceStatus.EB
}</Action><Action>Kernel.TrainData.TrainData.Value.TrainCategories &lt;- Kernel.TrainData.TrainCategories
{
    CantDeficiency =&gt; Messages.NC_CDTRAIN.Cant_Deficiency_210_mm,
    OtherInternational =&gt; [Kernel.TrainData.TrainCategory.FreightTrainInP]
}</Action><Action>Kernel.TrainData.TrainData.Value.EBModels &lt;- Kernel.TrainData.BrakingParameters.EBModelSet
{
    ModelSet =&gt; Kernel.TrainData.BrakingParameters.BrakingModelSet
    {
        EddyCurrent =&gt; Kernel.TrainData.BrakingParameters.BrakingModel
        {
            Val0 =&gt; Kernel.TrainData.BrakingParameters.BrakingModelValue
            {
                SpeedStep =&gt; 0.0,
                Acceleration =&gt; 0.3
            },
            Val1 =&gt; Kernel.TrainData.BrakingParameters.BrakingModelValue
            {
                SpeedStep =&gt; 30.0,
                Acceleration =&gt; 0.21
            },
            Val2 =&gt; Kernel.TrainData.BrakingParameters.BrakingModelValue
            {
                SpeedStep =&gt; 60.0,
                Acceleration =&gt; 0.18
            },
            Val3 =&gt; Kernel.TrainData.BrakingParameters.BrakingModelValue
            {
                SpeedStep =&gt; 100.0,
                Acceleration =&gt; 0.11
            }
        },
        EddyCurrent_Magnetic =&gt; Kernel.TrainData.BrakingParameters.BrakingModel
        {
            Val0 =&gt; Kernel.TrainData.BrakingParameters.BrakingModelValue
            {
                SpeedStep =&gt; 0.0,
                Acceleration =&gt; 0.8
            },
            Val1 =&gt; Kernel.TrainData.BrakingParameters.BrakingModelValue
            {
                SpeedStep =&gt; 25.0,
                Acceleration =&gt; 0.75
            },
            Val2 =&gt; Kernel.TrainData.BrakingParameters.BrakingModelValue
            {
                SpeedStep =&gt; 40.0,
                Acceleration =&gt; 0.7
            },
            Val3 =&gt; Kernel.TrainData.BrakingParameters.BrakingModelValue
            {
                SpeedStep =&gt; 80.0,
                Acceleration =&gt; 0.6
            },
            Val4 =&gt; Kernel.TrainData.BrakingParameters.BrakingModelValue
            {
                SpeedStep =&gt; 120.0,
                Acceleration =&gt; 0.4
            },
            Val5 =&gt; Kernel.TrainData.BrakingParameters.BrakingModelValue
            {
                SpeedStep =&gt; 180.0,
                Acceleration =&gt; 0.3
            },
            Val6 =&gt; Kernel.TrainData.BrakingParameters.BrakingModelValue
            {
                SpeedStep =&gt; 250.0,
                Acceleration =&gt; 0.2
            }
        },
        EddyCurrent_Regenerative =&gt; Kernel.TrainData.BrakingParameters.BrakingModel
        {
            Val0 =&gt; Kernel.TrainData.BrakingParameters.BrakingModelValue
            {
                SpeedStep =&gt; 0.0,
                Acceleration =&gt; 0.99
            },
            Val1 =&gt; Kernel.TrainData.BrakingParameters.BrakingModelValue
            {
                SpeedStep =&gt; 40.0,
                Acceleration =&gt; 0.9
            },
            Val2 =&gt; Kernel.TrainData.BrakingParameters.BrakingModelValue
            {
                SpeedStep =&gt; 80.0,
                Acceleration =&gt; 0.8
            },
            Val3 =&gt; Kernel.TrainData.BrakingParameters.BrakingModelValue
            {
                SpeedStep =&gt; 120.0,
                Acceleration =&gt; 0.7
            },
            Val4 =&gt; Kernel.TrainData.BrakingParameters.BrakingModelValue
            {
                SpeedStep =&gt; 150.0,
                Acceleration =&gt; 0.6
            },
            Val5 =&gt; Kernel.TrainData.BrakingParameters.BrakingModelValue
            {
                SpeedStep =&gt; 190.0,
                Acceleration =&gt; 0.5
            },
            Val6 =&gt; Kernel.TrainData.BrakingParameters.BrakingModelValue
            {
                SpeedStep =&gt; 220.0,
                Acceleration =&gt; 0.45
            }
        },
        EddyCurrent_Magnetic_Regenerative =&gt; Kernel.TrainData.BrakingParameters.BrakingModel
        {
            Val0 =&gt; Kernel.TrainData.BrakingParameters.BrakingModelValue
            {
                SpeedStep =&gt; 0.0,
                Acceleration =&gt; 0.999
            },
            Val1 =&gt; Kernel.TrainData.BrakingParameters.BrakingModelValue
            {
                SpeedStep =&gt; 40.0,
                Acceleration =&gt; 0.95
            },
            Val2 =&gt; Kernel.TrainData.BrakingParameters.BrakingModelValue
            {
                SpeedStep =&gt; 80.0,
                Acceleration =&gt; 0.9
            },
            Val3 =&gt; Kernel.TrainData.BrakingParameters.BrakingModelValue
            {
                SpeedStep =&gt; 120.0,
                Acceleration =&gt; 0.8
            },
            Val4 =&gt; Kernel.TrainData.BrakingParameters.BrakingModelValue
            {
                SpeedStep =&gt; 170.0,
                Acceleration =&gt; 0.7
            },
            Val5 =&gt; Kernel.TrainData.BrakingParameters.BrakingModelValue
            {
                SpeedStep =&gt; 220.0,
                Acceleration =&gt; 0.6
            },
            Val6 =&gt; Kernel.TrainData.BrakingParameters.BrakingModelValue
            {
                SpeedStep =&gt; 270.0,
                Acceleration =&gt; 0.4
            }
        }
    },
    Kdry_rstValuesSet =&gt; Kernel.TrainData.BrakingParameters.Kdry_rstValuesSet
    {
        EddyCurrent =&gt; Kernel.TrainData.BrakingParameters.Kdry_rstValues
        {
            Cl__90 =&gt; Kernel.TrainData.BrakingParameters.CorrectFactorValue
            {
                CF0 =&gt; 0.12,
                CF1 =&gt; 0.17,
                CF2 =&gt; 0.28,
                CF3 =&gt; 0.35,
                CF4 =&gt; 0.49,
                CF5 =&gt; 0.68,
                CF6 =&gt; 0.9
            },
            Cl__99 =&gt; Kernel.TrainData.BrakingParameters.CorrectFactorValue
            {
                CF0 =&gt; 0.08,
                CF1 =&gt; 0.14,
                CF2 =&gt; 0.2,
                CF3 =&gt; 0.25,
                CF4 =&gt; 0.43,
                CF5 =&gt; 0.65,
                CF6 =&gt; 0.8
            },
            Cl__99_99 =&gt; Kernel.TrainData.BrakingParameters.CorrectFactorValue
            {
                CF0 =&gt; 0.09,
                CF1 =&gt; 0.15,
                CF2 =&gt; 0.19,
                CF3 =&gt; 0.25,
                CF4 =&gt; 0.3,
                CF5 =&gt; 0.4,
                CF6 =&gt; 0.55
            }
        },
        EddyCurrent_Magnetic =&gt; Kernel.TrainData.BrakingParameters.Kdry_rstValues
        {
            Cl__90 =&gt; Kernel.TrainData.BrakingParameters.CorrectFactorValue
            {
                CF0 =&gt; 0.1,
                CF1 =&gt; 0.17,
                CF2 =&gt; 0.24,
                CF3 =&gt; 0.37,
                CF4 =&gt; 0.45,
                CF5 =&gt; 0.69,
                CF6 =&gt; 0.92
            },
            Cl__99 =&gt; Kernel.TrainData.BrakingParameters.CorrectFactorValue
            {
                CF0 =&gt; 0.02,
                CF1 =&gt; 0.07,
                CF2 =&gt; 0.2,
                CF3 =&gt; 0.28,
                CF4 =&gt; 0.4,
                CF5 =&gt; 0.67,
                CF6 =&gt; 0.81
            },
            Cl__99_99 =&gt; Kernel.TrainData.BrakingParameters.CorrectFactorValue
            {
                CF0 =&gt; 0.03,
                CF1 =&gt; 0.08,
                CF2 =&gt; 0.12,
                CF3 =&gt; 0.17,
                CF4 =&gt; 0.24,
                CF5 =&gt; 0.38,
                CF6 =&gt; 0.52
            }
        },
        EddyCurrent_Regenerative =&gt; Kernel.TrainData.BrakingParameters.Kdry_rstValues
        {
            Cl__90 =&gt; Kernel.TrainData.BrakingParameters.CorrectFactorValue
            {
                CF0 =&gt; 0.04,
                CF1 =&gt; 0.05,
                CF2 =&gt; 0.08,
                CF3 =&gt; 0.19,
                CF4 =&gt; 0.24,
                CF5 =&gt; 0.35,
                CF6 =&gt; 0.42
            },
            Cl__99 =&gt; Kernel.TrainData.BrakingParameters.CorrectFactorValue
            {
                CF0 =&gt; 0.01,
                CF1 =&gt; 0.04,
                CF2 =&gt; 0.1,
                CF3 =&gt; 0.19,
                CF4 =&gt; 0.28,
                CF5 =&gt; 0.43,
                CF6 =&gt; 0.69
            },
            Cl__99_99 =&gt; Kernel.TrainData.BrakingParameters.CorrectFactorValue
            {
                CF0 =&gt; 0.01,
                CF1 =&gt; 0.02,
                CF2 =&gt; 0.04,
                CF3 =&gt; 0.09,
                CF4 =&gt; 0.18,
                CF5 =&gt; 0.22,
                CF6 =&gt; 0.35
            }
        },
        EddyCurrent_Magnetic_Regenerative =&gt; Kernel.TrainData.BrakingParameters.Kdry_rstValues
        {
            Cl__90 =&gt; Kernel.TrainData.BrakingParameters.CorrectFactorValue
            {
                CF0 =&gt; 0.1,
                CF1 =&gt; 0.24,
                CF2 =&gt; 0.32,
                CF3 =&gt; 0.47,
                CF4 =&gt; 0.58,
                CF5 =&gt; 0.74,
                CF6 =&gt; 0.92
            },
            Cl__99 =&gt; Kernel.TrainData.BrakingParameters.CorrectFactorValue
            {
                CF0 =&gt; 0.07,
                CF1 =&gt; 0.12,
                CF2 =&gt; 0.19,
                CF3 =&gt; 0.28,
                CF4 =&gt; 0.37,
                CF5 =&gt; 0.58,
                CF6 =&gt; 0.64
            },
            Cl__99_99 =&gt; Kernel.TrainData.BrakingParameters.CorrectFactorValue
            {
                CF0 =&gt; 0.02,
                CF1 =&gt; 0.07,
                CF2 =&gt; 0.12,
                CF3 =&gt; 0.15,
                CF4 =&gt; 0.22,
                CF5 =&gt; 0.37,
                CF6 =&gt; 0.42
            }
        }
    },
    Kwet_rstValuesSet =&gt; Kernel.TrainData.BrakingParameters.Kwet_rstValuesSet
    {
        EddyCurrent =&gt; Kernel.TrainData.BrakingParameters.CorrectFactorValue
        {
            CF0 =&gt; 0.04,
            CF1 =&gt; 0.11,
            CF2 =&gt; 0.3,
            CF3 =&gt; 0.49,
            CF4 =&gt; 0.54,
            CF5 =&gt; 0.59,
            CF6 =&gt; 0.76
        },
        EddyCurrent_Magnetic =&gt; Kernel.TrainData.BrakingParameters.CorrectFactorValue
        {
            CF0 =&gt; 0.07,
            CF1 =&gt; 0.12,
            CF2 =&gt; 0.2,
            CF3 =&gt; 0.4,
            CF4 =&gt; 0.47,
            CF5 =&gt; 0.55,
            CF6 =&gt; 0.71
        },
        EddyCurrent_Regenerative =&gt; Kernel.TrainData.BrakingParameters.CorrectFactorValue
        {
            CF0 =&gt; 0.1,
            CF1 =&gt; 0.18,
            CF2 =&gt; 0.24,
            CF3 =&gt; 0.33,
            CF4 =&gt; 0.4,
            CF5 =&gt; 0.5,
            CF6 =&gt; 0.81
        },
        EddyCurrent_Magnetic_Regenerative =&gt; Kernel.TrainData.BrakingParameters.CorrectFactorValue
        {
            CF0 =&gt; 0.21,
            CF1 =&gt; 0.32,
            CF2 =&gt; 0.4,
            CF3 =&gt; 0.48,
            CF4 =&gt; 0.62,
            CF5 =&gt; 0.74,
            CF6 =&gt; 0.85
        }
    }
}</Action><Action>Kernel.TrainData.TrainData.Value.SBModels &lt;- Kernel.TrainData.BrakingParameters.SBModelSet
{
    ModelSet =&gt; Kernel.TrainData.BrakingParameters.BrakingModelSet
    {
        EddyCurrent =&gt; Kernel.TrainData.BrakingParameters.BrakingModel
        {
            Val0 =&gt; Kernel.TrainData.BrakingParameters.BrakingModelValue
            {
                SpeedStep =&gt; 0.0,
                Acceleration =&gt; 0.8
            },
            Val1 =&gt; Kernel.TrainData.BrakingParameters.BrakingModelValue
            {
                SpeedStep =&gt; 30.0,
                Acceleration =&gt; 0.65
            },
            Val2 =&gt; Kernel.TrainData.BrakingParameters.BrakingModelValue
            {
                SpeedStep =&gt; 60.0,
                Acceleration =&gt; 0.49
            },
            Val3 =&gt; Kernel.TrainData.BrakingParameters.BrakingModelValue
            {
                SpeedStep =&gt; 100.0,
                Acceleration =&gt; 0.38
            },
            Val4 =&gt; Kernel.TrainData.BrakingParameters.BrakingModelValue
            {
                SpeedStep =&gt; 150.0,
                Acceleration =&gt; 0.31
            },
            Val5 =&gt; Kernel.TrainData.BrakingParameters.BrakingModelValue
            {
                SpeedStep =&gt; 180.0,
                Acceleration =&gt; 0.27
            },
            Val6 =&gt; Kernel.TrainData.BrakingParameters.BrakingModelValue
            {
                SpeedStep =&gt; 240.0,
                Acceleration =&gt; 0.2
            }
        },
        Regenerative =&gt; Kernel.TrainData.BrakingParameters.BrakingModel
        {
            Val0 =&gt; Kernel.TrainData.BrakingParameters.BrakingModelValue
            {
                SpeedStep =&gt; 0.0,
                Acceleration =&gt; 0.8
            },
            Val1 =&gt; Kernel.TrainData.BrakingParameters.BrakingModelValue
            {
                SpeedStep =&gt; 25.0,
                Acceleration =&gt; 0.75
            },
            Val2 =&gt; Kernel.TrainData.BrakingParameters.BrakingModelValue
            {
                SpeedStep =&gt; 40.0,
                Acceleration =&gt; 0.7
            },
            Val3 =&gt; Kernel.TrainData.BrakingParameters.BrakingModelValue
            {
                SpeedStep =&gt; 80.0,
                Acceleration =&gt; 0.6
            },
            Val4 =&gt; Kernel.TrainData.BrakingParameters.BrakingModelValue
            {
                SpeedStep =&gt; 120.0,
                Acceleration =&gt; 0.4
            },
            Val5 =&gt; Kernel.TrainData.BrakingParameters.BrakingModelValue
            {
                SpeedStep =&gt; 180.0,
                Acceleration =&gt; 0.3
            },
            Val6 =&gt; Kernel.TrainData.BrakingParameters.BrakingModelValue
            {
                SpeedStep =&gt; 250.0,
                Acceleration =&gt; 0.2
            }
        },
        EddyCurrent_Regenerative =&gt; Kernel.TrainData.BrakingParameters.BrakingModel
        {
            Val0 =&gt; Kernel.TrainData.BrakingParameters.BrakingModelValue
            {
                SpeedStep =&gt; 0.0,
                Acceleration =&gt; 0.92
            },
            Val1 =&gt; Kernel.TrainData.BrakingParameters.BrakingModelValue
            {
                SpeedStep =&gt; 40.0,
                Acceleration =&gt; 0.81
            },
            Val2 =&gt; Kernel.TrainData.BrakingParameters.BrakingModelValue
            {
                SpeedStep =&gt; 80.0,
                Acceleration =&gt; 0.6
            },
            Val3 =&gt; Kernel.TrainData.BrakingParameters.BrakingModelValue
            {
                SpeedStep =&gt; 120.0,
                Acceleration =&gt; 0.46
            },
            Val4 =&gt; Kernel.TrainData.BrakingParameters.BrakingModelValue
            {
                SpeedStep =&gt; 150.0,
                Acceleration =&gt; 0.27
            },
            Val5 =&gt; Kernel.TrainData.BrakingParameters.BrakingModelValue
            {
                SpeedStep =&gt; 190.0,
                Acceleration =&gt; 0.22
            },
            Val6 =&gt; Kernel.TrainData.BrakingParameters.BrakingModelValue
            {
                SpeedStep =&gt; 220.0,
                Acceleration =&gt; 0.11
            }
        },
        EddyCurrent_Magnetic_Regenerative =&gt; Kernel.TrainData.BrakingParameters.BrakingModel
        {
            Val0 =&gt; Kernel.TrainData.BrakingParameters.BrakingModelValue
            {
                SpeedStep =&gt; 0.0,
                Acceleration =&gt; 0.9
            },
            Val1 =&gt; Kernel.TrainData.BrakingParameters.BrakingModelValue
            {
                SpeedStep =&gt; 40.0,
                Acceleration =&gt; 0.87
            },
            Val2 =&gt; Kernel.TrainData.BrakingParameters.BrakingModelValue
            {
                SpeedStep =&gt; 80.0,
                Acceleration =&gt; 0.8
            },
            Val3 =&gt; Kernel.TrainData.BrakingParameters.BrakingModelValue
            {
                SpeedStep =&gt; 120.0,
                Acceleration =&gt; 0.7
            },
            Val4 =&gt; Kernel.TrainData.BrakingParameters.BrakingModelValue
            {
                SpeedStep =&gt; 170.0,
                Acceleration =&gt; 0.6
            },
            Val5 =&gt; Kernel.TrainData.BrakingParameters.BrakingModelValue
            {
                SpeedStep =&gt; 220.0,
                Acceleration =&gt; 0.4
            },
            Val6 =&gt; Kernel.TrainData.BrakingParameters.BrakingModelValue
            {
                SpeedStep =&gt; 270.0,
                Acceleration =&gt; 0.2
            }
        }
    }
}</Action><Action>Kernel.TrainData.TrainData.Value.T_brake_emergency &lt;- Kernel.TrainData.BrakingParameters.T_brake_build_upSet
{
    EddyCurrent =&gt; 12.0,
    EddyCurrent_Magnetic =&gt; 14.0,
    EddyCurrent_Regenerative =&gt; 17.2,
    EddyCurrent_Ep =&gt; 8.3,
    Magnetic_Regenerative =&gt; 16.7,
    Magnetic_Ep =&gt; 15.0,
    Regenerative_Ep =&gt; 16.0,
    EddyCurrent_Magnetic_Regenerative =&gt; 4.4,
    EddyCurrent_Magnetic_Ep =&gt; 8.1,
    EddyCurrent_Regenerative_Ep =&gt; 8.6,
    Magnetic_Regenerative_Ep =&gt; 12.0,
    EddyCurrent_Magnetic_Regenerative_Ep =&gt; 2.1,
    Magnetic =&gt; 2.9,
    Regenerative =&gt; 3.7,
    Ep =&gt; 4.5
}</Action><Action>Kernel.TrainData.TrainData.Value.T_brake_service &lt;- Kernel.TrainData.BrakingParameters.T_brake_build_upSet
{
    EddyCurrent =&gt; 12.1,
    EddyCurrent_Magnetic =&gt; 5.6,
    EddyCurrent_Regenerative =&gt; 6.3,
    EddyCurrent_Ep =&gt; 6.4,
    Magnetic_Regenerative =&gt; 7.1,
    Magnetic_Ep =&gt; 7.8,
    Regenerative_Ep =&gt; 2.1,
    EddyCurrent_Magnetic_Regenerative =&gt; 6.5,
    EddyCurrent_Magnetic_Ep =&gt; 10.3,
    EddyCurrent_Regenerative_Ep =&gt; 8.9,
    Magnetic_Regenerative_Ep =&gt; 6.2,
    EddyCurrent_Magnetic_Regenerative_Ep =&gt; 11.8,
    Magnetic =&gt; 12.4,
    Regenerative =&gt; 12.1,
    Ep =&gt; 11.0
}</Action><Action>Kernel.TrainIntegrity &lt;- Kernel.TrainIntegrity
{
    Status =&gt; Messages.Q_LENGTH.Train_integrity_confirmed_by_driver,
    SafeTrainLength =&gt; 500.0,
    DataState =&gt; DataState.Valid
}</Action><Action>Odometry.Accuracy &lt;- Odometry.OdometerAccuracy
{
    D_ura =&gt; 12.0,
    D_ora =&gt; 15.0,
    V_ora =&gt; 0.0,
    V_ura =&gt; 0.0
}</Action><Action>Kernel.TrackDescription.StaticSpeedProfile.SSP &lt;-
[
    Kernel.TrackDescription.StaticSpeedProfile.StaticSpeedRestriction
    {
        Distance =&gt; 190.0,
        BasicSpeed =&gt; 70.0,
        TrainLengthDelay =&gt; Messages.Q_FRONT.No_train_length_delay_on_validity_end_point_of_profile_element,
        Categories =&gt;
        [
            Kernel.TrackDescription.StaticSpeedProfile.SSPCategory
            {
                CantDeficiency =&gt; Messages.NC_CDTRAIN.Cant_Deficiency_130_mm,
                OtherSpecific =&gt; Kernel.TrainData.TrainCategory.FreightTrainInG,
                Qualifier =&gt; Messages.Q_DIFF.Cant_Deficiency_specific_category ,
                Speed =&gt; 190.0
            }
        ]
    }
]</Action></Actions>
</SubStep></SubSteps>
</Step></Steps>
</TestCase><TestCase
 Feature="0"
 Case="0"
 Implemented="TRUE"
 Name="Receive MA"
>
<ReqRef
 Id="d949102e-f89b-489f-8acc-cf60824bd0e5"
>
</ReqRef><Steps>
<Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 Name="Step1 - Provide MA"
>
<SubSteps>
<SubStep
 Name="Sub-step1"
>
<Actions>
<Action>BTM.Message &lt;- Messages.EUROBALISE.Message
{
    Q_UPDOWN=&gt;Messages.Q_UPDOWN.Up_link_telegram,
    M_VERSION=&gt;1,
    Q_MEDIA=&gt;Messages.Q_MEDIA.Balise,
    N_PIG=&gt;8,
    N_TOTAL=&gt;0,
    M_DUP=&gt;Messages.M_DUP.No_duplicates,
    M_MCOUNT=&gt;4,
    NID_C=&gt;140,
    NID_BG=&gt;2124,
    Q_LINK=&gt;Messages.Q_LINK.Linked,
    Sequence1=&gt;
    [
        Messages.EUROBALISE.SubStructure1
        {
            TRACK_TO_TRAIN=&gt;Messages.PACKET.TRACK_TO_TRAIN.Message
            {
                LEVEL_1_MOVEMENT_AUTHORITY=&gt;Messages.PACKET.TRACK_TO_TRAIN.LEVEL_1_MOVEMENT_AUTHORITY.Message
                {
                    NID_PACKET=&gt;8,
                    Q_DIR=&gt;Messages.Q_DIR.Nominal,
                    L_PACKET=&gt;400,
                    Q_SCALE=&gt;Messages.Q_SCALE._1_m_scaleC,
                    V_MAIN=&gt;14,
                    V_LOA=&gt;0,
                    T_LOA=&gt;200,
                    N_ITER=&gt;4,
                    Sequence1=&gt;
                    [
                        Messages.PACKET.TRACK_TO_TRAIN.LEVEL_1_MOVEMENT_AUTHORITY.SubStructure1
                        {
                            L_SECTION=&gt;1200,
                            Q_SECTIONTIMER=&gt;Messages.Q_SECTIONTIMER.Section_Timer_information_to_follow,
                            D_SECTIONTIMERSTOPLOC=&gt;20,
                            T_SECTIONTIMER=&gt;40
                        },
                        Messages.PACKET.TRACK_TO_TRAIN.LEVEL_1_MOVEMENT_AUTHORITY.SubStructure1
                        {
                            L_SECTION=&gt;1400,
                            Q_SECTIONTIMER=&gt;Messages.Q_SECTIONTIMER.No_Section_Timer_information,
                            D_SECTIONTIMERSTOPLOC=&gt;0,
                            T_SECTIONTIMER=&gt;0
                        },
                        Messages.PACKET.TRACK_TO_TRAIN.LEVEL_1_MOVEMENT_AUTHORITY.SubStructure1
                        {
                            L_SECTION=&gt;1000,
                            Q_SECTIONTIMER=&gt;Messages.Q_SECTIONTIMER.Section_Timer_information_to_follow,
                            D_SECTIONTIMERSTOPLOC=&gt;25,
                            T_SECTIONTIMER=&gt;20
                        },
                        Messages.PACKET.TRACK_TO_TRAIN.LEVEL_1_MOVEMENT_AUTHORITY.SubStructure1
                        {
                            L_SECTION=&gt;1400,
                            Q_SECTIONTIMER=&gt;Messages.Q_SECTIONTIMER.Section_Timer_information_to_follow,
                            D_SECTIONTIMERSTOPLOC=&gt;40,
                            T_SECTIONTIMER=&gt;25
                        }
                    ],
                    L_ENDSECTION=&gt;1000,
                    Q_SECTIONTIMER=&gt;Messages.Q_SECTIONTIMER.No_Section_Timer_information,
                    T_SECTIONTIMER=&gt;0,
                    D_SECTIONTIMERSTOPLOC=&gt;0,
                    Q_ENDTIMER=&gt;Messages.Q_ENDTIMER.No_End_section_timer_information,
                    T_ENDTIMER=&gt;0,
                    D_ENDTIMERSTARTLOC=&gt;0,
                    Q_DANGERPOINT=&gt;Messages.Q_DANGERPOINT.Danger_point_information_to_follow,
                    D_DP=&gt;1000,
                    V_RELEASEDP=&gt;8,
                    Q_OVERLAP=&gt;Messages.Q_OVERLAP.Overlap_information_to_follow,
                    D_STARTOL=&gt;100,
                    T_OL=&gt;40,
                    D_OL=&gt;1500,
                    V_RELEASEOL=&gt;7
                }
            }
        }
    ]
}</Action></Actions>
<Expectations>
<Expectation
 Kind="Instantaneous"
>Kernel.SpeedAndDistanceMonitoring.CeilingSupervision.P( 4000.0 ) == 70.0</Expectation><Expectation
 Kind="Instantaneous"
>Kernel.SpeedAndDistanceMonitoring.CeilingSupervision.P( 6000.0 ) == 0.0</Expectation><Expectation
 Kind="Instantaneous"
>Kernel.SpeedAndDistanceMonitoring.CeilingSupervision.P( 8000.0 ) == 0.0</Expectation><Expectation
 Kind="Instantaneous"
>Kernel.SpeedAndDistanceMonitoring.CeilingSupervision.P( 2000.0 ) == 70.0</Expectation><Expectation
 Kind="Instantaneous"
>Kernel.SpeedAndDistanceMonitoring.CeilingSupervision.P( 7000.0 ) == 0.0</Expectation></Expectations>
</SubStep></SubSteps>
</Step></Steps>
</TestCase><TestCase
 Feature="0"
 Case="0"
 Implemented="TRUE"
 Name="Receive TSR"
>
<ReqRef
 Id="d925afa7-0975-42ee-8f81-820493dda041"
>
</ReqRef><Steps>
<Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 Name="Step1 - Provide TSR"
>
<SubSteps>
<SubStep
 Name="Sub-step1"
>
<Actions>
<Action>BTM.Message &lt;- Messages.EUROBALISE.Message
{
    Q_UPDOWN=&gt; Messages.Q_UPDOWN.Up_link_telegram,
    M_VERSION=&gt;1,
    Q_MEDIA=&gt;Messages.Q_MEDIA.Balise,
    N_PIG=&gt;8,
    N_TOTAL=&gt;0,
    M_DUP=&gt;Messages.M_DUP.No_duplicates,
    M_MCOUNT=&gt;4,
    NID_C=&gt;140,
    NID_BG=&gt;2124,
    Q_LINK=&gt;Messages.Q_LINK.Linked,
    Sequence1=&gt;
    [
        Messages.EUROBALISE.SubStructure1
        {
            TRACK_TO_TRAIN=&gt;Messages.PACKET.TRACK_TO_TRAIN.Message
            {
                TEMPORARY_SPEED_RESTRICTION =&gt; Messages.PACKET.TRACK_TO_TRAIN.TEMPORARY_SPEED_RESTRICTION.Message
                {
                    NID_PACKET=&gt;8,
                    Q_DIR=&gt;Messages.Q_DIR.Nominal,
                    L_PACKET=&gt;400,
                    Q_SCALE=&gt;Messages.Q_SCALE._1_m_scaleC,
                    D_TSR =&gt; 4000,
                    L_TSR =&gt; 2500,
                    NID_TSR =&gt; 1515,
                    Q_FRONT =&gt; Messages.Q_FRONT.No_train_length_delay_on_validity_end_point_of_profile_element ,
                    V_TSR =&gt; 5
                }
            }
        }
    ]
}</Action></Actions>
<Expectations>
<Expectation
 Kind="Instantaneous"
>Kernel.SpeedAndDistanceMonitoring.CeilingSupervision.P( 4000.0 ) == 25.0</Expectation><Expectation
 Kind="Instantaneous"
>Kernel.SpeedAndDistanceMonitoring.CeilingSupervision.P( 7000.0 ) == 0.0</Expectation><Expectation
 Kind="Instantaneous"
>Kernel.SpeedAndDistanceMonitoring.CeilingSupervision.P( 8000.0 ) == 0.0</Expectation><Expectation
 Kind="Instantaneous"
>Kernel.SpeedAndDistanceMonitoring.PermittedSpeed ( 2000.0 ) == 70.0</Expectation><Expectation
 Kind="Instantaneous"
>Kernel.SpeedAndDistanceMonitoring.PermittedSpeed ( 2000.0 ) == 70.0</Expectation></Expectations>
</SubStep></SubSteps>
</Step></Steps>
</TestCase><TestCase
 Feature="0"
 Case="0"
 Implemented="TRUE"
 Name="Receive LX"
>
<ReqRef
 Id="f80261a5-4553-4c43-ab09-2cf0da750a7e"
>
</ReqRef><Steps>
<Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 Name="Step1 - Provide LX"
>
<SubSteps>
<SubStep
 Name="Sub-step1"
>
<Actions>
<Action>BTM.Message &lt;- Messages.EUROBALISE.Message
{
    Q_UPDOWN=&gt; Messages.Q_UPDOWN.Up_link_telegram,
    M_VERSION=&gt;1,
    Q_MEDIA=&gt;Messages.Q_MEDIA.Balise,
    N_PIG=&gt;8,
    N_TOTAL=&gt;0,
    M_DUP=&gt;Messages.M_DUP.No_duplicates,
    M_MCOUNT=&gt;4,
    NID_C=&gt;140,
    NID_BG=&gt;2124,
    Q_LINK=&gt;Messages.Q_LINK.Linked,
    Sequence1=&gt;
    [
        Messages.EUROBALISE.SubStructure1
        {
            TRACK_TO_TRAIN=&gt;Messages.PACKET.TRACK_TO_TRAIN.Message
            {
                LEVEL_CROSSING_INFORMATION =&gt; Messages.PACKET.TRACK_TO_TRAIN.LEVEL_CROSSING_INFORMATION.Message
                {
                    NID_PACKET=&gt;88,
                    Q_DIR=&gt;Messages.Q_DIR.Nominal,
                    L_PACKET=&gt;400,
                    Q_SCALE=&gt;Messages.Q_SCALE._1_m_scaleC,
                    NID_LX=&gt;20,
                    D_LX=&gt;2000,
                    L_LX=&gt;250,
                    Q_LXSTATUS=&gt;Messages.Q_LXSTATUS.LX_is_not_protected,
                    V_LX=&gt;4,
                    Q_STOPLX=&gt;Messages.Q_STOPLX.No_stop_required,
                    L_STOPLX=&gt;0
                }
            }
        }
    ]
}</Action></Actions>
<Expectations>
<Expectation
 Kind="Instantaneous"
>Kernel.SpeedAndDistanceMonitoring.CeilingSupervision.P( 4000.0 ) == 25.0</Expectation><Expectation
 Kind="Instantaneous"
>Kernel.SpeedAndDistanceMonitoring.CeilingSupervision.P( 7000.0 ) == 0.0</Expectation><Expectation
 Kind="Instantaneous"
>Kernel.SpeedAndDistanceMonitoring.CeilingSupervision.P( 8000.0 ) == 0.0</Expectation></Expectations>
</SubStep></SubSteps>
</Step></Steps>
</TestCase><TestCase
 Feature="0"
 Case="0"
 NeedsRequirement="FALSE"
 Name="Compute MREBDT"
>
<Steps>
<Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 Name="Step1"
>
<SubSteps>
<SubStep
 Name="Sub-step1"
>
<Actions>
<Action>Odometry.EstimatedAcceleration &lt;- 0.4</Action><Action>Kernel.TrainData.TrainData.Value.TractionModel &lt;- Kernel.TrainData.TractionModel
{
    Coefficient =&gt; 14.0,
    Constant =&gt; 2.0
}</Action><Action>Kernel.TrainData.TrainData.Value.TractionCutOffInterfaceIsImplemented &lt;- Boolean.True</Action></Actions>
<Expectations>
<Expectation
 Kind="Instantaneous"
>Kernel.SpeedAndDistanceMonitoring.TargetSupervision.Vdelta0() == 0.0</Expectation><Expectation
 Kind="Instantaneous"
>Kernel.SpeedAndDistanceMonitoring.TargetSupervision.Vdelta2() == 0.0</Expectation><Expectation
 Kind="Instantaneous"
>Kernel.SpeedAndDistanceMonitoring.TargetSupervision.T_berem() == 0.0</Expectation></Expectations>
</SubStep></SubSteps>
</Step></Steps>
</TestCase></TestCases>
</SubSequence></SubSequences>
</Frame>
