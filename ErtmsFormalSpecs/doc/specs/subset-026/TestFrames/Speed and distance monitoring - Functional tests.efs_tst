<Frame
 CycleDuration="Kernel.CycleDuration"
 Name="Speed and distance monitoring - Functional tests"
>
<SubSequences>
<SubSequence
 D_LRBG=""
 Level=""
 Mode=""
 NID_LRBG=""
 Q_DIRLRBG=""
 Q_DIRTRAIN=""
 Q_DLRBG=""
 RBC_ID=""
 RBCPhone=""
 Name="Combine inputs"
>
<TestCases>
<TestCase
 Feature="0"
 Case="0"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Setup"
>
<Steps>
<Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 Name="Step1 - Initialize test environment"
>
<SubSteps>
<SubStep
 Name="Sub-step1 - Initialize test environment"
>
<Actions>
<Action>Kernel.InitializeTestEnvironment()</Action></Actions>
</SubStep></SubSteps>
</Step><Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 Name="Step2 - Setup"
>
<SubSteps>
<SubStep
 Name="Sub-step1"
>
<Actions>
<Action>BTM.LRBG&lt;- BTM.BaliseGroup{
  NID=&gt;9616,
  Orientation=&gt;Orientation.Nominal,
  Position=&gt;BTM.Position{
    OverReadingAmountOdo=&gt;1.0,
    Position=&gt;0.0,
    UnderReadingAmountOdo=&gt;2.0
  }
}</Action><Action>Kernel.TSR.TSRs &lt;- []</Action><Action>Odometry.NominalDistance &lt;- 2000.0</Action><Action>Kernel.MA.MA &lt;- EMPTY</Action><Action>Kernel.Level.Value &lt;- Level.L1</Action><Action>Kernel.Mode &lt;- Mode.LS</Action><Action>Kernel.TrackDescription.Gradient.Gradients &lt;-
[
    Kernel.TrackDescription.Gradient.GradientInfo
    {
        Location =&gt; 0.0,
        Gradient =&gt; 0.7
    },
    Kernel.TrackDescription.Gradient.GradientInfo
    {
        Location =&gt; 4800.0,
        Gradient =&gt; 0.94
    }
]</Action><Action>Kernel.TrainData.TrainData.Value.TrainCategories &lt;- Kernel.TrainData.TrainCategories
{
    CantDeficiency =&gt; Messages.NC_CDTRAIN.Cant_Deficiency_210_mm,
    OtherInternational =&gt; [Kernel.TrainData.TrainCategory.FreightTrainInP]
}</Action><Action>Kernel.TrainData.TrainData.Value.MaximumSpeed &lt;- 110.0</Action><Action>Kernel.TrainData.TrainData.Value.TrainLength &lt;- 100.0</Action><Action>Kernel.TrainData.TrainData.DataState &lt;- DataState.Valid
 </Action><Action>Kernel.TrainData.TrainData.Value.M_rotating_nom &lt;- 0.05</Action><Action>Kernel.TrackDescription.StaticSpeedProfile.SSP &lt;-
[
    Kernel.TrackDescription.StaticSpeedProfile.StaticSpeedRestriction
    {
        Distance =&gt; 0.0,
        BasicSpeed =&gt; 180.0,
        TrainLengthDelay =&gt; Messages.Q_FRONT.No_train_length_delay_on_validity_end_point_of_profile_element,
        Categories =&gt;
        [
            Kernel.TrackDescription.StaticSpeedProfile.SSPCategory
            {
                CantDeficiency =&gt; Messages.NC_CDTRAIN.Cant_Deficiency_130_mm,
                OtherSpecific =&gt; Kernel.TrainData.TrainCategory.FreightTrainInG,
                Qualifier =&gt; Messages.Q_DIFF.Cant_Deficiency_specific_category ,
                Speed =&gt; 180.0
            }
        ]
    }
]</Action><Action>Kernel.SpeedAndDistanceMonitoring.TrainTripped &lt;- True</Action></Actions>
<Expectations>
<Expectation
 Kind="Instantaneous"
>Kernel.SpeedAndDistanceMonitoring.CeilingSupervision.P ( 0.0 ) == 0.0</Expectation><Expectation
 Kind="Instantaneous"
>Kernel.SpeedAndDistanceMonitoring.CeilingSupervision.P( 1000.0 ) == 0.0</Expectation></Expectations>
</SubStep></SubSteps>
</Step></Steps>
</TestCase><TestCase
 Feature="0"
 Case="0"
 Implemented="TRUE"
 Name="Receive MA"
>
<ReqRef
 Id="d949102e-f89b-489f-8acc-cf60824bd0e5"
>
</ReqRef><Steps>
<Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 Name="Step1 - Provide MA"
>
<SubSteps>
<SubStep
 Name="Sub-step1"
>
<Actions>
<Action>BTM.Message &lt;- Messages.EUROBALISE.Message
{
    Q_UPDOWN=&gt;Messages.Q_UPDOWN.Up_link_telegram,
    M_VERSION=&gt;1,
    Q_MEDIA=&gt;Messages.Q_MEDIA.Balise,
    N_PIG=&gt;8,
    N_TOTAL=&gt;0,
    M_DUP=&gt;Messages.M_DUP.No_duplicates,
    M_MCOUNT=&gt;4,
    NID_C=&gt;140,
    NID_BG=&gt;2124,
    Q_LINK=&gt;Messages.Q_LINK.Linked,
    Sequence1=&gt;
    [
        Messages.EUROBALISE.SubStructure1
        {
            TRACK_TO_TRAIN=&gt;Messages.PACKET.TRACK_TO_TRAIN.Message
            {
                LEVEL_1_MOVEMENT_AUTHORITY=&gt;Messages.PACKET.TRACK_TO_TRAIN.LEVEL_1_MOVEMENT_AUTHORITY.Message
                {
                    NID_PACKET=&gt;8,
                    Q_DIR=&gt;Messages.Q_DIR.Nominal,
                    L_PACKET=&gt;400,
                    Q_SCALE=&gt;Messages.Q_SCALE._1_m_scaleC,
                    V_MAIN=&gt;14,
                    V_LOA=&gt;0,
                    T_LOA=&gt;200,
                    N_ITER=&gt;4,
                    Sequence1=&gt;
                    [
                        Messages.PACKET.TRACK_TO_TRAIN.LEVEL_1_MOVEMENT_AUTHORITY.SubStructure1
                        {
                            L_SECTION=&gt;1200,
                            Q_SECTIONTIMER=&gt;Messages.Q_SECTIONTIMER.Section_Timer_information_to_follow,
                            D_SECTIONTIMERSTOPLOC=&gt;20,
                            T_SECTIONTIMER=&gt;40
                        },
                        Messages.PACKET.TRACK_TO_TRAIN.LEVEL_1_MOVEMENT_AUTHORITY.SubStructure1
                        {
                            L_SECTION=&gt;1400,
                            Q_SECTIONTIMER=&gt;Messages.Q_SECTIONTIMER.No_Section_Timer_information,
                            D_SECTIONTIMERSTOPLOC=&gt;0,
                            T_SECTIONTIMER=&gt;0
                        },
                        Messages.PACKET.TRACK_TO_TRAIN.LEVEL_1_MOVEMENT_AUTHORITY.SubStructure1
                        {
                            L_SECTION=&gt;1000,
                            Q_SECTIONTIMER=&gt;Messages.Q_SECTIONTIMER.Section_Timer_information_to_follow,
                            D_SECTIONTIMERSTOPLOC=&gt;25,
                            T_SECTIONTIMER=&gt;20
                        },
                        Messages.PACKET.TRACK_TO_TRAIN.LEVEL_1_MOVEMENT_AUTHORITY.SubStructure1
                        {
                            L_SECTION=&gt;1400,
                            Q_SECTIONTIMER=&gt;Messages.Q_SECTIONTIMER.Section_Timer_information_to_follow,
                            D_SECTIONTIMERSTOPLOC=&gt;40,
                            T_SECTIONTIMER=&gt;25
                        }
                    ],
                    L_ENDSECTION=&gt;1000,
                    Q_SECTIONTIMER=&gt;Messages.Q_SECTIONTIMER.No_Section_Timer_information,
                    T_SECTIONTIMER=&gt;0,
                    D_SECTIONTIMERSTOPLOC=&gt;0,
                    Q_ENDTIMER=&gt;Messages.Q_ENDTIMER.No_End_section_timer_information,
                    T_ENDTIMER=&gt;0,
                    D_ENDTIMERSTARTLOC=&gt;0,
                    Q_DANGERPOINT=&gt;Messages.Q_DANGERPOINT.Danger_point_information_to_follow,
                    D_DP=&gt;1000,
                    V_RELEASEDP=&gt;8,
                    Q_OVERLAP=&gt;Messages.Q_OVERLAP.Overlap_information_to_follow,
                    D_STARTOL=&gt;100,
                    T_OL=&gt;40,
                    D_OL=&gt;1500,
                    V_RELEASEOL=&gt;7
                }
            }
        }
    ]
}</Action></Actions>
<Expectations>
<Expectation
 Kind="Instantaneous"
>Kernel.SpeedAndDistanceMonitoring.CeilingSupervision.P( 4000.0 ) == 70.0</Expectation><Expectation
 Kind="Instantaneous"
>Kernel.SpeedAndDistanceMonitoring.CeilingSupervision.P( 6000.0 ) == 0.0</Expectation><Expectation
 Kind="Instantaneous"
>Kernel.SpeedAndDistanceMonitoring.CeilingSupervision.P( 8000.0 ) == 0.0</Expectation><Expectation
 Kind="Instantaneous"
>Kernel.SpeedAndDistanceMonitoring.CeilingSupervision.P( 2000.0 ) == 70.0</Expectation><Expectation
 Kind="Instantaneous"
>Kernel.SpeedAndDistanceMonitoring.CeilingSupervision.P( 7000.0 ) == 0.0</Expectation></Expectations>
</SubStep></SubSteps>
</Step></Steps>
</TestCase><TestCase
 Feature="0"
 Case="0"
 Implemented="TRUE"
 Name="Receive National values"
>
<ReqRef
 Id="aee41b7b-392b-4306-b271-aa82bdfb015f"
>
</ReqRef><Steps>
<Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 Name="Step1 - Provide applicable NV"
>
<SubSteps>
<SubStep
 Name="Sub-step1"
>
<Actions>
<Action>BTM.Message &lt;- Messages.EUROBALISE.Message
{
    Q_UPDOWN=&gt; Messages.Q_UPDOWN.Up_link_telegram,
    M_VERSION=&gt;1,
    Q_MEDIA=&gt;Messages.Q_MEDIA.Balise,
    N_PIG=&gt;8,
    N_TOTAL=&gt;0,
    M_DUP=&gt;Messages.M_DUP.No_duplicates,
    M_MCOUNT=&gt;4,
    NID_C=&gt;140,
    NID_BG=&gt;2124,
    Q_LINK=&gt;Messages.Q_LINK.Linked,
    Sequence1=&gt;
    [
        Messages.EUROBALISE.SubStructure1
        {
            TRACK_TO_TRAIN=&gt;Messages.PACKET.TRACK_TO_TRAIN.Message
            {
                NATIONAL_VALUES =&gt; Messages.PACKET.TRACK_TO_TRAIN.NATIONAL_VALUES.Message
                {
                    NID_PACKET =&gt; 3,
                    L_PACKET =&gt; 200,
                    Q_DIR =&gt; Messages.Q_DIR.Nominal,
                    Q_SCALE =&gt; Messages.Q_SCALE._10_cm_scaleC,
                    D_VALIDNV =&gt; 0,
                    Q_NVDRIVER_ADHES =&gt; Messages.Q_NVDRIVER_ADHES.Allowed,
                    V_NVSHUNT =&gt; 10,
                    V_NVSTFF =&gt; 16,
                    V_NVONSIGHT =&gt; 22,
                    V_NVLIMSUPERV =&gt; 12,
                    V_NVUNFIT =&gt; 14,
                    V_NVREL =&gt; 8,
                    D_NVROLL =&gt; 1200,
                    Q_NVSBTSMPERM =&gt; Messages.Q_NVSBTSMPERM.Yes,
                    Q_NVEMRRLS =&gt;Messages.Q_NVEMRRLS.Revoke_emergency_brake_command_at_standstill,
                    Q_NVGUIPERM =&gt; Messages.Q_NVGUIPERM.Yes,
                    Q_NVSBFBPERM =&gt; Messages.Q_NVSBFBPERM.No,
                    Q_NVINHSMICPERM =&gt; Messages.Q_NVINHSMICPERM.Yes,
                    V_NVALLOWOVTRP =&gt; 9,
                    V_NVSUPOVTRP =&gt; 11,
                    D_NVOVTRP =&gt; 2000,
                    T_NVOVTRP =&gt; 150,
                    M_NVDERUN =&gt; Messages.M_NVDERUN.Yes,
                    M_NVCONTACT =&gt; Messages.M_NVCONTACT.Train_trip,
                    T_NVCONTACT =&gt; 400,
                    D_NVPOTRP =&gt; 8000,
                    D_NVSTFF =&gt; 7000,
                    Q_NVLOCACC =&gt; 10,
                    M_NVAVADH =&gt; 4,
                    M_NVEBCL =&gt; Messages.M_NVEBCL.Confidence_level___99_9,
                    L_NVKRINT =&gt; Messages.L_NVKRINT._0mC,
                    M_NVKRINT =&gt; 20,
                    Sequence5 =&gt;
                    [
                        Messages.PACKET.TRACK_TO_TRAIN.NATIONAL_VALUES.SubStructure5
                        {
                            L_NVKRINT =&gt; Messages.L_NVKRINT._150mC,
                            M_NVKRINT =&gt; 20
                        },
                        Messages.PACKET.TRACK_TO_TRAIN.NATIONAL_VALUES.SubStructure5
                        {
                            L_NVKRINT =&gt; Messages.L_NVKRINT._1100mC,
                            M_NVKRINT =&gt; 28
                        }
                    ],
                    Q_NVKINT =&gt; Messages.Q_NVKINT.Integrated_correction_factors_follow,
                    Q_NVKVINTSET =&gt; Messages.Q_NVKVINTSET.Conventional_passenger_trains,
                    A_NVP12 =&gt; 12,
                    A_NVP23 =&gt; 15,
                    V_NVKVINT =&gt; 4,
                    M_NVKVINT_0 =&gt; 22,
                    M_NVKVINT_1 =&gt; 39,
                    Sequence2 =&gt;
                    [
                        Messages.PACKET.TRACK_TO_TRAIN.NATIONAL_VALUES.SubStructure2
                        {
                            V_NVKVINT =&gt; 8,
                            M_NVKVINT_0 =&gt; 26,
                            M_NVKVINT_1 =&gt; 40
                        },
                        Messages.PACKET.TRACK_TO_TRAIN.NATIONAL_VALUES.SubStructure2
                        {
                            V_NVKVINT =&gt; 10,
                            M_NVKVINT_0 =&gt; 30,
                            M_NVKVINT_1 =&gt; 57
                        },
                        Messages.PACKET.TRACK_TO_TRAIN.NATIONAL_VALUES.SubStructure2
                        {
                            V_NVKVINT =&gt; 14,
                            M_NVKVINT_0 =&gt; 40,
                            M_NVKVINT_1 =&gt; 80
                        },
                        Messages.PACKET.TRACK_TO_TRAIN.NATIONAL_VALUES.SubStructure2
                        {
                            V_NVKVINT =&gt; 18,
                            M_NVKVINT_0 =&gt; 60,
                            M_NVKVINT_1 =&gt; 100
                        }
                    ],
                    Sequence4 =&gt;
                    [
                        Messages.PACKET.TRACK_TO_TRAIN.NATIONAL_VALUES.SubStructure3
                        {
                            Q_NVKVINTSET =&gt; Messages.Q_NVKVINTSET.Freight_trains,
                            A_NVP12 =&gt; 16,
                            A_NVP23 =&gt; 20,
                            V_NVKVINT =&gt; 8,
                            M_NVKVINT_0 =&gt; 40,
                            M_NVKVINT_1 =&gt; 50,
                            Sequence3 =&gt;
                            [
                                Messages.PACKET.TRACK_TO_TRAIN.NATIONAL_VALUES.SubStructure4
                                {
                                    V_NVKVINT =&gt; 14,
                                    M_NVKVINT_0 =&gt; 64,
                                    M_NVKVINT_1 =&gt; 80
                                },
                                Messages.PACKET.TRACK_TO_TRAIN.NATIONAL_VALUES.SubStructure4
                                {
                                    V_NVKVINT =&gt; 18,
                                    M_NVKVINT_0 =&gt; 80,
                                    M_NVKVINT_1 =&gt; 100
                                }
                            ]
                        }
                    ],
                    M_NVKTINT =&gt; 25,
                    A_NVMAXREDADH1 =&gt; 10,
                    A_NVMAXREDADH2 =&gt; 7,
                    A_NVMAXREDADH3 =&gt; 5
                }
            }
        }
    ]
}</Action></Actions>
<Expectations>
<Expectation
 Kind="Instantaneous"
>Kernel.SpeedAndDistanceMonitoring.CeilingSupervision.P( 4000.0 ) == 60.0</Expectation><Expectation
 Kind="Instantaneous"
>Kernel.SpeedAndDistanceMonitoring.CeilingSupervision.P( 2000.0 ) == 60.0</Expectation><Expectation
 Kind="Instantaneous"
>Kernel.SpeedAndDistanceMonitoring.CeilingSupervision.P( 6000.0 ) == 0.0</Expectation><Expectation
 Kind="Instantaneous"
>Kernel.SpeedAndDistanceMonitoring.CeilingSupervision.P( 8000.0 ) == 0.0</Expectation><Expectation
 Kind="Instantaneous"
>Kernel.SpeedAndDistanceMonitoring.CeilingSupervision.P( 7000.0 ) == 0.0</Expectation></Expectations>
</SubStep></SubSteps>
</Step></Steps>
</TestCase><TestCase
 Feature="0"
 Case="0"
 Implemented="TRUE"
 Name="Receive TSR"
>
<ReqRef
 Id="d925afa7-0975-42ee-8f81-820493dda041"
>
</ReqRef><Steps>
<Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 Name="Step1 - Provide TSR"
>
<SubSteps>
<SubStep
 Name="Sub-step1"
>
<Actions>
<Action>BTM.Message &lt;- Messages.EUROBALISE.Message
{
    Q_UPDOWN=&gt; Messages.Q_UPDOWN.Up_link_telegram,
    M_VERSION=&gt;1,
    Q_MEDIA=&gt;Messages.Q_MEDIA.Balise,
    N_PIG=&gt;8,
    N_TOTAL=&gt;0,
    M_DUP=&gt;Messages.M_DUP.No_duplicates,
    M_MCOUNT=&gt;4,
    NID_C=&gt;140,
    NID_BG=&gt;2124,
    Q_LINK=&gt;Messages.Q_LINK.Linked,
    Sequence1=&gt;
    [
        Messages.EUROBALISE.SubStructure1
        {
            TRACK_TO_TRAIN=&gt;Messages.PACKET.TRACK_TO_TRAIN.Message
            {
                TEMPORARY_SPEED_RESTRICTION =&gt; Messages.PACKET.TRACK_TO_TRAIN.TEMPORARY_SPEED_RESTRICTION.Message
                {
                    NID_PACKET=&gt;8,
                    Q_DIR=&gt;Messages.Q_DIR.Nominal,
                    L_PACKET=&gt;400,
                    Q_SCALE=&gt;Messages.Q_SCALE._1_m_scaleC,
                    D_TSR =&gt; 4000,
                    L_TSR =&gt; 2500,
                    NID_TSR =&gt; 1515,
                    Q_FRONT =&gt; Messages.Q_FRONT.No_train_length_delay_on_validity_end_point_of_profile_element ,
                    V_TSR =&gt; 5
                }
            }
        }
    ]
}</Action></Actions>
<Expectations>
<Expectation
 Kind="Instantaneous"
>Kernel.SpeedAndDistanceMonitoring.CeilingSupervision.P( 4000.0 ) == 25.0</Expectation><Expectation
 Kind="Instantaneous"
>Kernel.SpeedAndDistanceMonitoring.CeilingSupervision.P( 3000.0 ) == 60.0</Expectation><Expectation
 Kind="Instantaneous"
>Kernel.SpeedAndDistanceMonitoring.CeilingSupervision.P( 7000.0 ) == 0.0</Expectation><Expectation
 Kind="Instantaneous"
>Kernel.SpeedAndDistanceMonitoring.CeilingSupervision.P( 8000.0 ) == 0.0</Expectation></Expectations>
</SubStep></SubSteps>
</Step></Steps>
</TestCase><TestCase
 Feature="0"
 Case="0"
 Implemented="TRUE"
 Name="Receive LX"
>
<ReqRef
 Id="f80261a5-4553-4c43-ab09-2cf0da750a7e"
>
</ReqRef><Steps>
<Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 Name="Step1 - Provide LX"
>
<SubSteps>
<SubStep
 Name="Sub-step1"
>
<Actions>
<Action>BTM.Message &lt;- Messages.EUROBALISE.Message
{
    Q_UPDOWN=&gt; Messages.Q_UPDOWN.Up_link_telegram,
    M_VERSION=&gt;1,
    Q_MEDIA=&gt;Messages.Q_MEDIA.Balise,
    N_PIG=&gt;8,
    N_TOTAL=&gt;0,
    M_DUP=&gt;Messages.M_DUP.No_duplicates,
    M_MCOUNT=&gt;4,
    NID_C=&gt;140,
    NID_BG=&gt;2124,
    Q_LINK=&gt;Messages.Q_LINK.Linked,
    Sequence1=&gt;
    [
        Messages.EUROBALISE.SubStructure1
        {
            TRACK_TO_TRAIN=&gt;Messages.PACKET.TRACK_TO_TRAIN.Message
            {
                LEVEL_CROSSING_INFORMATION =&gt; Messages.PACKET.TRACK_TO_TRAIN.LEVEL_CROSSING_INFORMATION.Message
                {
                    NID_PACKET=&gt;88,
                    Q_DIR=&gt;Messages.Q_DIR.Nominal,
                    L_PACKET=&gt;400,
                    Q_SCALE=&gt;Messages.Q_SCALE._1_m_scaleC,
                    NID_LX=&gt;20,
                    D_LX=&gt;2000,
                    L_LX=&gt;250,
                    Q_LXSTATUS=&gt;Messages.Q_LXSTATUS.LX_is_not_protected,
                    V_LX=&gt;8,
                    Q_STOPLX=&gt;Messages.Q_STOPLX.No_stop_required,
                    L_STOPLX=&gt;0
                }
            }
        }
    ]
}</Action></Actions>
<Expectations>
<Expectation
 Kind="Instantaneous"
>Kernel.SpeedAndDistanceMonitoring.CeilingSupervision.P( 4000.0 ) == 25.0</Expectation><Expectation
 Kind="Instantaneous"
>Kernel.SpeedAndDistanceMonitoring.CeilingSupervision.P( 3000.0 ) == 60.0</Expectation><Expectation
 Kind="Instantaneous"
>Kernel.SpeedAndDistanceMonitoring.CeilingSupervision.P( 7000.0 ) == 0.0</Expectation><Expectation
 Kind="Instantaneous"
>Kernel.SpeedAndDistanceMonitoring.CeilingSupervision.P( 8000.0 ) == 0.0</Expectation><Expectation
 Kind="Instantaneous"
>Kernel.SpeedAndDistanceMonitoring.CeilingSupervision.P( 2000.0 ) == 40.0</Expectation></Expectations>
</SubStep></SubSteps>
</Step></Steps>
</TestCase><TestCase
 Feature="0"
 Case="0"
 Implemented="TRUE"
 Name="Override function is activated"
>
<ReqRef
 Id="740a2050-4496-4fb8-9389-3250365d206a"
>
</ReqRef><ReqRef
 Id="4ffc9c73-6c94-446a-8dc8-d6d9277102e2"
>
</ReqRef><Steps>
<Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 Name="Step1 - Provide applicable NV"
>
<SubSteps>
<SubStep
 Name="Sub-step1"
>
<Actions>
<Action>Kernel.HandleModeChange &lt;- Kernel.HandleModeChange.Override</Action></Actions>
<Expectations>
<Expectation
 Kind="Instantaneous"
>Kernel.SpeedAndDistanceMonitoring.CeilingSupervision.P( 1000.0 ) == 55.0</Expectation><Expectation
 Kind="Instantaneous"
>Kernel.SpeedAndDistanceMonitoring.CeilingSupervision.P( 8000.0 ) == 0.0</Expectation></Expectations>
</SubStep></SubSteps>
</Step></Steps>
</TestCase><TestCase
 Feature="0"
 Case="0"
 Implemented="TRUE"
 Name="Receive MTS max speed"
>
<ReqRef
 Id="8321661d-73c4-49fe-acb7-74e4bc41bd37"
>
</ReqRef><ReqRef
 Id="8321661d-73c4-49fe-acb7-74e4bc41bd37"
>
</ReqRef><Steps>
<Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 Name="Step1 - Provide MTS max speed"
>
<SubSteps>
<SubStep
 Name="Sub-step1"
>
<Actions>
<Action>STM.MaxSpeed.Speed &lt;- 50.0</Action><Action>STM.MaxSpeed.HasToBeSupervised &lt;- True</Action></Actions>
<Expectations>
<Expectation
 Kind="Instantaneous"
>Kernel.SpeedAndDistanceMonitoring.CeilingSupervision.P( 1000.0 ) == 50.0</Expectation><Expectation
 Kind="Instantaneous"
>Kernel.SpeedAndDistanceMonitoring.CeilingSupervision.P( 3000.0 ) == 50.0</Expectation></Expectations>
</SubStep></SubSteps>
</Step></Steps>
</TestCase><TestCase
 Feature="0"
 Case="0"
 Implemented="TRUE"
 Name="Receive MTS system speed"
>
<ReqRef
 Id="5b427521-61cb-409a-8485-a942fda2760a"
>
</ReqRef><ReqRef
 Id="5b427521-61cb-409a-8485-a942fda2760a"
>
</ReqRef><Steps>
<Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 Name="Step1 - Provide MTS system speed"
>
<SubSteps>
<SubStep
 Name="Sub-step1"
>
<Actions>
<Action>STM.SystemSpeed.Speed &lt;- 45.0</Action><Action>STM.SystemSpeed.HasToBeSupervised &lt;- True</Action></Actions>
<Expectations>
<Expectation
 Kind="Instantaneous"
>Kernel.SpeedAndDistanceMonitoring.CeilingSupervision.P( 1000.0 ) == 45.0</Expectation><Expectation
 Kind="Instantaneous"
>Kernel.SpeedAndDistanceMonitoring.CeilingSupervision.P( 3000.0 ) == 45.0</Expectation></Expectations>
</SubStep></SubSteps>
</Step></Steps>
</TestCase><TestCase
 Feature="0"
 Case="0"
 Implemented="TRUE"
 Name="Receive axle load profile"
>
<ReqRef
 Id="38267eb5-348a-4d09-b4c6-4907aea348f2"
>
</ReqRef><Steps>
<Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 Name="Step1 - Provide axle load profile"
>
<SubSteps>
<SubStep
 Name="Sub-step1"
>
<Actions>
<Action>BTM.Message &lt;- Messages.EUROBALISE.Message
{
    Q_UPDOWN=&gt; Messages.Q_UPDOWN.Up_link_telegram,
    M_VERSION=&gt;1,
    Q_MEDIA=&gt;Messages.Q_MEDIA.Balise,
    N_PIG=&gt;8,
    N_TOTAL=&gt;0,
    M_DUP=&gt;Messages.M_DUP.No_duplicates,
    M_MCOUNT=&gt;4,
    NID_C=&gt;140,
    NID_BG=&gt;2100,
    Q_LINK=&gt;Messages.Q_LINK.Linked,
    Sequence1=&gt;
    [
        Messages.EUROBALISE.SubStructure1
        {
            TRACK_TO_TRAIN=&gt;Messages.PACKET.TRACK_TO_TRAIN.Message
            {
                AXLE_LOAD_SPEED_PROFILE=&gt;Messages.PACKET.TRACK_TO_TRAIN.AXLE_LOAD_SPEED_PROFILE.Message
                {
                    NID_PACKET =&gt; 88,
                    Q_DIR =&gt; Messages.Q_DIR.Nominal,
                    L_PACKET =&gt; 400,
                    Q_SCALE =&gt; Messages.Q_SCALE._1_m_scaleC,
                    Q_TRACKINIT =&gt; Messages.Q_TRACKINIT.No_initial_states_to_be_resumed__profile_to_follow,
                    D_TRACKINIT =&gt; 0,
                    D_AXLELOAD =&gt; 1000,
                    L_AXLELOAD =&gt; 300,
                    Q_FRONT =&gt; Messages.Q_FRONT.Train_length_delay_on_validity_end_point_of_profile_element,
                    Sequence1 =&gt;
                    [
                        Messages.PACKET.TRACK_TO_TRAIN.AXLE_LOAD_SPEED_PROFILE.SubStructure1
                        {
                            M_AXLELOADCAT =&gt; Messages.M_AXLELOADCAT.A,
                            V_AXLELOAD =&gt; 14
                        },
                        Messages.PACKET.TRACK_TO_TRAIN.AXLE_LOAD_SPEED_PROFILE.SubStructure1
                        {
                            M_AXLELOADCAT =&gt; Messages.M_AXLELOADCAT.B2,
                            V_AXLELOAD =&gt; 12
                        },
                        Messages.PACKET.TRACK_TO_TRAIN.AXLE_LOAD_SPEED_PROFILE.SubStructure1
                        {
                            M_AXLELOADCAT =&gt; Messages.M_AXLELOADCAT.C4,
                            V_AXLELOAD =&gt; 8
                        },
                        Messages.PACKET.TRACK_TO_TRAIN.AXLE_LOAD_SPEED_PROFILE.SubStructure1
                        {
                            M_AXLELOADCAT =&gt; Messages.M_AXLELOADCAT.E5,
                            V_AXLELOAD =&gt; 4
                        }
                    ],
                    Sequence3 =&gt;
                    [
                        Messages.PACKET.TRACK_TO_TRAIN.AXLE_LOAD_SPEED_PROFILE.SubStructure2
                        {
                            D_AXLELOAD =&gt; 2000,
                            L_AXLELOAD =&gt; 1000,
                            Q_FRONT =&gt; Messages.Q_FRONT.Train_length_delay_on_validity_end_point_of_profile_element,
                            Sequence2 =&gt;
                            [
                                Messages.PACKET.TRACK_TO_TRAIN.AXLE_LOAD_SPEED_PROFILE.SubStructure3
                                {
                                    M_AXLELOADCAT =&gt; Messages.M_AXLELOADCAT.A,
                                    V_AXLELOAD =&gt; 16
                                },
                                Messages.PACKET.TRACK_TO_TRAIN.AXLE_LOAD_SPEED_PROFILE.SubStructure3
                                {
                                    M_AXLELOADCAT =&gt; Messages.M_AXLELOADCAT.B2,
                                    V_AXLELOAD =&gt; 14
                                },
                                Messages.PACKET.TRACK_TO_TRAIN.AXLE_LOAD_SPEED_PROFILE.SubStructure3
                                {
                                    M_AXLELOADCAT =&gt; Messages.M_AXLELOADCAT.C4,
                                    V_AXLELOAD =&gt; 12
                                },
                                Messages.PACKET.TRACK_TO_TRAIN.AXLE_LOAD_SPEED_PROFILE.SubStructure3
                                {
                                    M_AXLELOADCAT =&gt; Messages.M_AXLELOADCAT.D4XL,
                                    V_AXLELOAD =&gt; 10
                                },
                                Messages.PACKET.TRACK_TO_TRAIN.AXLE_LOAD_SPEED_PROFILE.SubStructure3
                                {
                                    M_AXLELOADCAT =&gt; Messages.M_AXLELOADCAT.E5,
                                    V_AXLELOAD =&gt; 6
                                }
                            ]
                        }
                    ]
                }
            }
        }
    ]
}</Action></Actions>
<Expectations>
<Expectation
 Kind="Instantaneous"
>Kernel.SpeedAndDistanceMonitoring.CeilingSupervision.P( 1000.0 ) == 20.0</Expectation><Expectation
 Kind="Instantaneous"
>Kernel.SpeedAndDistanceMonitoring.CeilingSupervision.P( 3000.0 ) == 30.0</Expectation></Expectations>
</SubStep></SubSteps>
</Step></Steps>
</TestCase><TestCase
 Feature="0"
 Case="0"
 NeedsRequirement="FALSE"
 Name="Receive gradient info"
>
<Steps>
<Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 Name="Step1 - Receive gradient info"
>
<SubSteps>
<SubStep
 Name="Sub-step1"
>
<Actions>
<Action>BTM.Message &lt;- Messages.EUROBALISE.Message
{
    Q_UPDOWN=&gt; Messages.Q_UPDOWN.Up_link_telegram,
    M_VERSION=&gt;1,
    Q_MEDIA=&gt;Messages.Q_MEDIA.Balise,
    N_PIG=&gt;8,
    N_TOTAL=&gt;0,
    M_DUP=&gt;Messages.M_DUP.No_duplicates,
    M_MCOUNT=&gt;4,
    NID_C=&gt;140,
    NID_BG=&gt;2124,
    Q_LINK=&gt;Messages.Q_LINK.Linked,
    Sequence1=&gt;
    [
        Messages.EUROBALISE.SubStructure1
        {
            TRACK_TO_TRAIN=&gt;Messages.PACKET.TRACK_TO_TRAIN.Message
            {
                GRADIENT_PROFILE =&gt; Messages.PACKET.TRACK_TO_TRAIN.GRADIENT_PROFILE.Message
                {
                    NID_PACKET=&gt;21,
                    Q_DIR=&gt;Messages.Q_DIR.Nominal,
                    L_PACKET=&gt;400,
                    Q_SCALE=&gt;Messages.Q_SCALE._1_m_scaleC,
                    D_GRADIENT =&gt; 4000,
                    Q_GDIR =&gt; Messages.Q_GDIR.uphill,
                    G_A =&gt; 2,
                    N_ITER =&gt; 3,
                    Sequence1 =&gt; [
                      Messages.PACKET.TRACK_TO_TRAIN.GRADIENT_PROFILE.SubStructure1 {
                        D_GRADIENT =&gt; 2000,
                        Q_GDIR =&gt; Messages.Q_GDIR.downhill,
                        G_A =&gt; 1
                      },
                      Messages.PACKET.TRACK_TO_TRAIN.GRADIENT_PROFILE.SubStructure1 {
                        D_GRADIENT =&gt; 1000,
                        Q_GDIR =&gt; Messages.Q_GDIR.downhill,
                        G_A =&gt; 4
                      },
                      Messages.PACKET.TRACK_TO_TRAIN.GRADIENT_PROFILE.SubStructure1 {
                        D_GRADIENT =&gt; 5000,
                        Q_GDIR =&gt; Messages.Q_GDIR.uphill,
                        G_A =&gt; 3
                      }
                    ]
                }
            }
        }
    ]
}</Action></Actions>
</SubStep></SubSteps>
</Step></Steps>
</TestCase><TestCase
 Feature="0"
 Case="0"
 NeedsRequirement="FALSE"
 Name="Receive Static Speed Profile"
>
<Steps>
<Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 Name="Step1 - Receive Static Speed Profile"
>
<SubSteps>
<SubStep
 Name="Sub-step1"
>
<Actions>
<Action>BTM.Message &lt;- Messages.EUROBALISE.Message
{
    Q_UPDOWN=&gt; Messages.Q_UPDOWN.Up_link_telegram,
    M_VERSION=&gt;1,
    Q_MEDIA=&gt;Messages.Q_MEDIA.Balise,
    N_PIG=&gt;1,
    N_TOTAL=&gt;0,
    M_DUP=&gt;Messages.M_DUP.No_duplicates,
    M_MCOUNT=&gt;4,
    NID_C=&gt;140,
    NID_BG=&gt;2124,
    Q_LINK=&gt;Messages.Q_LINK.Unlinked,
    Sequence1=&gt;
    [
        Messages.EUROBALISE.SubStructure1
        {
            TRACK_TO_TRAIN =&gt; Messages.PACKET.TRACK_TO_TRAIN.Message
            {
                INTERNATIONAL_STATIC_SPEED_PROFILE =&gt; Messages.PACKET.TRACK_TO_TRAIN.INTERNATIONAL_STATIC_SPEED_PROFILE.Message
                {
                    NID_PACKET=&gt;27,
                    Q_DIR=&gt;Messages.Q_DIR.Nominal,
                    L_PACKET=&gt;400,
                    Q_SCALE=&gt;Messages.Q_SCALE._1_m_scaleC,
                    D_STATIC =&gt; 4500,
                    V_STATIC =&gt; 8,
                    Q_FRONT =&gt; Messages.Q_FRONT.Train_length_delay_on_validity_end_point_of_profile_element,
                    N_ITER_0 =&gt; 5,
                    Sequence1 =&gt;
                    [
                        Messages.PACKET.TRACK_TO_TRAIN.INTERNATIONAL_STATIC_SPEED_PROFILE.SubStructure1
                        {
                            Q_DIFF =&gt; Messages.Q_DIFF.Cant_Deficiency_specific_category,
                            NC_CDDIFF =&gt; Messages.NC_CDDIFF.Specific_SSP_applicable_to_Cant_Deficiency_130_mm,
                            NC_DIFF =&gt; Messages.NC_DIFF.Specific_SSP_applicable_to_Freight_train_braked_in__P__position,
                            V_DIFF =&gt; 6
                        },
                        Messages.PACKET.TRACK_TO_TRAIN.INTERNATIONAL_STATIC_SPEED_PROFILE.SubStructure1
                        {
                            Q_DIFF =&gt; Messages.Q_DIFF.Cant_Deficiency_specific_category,
                            NC_CDDIFF =&gt; Messages.NC_CDDIFF.Specific_SSP_applicable_to_Cant_Deficiency_210_mm,
                            NC_DIFF =&gt; Messages.NC_DIFF.Specific_SSP_applicable_to_Freight_train_braked_in__P__position,
                            V_DIFF =&gt; 2
                        },
                        Messages.PACKET.TRACK_TO_TRAIN.INTERNATIONAL_STATIC_SPEED_PROFILE.SubStructure1
                        {
                            Q_DIFF =&gt; Messages.Q_DIFF.Other_specific_category__does_not_replace_the_Cant_Deficiency_SSP,
                            NC_CDDIFF =&gt; Messages.NC_CDDIFF.Specific_SSP_applicable_to_Cant_Deficiency_130_mm,
                            NC_DIFF =&gt; Messages.NC_DIFF.Specific_SSP_applicable_to_Freight_train_braked_in__G__position,
                            V_DIFF =&gt; 10
                        },
                        Messages.PACKET.TRACK_TO_TRAIN.INTERNATIONAL_STATIC_SPEED_PROFILE.SubStructure1
                        {
                            Q_DIFF =&gt; Messages.Q_DIFF.Other_specific_category__does_not_replace_the_Cant_Deficiency_SSP,
                            NC_CDDIFF =&gt; Messages.NC_CDDIFF.Specific_SSP_applicable_to_Cant_Deficiency_130_mm,
                            NC_DIFF =&gt; Messages.NC_DIFF.Specific_SSP_applicable_to_Freight_train_braked_in__P__position,
                            V_DIFF =&gt; 7
                        },
                        Messages.PACKET.TRACK_TO_TRAIN.INTERNATIONAL_STATIC_SPEED_PROFILE.SubStructure1
                        {
                            Q_DIFF =&gt; Messages.Q_DIFF.Other_specific_category__does_not_replace_the_Cant_Deficiency_SSP,
                            NC_CDDIFF =&gt; Messages.NC_CDDIFF.Specific_SSP_applicable_to_Cant_Deficiency_150_mm,
                            NC_DIFF =&gt; Messages.NC_DIFF.Specific_SSP_applicable_to_Passenger_train,
                            V_DIFF =&gt; 14
                        }
                    ],
                    Sequence3 =&gt;
                    [
                        Messages.PACKET.TRACK_TO_TRAIN.INTERNATIONAL_STATIC_SPEED_PROFILE.SubStructure2
                        {
                            D_STATIC =&gt; 1000,
                            V_STATIC =&gt; 10,
                            Q_FRONT =&gt;  Messages.Q_FRONT.No_train_length_delay_on_validity_end_point_of_profile_element,
                            N_ITER =&gt; 3,
                            Sequence2 =&gt;
                            [
                                Messages.PACKET.TRACK_TO_TRAIN.INTERNATIONAL_STATIC_SPEED_PROFILE.SubStructure3
                                {
                                    Q_DIFF =&gt; Messages.Q_DIFF.Other_specific_category__does_not_replace_the_Cant_Deficiency_SSP,
                                    NC_CDDIFF =&gt; Messages.NC_CDDIFF.Specific_SSP_applicable_to_Cant_Deficiency_150_mm,
                                    NC_DIFF =&gt; Messages.NC_DIFF.Specific_SSP_applicable_to_Freight_train_braked_in__G__position,
                                    V_DIFF =&gt; 12
                                },
                                Messages.PACKET.TRACK_TO_TRAIN.INTERNATIONAL_STATIC_SPEED_PROFILE.SubStructure3
                                {
                                    Q_DIFF =&gt; Messages.Q_DIFF.Other_specific_category__does_not_replace_the_Cant_Deficiency_SSP,
                                    NC_CDDIFF =&gt; Messages.NC_CDDIFF.Specific_SSP_applicable_to_Cant_Deficiency_150_mm,
                                    NC_DIFF =&gt; Messages.NC_DIFF.Specific_SSP_applicable_to_Freight_train_braked_in__P__position,
                                    V_DIFF =&gt; 6
                                },
                                Messages.PACKET.TRACK_TO_TRAIN.INTERNATIONAL_STATIC_SPEED_PROFILE.SubStructure3
                                {
                                    Q_DIFF =&gt; Messages.Q_DIFF.Other_specific_category__does_not_replace_the_Cant_Deficiency_SSP,
                                    NC_CDDIFF =&gt; Messages.NC_CDDIFF.Specific_SSP_applicable_to_Cant_Deficiency_150_mm,
                                    NC_DIFF =&gt; Messages.NC_DIFF.Specific_SSP_applicable_to_Passenger_train,
                                    V_DIFF =&gt; 8
                                }
                            ]
                        },
                        Messages.PACKET.TRACK_TO_TRAIN.INTERNATIONAL_STATIC_SPEED_PROFILE.SubStructure2
                        {
                            D_STATIC =&gt; 2000,
                            V_STATIC =&gt; 127,
                            Q_FRONT =&gt;  Messages.Q_FRONT.No_train_length_delay_on_validity_end_point_of_profile_element,
                            N_ITER =&gt; 3,
                            Sequence2 =&gt; []
                        }
                    ]
                }
            }
        }
    ]
}</Action></Actions>
<Expectations>
<Expectation
 Kind="Instantaneous"
>Kernel.SpeedAndDistanceMonitoring.CeilingSupervision.P( 4500.0 ) == 10.0</Expectation><Expectation
 Kind="Instantaneous"
>Kernel.SpeedAndDistanceMonitoring.CeilingSupervision.P( 5499.0 ) == 10.0</Expectation><Expectation
 Kind="Instantaneous"
>Kernel.SpeedAndDistanceMonitoring.CeilingSupervision.P( 5500.0 ) == 25.0</Expectation><Expectation
 Kind="Instantaneous"
>Kernel.SpeedAndDistanceMonitoring.CeilingSupervision.P( 6000.0 ) == 0.0</Expectation><Expectation
 Kind="Instantaneous"
>Kernel.SpeedAndDistanceMonitoring.CeilingSupervision.P( 7000.0 ) == 0.0</Expectation></Expectations>
</SubStep></SubSteps>
</Step></Steps>
</TestCase><TestCase
 Feature="0"
 Case="0"
 NeedsRequirement="FALSE"
 Name="Compute EBD and SBD"
>
<Steps>
<Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 Name="Step1 - Initialize A_safe"
>
<SubSteps>
<SubStep
 Name="Sub-step1"
>
<Actions>
<Action>Kernel.TrainData.TrainData &lt;- Kernel.TrainData.TrainData{
    DataState =&gt; Default.DataState.Valid,
    Value =&gt; Kernel.TrainData.TrainDataValues{
        TrainLength =&gt; 100.0,
        MaximumSpeed =&gt; 110.0,
        M_rotating_nom =&gt; 0.05,
        BrakePosition =&gt; Kernel.TrainData.BrakingParameters.BrakePositions.FreightTrainInG,
        EddyCurrentBrake =&gt; Kernel.TrainData.BrakingParameters.SpecialBrake
        {
            IsActive =&gt; True,
            InterfaceStatus =&gt; Kernel.TrainData.BrakingParameters.BrakeInterfaceStatus.Both
        },
        MagneticShoeBrake =&gt; Kernel.TrainData.BrakingParameters.SpecialBrake
        {
            IsActive =&gt; True,
            InterfaceStatus =&gt; Kernel.TrainData.BrakingParameters.BrakeInterfaceStatus.Both
        },
        RegenerativeBrake =&gt; Kernel.TrainData.BrakingParameters.SpecialBrake
        {
            IsActive =&gt; True,
            InterfaceStatus =&gt; Kernel.TrainData.BrakingParameters.BrakeInterfaceStatus.EB
        },
        TrainCategories =&gt; Kernel.TrainData.TrainCategories
        {
            CantDeficiency =&gt; Messages.NC_CDTRAIN.Cant_Deficiency_210_mm,
            OtherInternational =&gt; [Kernel.TrainData.TrainCategory.FreightTrainInP]
        },
        EBModels =&gt; Kernel.TrainData.BrakingParameters.EBModelSet{
            ModelSet =&gt; Kernel.TrainData.BrakingParameters.BrakingModelSet{
                EddyCurrent =&gt; Kernel.TrainData.BrakingParameters.BrakingModel{
                    Val0 =&gt; Kernel.TrainData.BrakingParameters.BrakingModelValue{
                        SpeedStep =&gt; 0.0,
                        Acceleration =&gt; 0.7
                    },
                    Val1 =&gt; Kernel.TrainData.BrakingParameters.BrakingModelValue{
                        SpeedStep =&gt; 30.0,
                        Acceleration =&gt; 0.65
                    },
                    Val2 =&gt; Kernel.TrainData.BrakingParameters.BrakingModelValue{
                        SpeedStep =&gt; 60.0,
                        Acceleration =&gt; 0.6
                    },
                    Val3 =&gt; Kernel.TrainData.BrakingParameters.BrakingModelValue{
                        SpeedStep =&gt; 100.0,
                        Acceleration =&gt; 0.5
                    },
                    Val4 =&gt; Kernel.TrainData.BrakingParameters.BrakingModelValue{
                        SpeedStep =&gt; 150.0,
                        Acceleration =&gt; 0.45
                    },
                    Val5 =&gt; Kernel.TrainData.BrakingParameters.BrakingModelValue{
                        SpeedStep =&gt; 180.0,
                        Acceleration =&gt; 0.25
                    },
                    Val6 =&gt; Kernel.TrainData.BrakingParameters.BrakingModelValue{
                        SpeedStep =&gt; 240.0,
                        Acceleration =&gt; 0.2
                    }
                },
EddyCurrent_Magnetic =&gt; Kernel.TrainData.BrakingParameters.BrakingModel{
                    Val0 =&gt; Kernel.TrainData.BrakingParameters.BrakingModelValue{
                        SpeedStep =&gt; 0.0,
                        Acceleration =&gt; 0.8
                    },
                    Val1 =&gt; Kernel.TrainData.BrakingParameters.BrakingModelValue{
                        SpeedStep =&gt; 25.0,
                        Acceleration =&gt; 0.75
                    },
                    Val2 =&gt; Kernel.TrainData.BrakingParameters.BrakingModelValue{
                        SpeedStep =&gt; 40.0,
                        Acceleration =&gt; 0.7
                    },
                    Val3 =&gt; Kernel.TrainData.BrakingParameters.BrakingModelValue{
                        SpeedStep =&gt; 80.0,
                        Acceleration =&gt; 0.6
                    },
                    Val4 =&gt; Kernel.TrainData.BrakingParameters.BrakingModelValue{
                        SpeedStep =&gt; 120.0,
                        Acceleration =&gt; 0.4
                    },
                    Val5 =&gt; Kernel.TrainData.BrakingParameters.BrakingModelValue{
                        SpeedStep =&gt; 180.0,
                        Acceleration =&gt; 0.3
                    },
                    Val6 =&gt; Kernel.TrainData.BrakingParameters.BrakingModelValue{
                        SpeedStep =&gt; 250.0,
                        Acceleration =&gt; 0.2
                    }
                },
                EddyCurrent_Regenerative =&gt; Kernel.TrainData.BrakingParameters.BrakingModel{
                    Val0 =&gt; Kernel.TrainData.BrakingParameters.BrakingModelValue{
                        SpeedStep =&gt; 0.0,
                        Acceleration =&gt; 0.99
                    },
                    Val1 =&gt; Kernel.TrainData.BrakingParameters.BrakingModelValue{
                        SpeedStep =&gt; 40.0,
                        Acceleration =&gt; 0.9
                    },
                    Val2 =&gt; Kernel.TrainData.BrakingParameters.BrakingModelValue{
                        SpeedStep =&gt; 80.0,
                        Acceleration =&gt; 0.8
                    },
                    Val3 =&gt; Kernel.TrainData.BrakingParameters.BrakingModelValue{
                        SpeedStep =&gt; 120.0,
                        Acceleration =&gt; 0.7
                    },
                    Val4 =&gt; Kernel.TrainData.BrakingParameters.BrakingModelValue{
                        SpeedStep =&gt; 150.0,
                        Acceleration =&gt; 0.6
                    },
                    Val5 =&gt; Kernel.TrainData.BrakingParameters.BrakingModelValue{
                        SpeedStep =&gt; 190.0,
                        Acceleration =&gt; 0.5
                    },
                    Val6 =&gt; Kernel.TrainData.BrakingParameters.BrakingModelValue{
                        SpeedStep =&gt; 220.0,
                        Acceleration =&gt; 0.45
                    }
                },
                EddyCurrent_Magnetic_Regenerative =&gt; Kernel.TrainData.BrakingParameters.BrakingModel{
                    Val0 =&gt; Kernel.TrainData.BrakingParameters.BrakingModelValue{
                        SpeedStep =&gt; 0.0,
                        Acceleration =&gt; 0.999
                    },
                    Val1 =&gt; Kernel.TrainData.BrakingParameters.BrakingModelValue{
                        SpeedStep =&gt; 40.0,
                        Acceleration =&gt; 0.95
                    },
                    Val2 =&gt; Kernel.TrainData.BrakingParameters.BrakingModelValue{
                        SpeedStep =&gt; 80.0,
                        Acceleration =&gt; 0.9
                    },
                    Val3 =&gt; Kernel.TrainData.BrakingParameters.BrakingModelValue{
                        SpeedStep =&gt; 120.0,
                        Acceleration =&gt; 0.8
                    },
                    Val4 =&gt; Kernel.TrainData.BrakingParameters.BrakingModelValue{
                        SpeedStep =&gt; 170.0,
                        Acceleration =&gt; 0.7
                    },
                    Val5 =&gt; Kernel.TrainData.BrakingParameters.BrakingModelValue{
                        SpeedStep =&gt; 220.0,
                        Acceleration =&gt; 0.6
                    },
                    Val6 =&gt; Kernel.TrainData.BrakingParameters.BrakingModelValue{
                        SpeedStep =&gt; 270.0,
                        Acceleration =&gt; 0.4
                    }
                }
            },
            Kdry_rstValuesSet =&gt; Kernel.TrainData.BrakingParameters.Kdry_rstValuesSet{
                EddyCurrent =&gt; Kernel.TrainData.BrakingParameters.Kdry_rstValues{
                    Cl__90 =&gt; Kernel.TrainData.BrakingParameters.CorrectFactorValue{
                        CF0 =&gt; 0.12,
                        CF1 =&gt; 0.17,
                        CF2 =&gt; 0.28,
                        CF3 =&gt; 0.35,
                        CF4 =&gt; 0.49,
                        CF5 =&gt; 0.68,
                        CF6 =&gt; 0.9
                    },
                    Cl__99 =&gt; Kernel.TrainData.BrakingParameters.CorrectFactorValue{
                        CF0 =&gt; 0.08,
                        CF1 =&gt; 0.14,
                        CF2 =&gt; 0.2,
                        CF3 =&gt; 0.25,
                        CF4 =&gt; 0.43,
                        CF5 =&gt; 0.65,
                        CF6 =&gt; 0.8
                    },
                    Cl__99_99 =&gt; Kernel.TrainData.BrakingParameters.CorrectFactorValue{
                        CF0 =&gt; 0.09,
                        CF1 =&gt; 0.15,
                        CF2 =&gt; 0.19,
                        CF3 =&gt; 0.25,
                        CF4 =&gt; 0.3,
                        CF5 =&gt; 0.4,
                        CF6 =&gt; 0.55
                    }
                },
                EddyCurrent_Magnetic =&gt; Kernel.TrainData.BrakingParameters.Kdry_rstValues{
                    Cl__90 =&gt; Kernel.TrainData.BrakingParameters.CorrectFactorValue{
                        CF0 =&gt; 0.1,
                        CF1 =&gt; 0.17,
                        CF2 =&gt; 0.24,
                        CF3 =&gt; 0.37,
                        CF4 =&gt; 0.45,
                        CF5 =&gt; 0.69,
                        CF6 =&gt; 0.92
                    },
                    Cl__99 =&gt; Kernel.TrainData.BrakingParameters.CorrectFactorValue{
                        CF0 =&gt; 0.02,
                        CF1 =&gt; 0.07,
                        CF2 =&gt; 0.2,
                        CF3 =&gt; 0.28,
                        CF4 =&gt; 0.4,
                        CF5 =&gt; 0.67,
                        CF6 =&gt; 0.81
                    },
                    Cl__99_99 =&gt; Kernel.TrainData.BrakingParameters.CorrectFactorValue{
                        CF0 =&gt; 0.03,
                        CF1 =&gt; 0.08,
                        CF2 =&gt; 0.12,
                        CF3 =&gt; 0.17,
                        CF4 =&gt; 0.24,
                        CF5 =&gt; 0.38,
                        CF6 =&gt; 0.52
                    }
                },
                EddyCurrent_Regenerative =&gt; Kernel.TrainData.BrakingParameters.Kdry_rstValues{
                    Cl__90 =&gt; Kernel.TrainData.BrakingParameters.CorrectFactorValue{
                        CF0 =&gt; 0.04,
                        CF1 =&gt; 0.05,
                        CF2 =&gt; 0.08,
                        CF3 =&gt; 0.19,
                        CF4 =&gt; 0.24,
                        CF5 =&gt; 0.35,
                        CF6 =&gt; 0.42
                    },
                    Cl__99 =&gt; Kernel.TrainData.BrakingParameters.CorrectFactorValue{
                        CF0 =&gt; 0.01,
                        CF1 =&gt; 0.04,
                        CF2 =&gt; 0.1,
                        CF3 =&gt; 0.19,
                        CF4 =&gt; 0.28,
                        CF5 =&gt; 0.43,
                        CF6 =&gt; 0.69
                    },
                    Cl__99_99 =&gt; Kernel.TrainData.BrakingParameters.CorrectFactorValue{
                        CF0 =&gt; 0.01,
                        CF1 =&gt; 0.02,
                        CF2 =&gt; 0.04,
                        CF3 =&gt; 0.09,
                        CF4 =&gt; 0.18,
                        CF5 =&gt; 0.22,
                        CF6 =&gt; 0.35
                    }
                },
                EddyCurrent_Magnetic_Regenerative =&gt; Kernel.TrainData.BrakingParameters.Kdry_rstValues{
                    Cl__90 =&gt; Kernel.TrainData.BrakingParameters.CorrectFactorValue{
                        CF0 =&gt; 0.1,
                        CF1 =&gt; 0.24,
                        CF2 =&gt; 0.32,
                        CF3 =&gt; 0.47,
                        CF4 =&gt; 0.58,
                        CF5 =&gt; 0.74,
                        CF6 =&gt; 0.92
                    },
                    Cl__99 =&gt; Kernel.TrainData.BrakingParameters.CorrectFactorValue{
                        CF0 =&gt; 0.07,
                        CF1 =&gt; 0.12,
                        CF2 =&gt; 0.19,
                        CF3 =&gt; 0.28,
                        CF4 =&gt; 0.37,
                        CF5 =&gt; 0.58,
                        CF6 =&gt; 0.64
                    },
                    Cl__99_99 =&gt; Kernel.TrainData.BrakingParameters.CorrectFactorValue{
                        CF0 =&gt; 0.02,
                        CF1 =&gt; 0.07,
                        CF2 =&gt; 0.12,
                        CF3 =&gt; 0.15,
                        CF4 =&gt; 0.22,
                        CF5 =&gt; 0.37,
                        CF6 =&gt; 0.42
                    }
                }
            },
            Kwet_rstValuesSet =&gt; Kernel.TrainData.BrakingParameters.Kwet_rstValuesSet{
                EddyCurrent =&gt; Kernel.TrainData.BrakingParameters.CorrectFactorValue{
                    CF0 =&gt; 0.04,
                    CF1 =&gt; 0.11,
                    CF2 =&gt; 0.3,
                    CF3 =&gt; 0.49,
                    CF4 =&gt; 0.54,
                    CF5 =&gt; 0.59,
                    CF6 =&gt; 0.76
                },
                EddyCurrent_Magnetic =&gt; Kernel.TrainData.BrakingParameters.CorrectFactorValue{
                    CF0 =&gt; 0.07,
                    CF1 =&gt; 0.12,
                    CF2 =&gt; 0.2,
                    CF3 =&gt; 0.4,
                    CF4 =&gt; 0.47,
                    CF5 =&gt; 0.55,
                    CF6 =&gt; 0.71
                },
                EddyCurrent_Regenerative =&gt; Kernel.TrainData.BrakingParameters.CorrectFactorValue{
                    CF0 =&gt; 0.1,
                    CF1 =&gt; 0.18,
                    CF2 =&gt; 0.24,
                    CF3 =&gt; 0.33,
                    CF4 =&gt; 0.4,
                    CF5 =&gt; 0.5,
                    CF6 =&gt; 0.81
                },
                EddyCurrent_Magnetic_Regenerative =&gt; Kernel.TrainData.BrakingParameters.CorrectFactorValue{
                    CF0 =&gt; 0.21,
                    CF1 =&gt; 0.32,
                    CF2 =&gt; 0.4,
                    CF3 =&gt; 0.48,
                    CF4 =&gt; 0.62,
                    CF5 =&gt; 0.74,
                    CF6 =&gt; 0.85
                }
            }
        },
        SBModels =&gt; Kernel.TrainData.BrakingParameters.SBModelSet
        {
            ModelSet =&gt; Kernel.TrainData.BrakingParameters.BrakingModelSet
            {
                EddyCurrent =&gt; Kernel.TrainData.BrakingParameters.BrakingModel{
                    Val0 =&gt; Kernel.TrainData.BrakingParameters.BrakingModelValue{
                        SpeedStep =&gt; 0.0,
                        Acceleration =&gt; 0.8
                    },
                    Val1 =&gt; Kernel.TrainData.BrakingParameters.BrakingModelValue{
                        SpeedStep =&gt; 30.0,
                        Acceleration =&gt; 0.65
                    },
                    Val2 =&gt; Kernel.TrainData.BrakingParameters.BrakingModelValue{
                        SpeedStep =&gt; 60.0,
                        Acceleration =&gt; 0.49
                    },
                    Val3 =&gt; Kernel.TrainData.BrakingParameters.BrakingModelValue{
                       SpeedStep =&gt; 100.0,
                        Acceleration =&gt; 0.38
                    },
                    Val4 =&gt; Kernel.TrainData.BrakingParameters.BrakingModelValue{
                        SpeedStep =&gt; 150.0,
                        Acceleration =&gt; 0.31
                     },
                    Val5 =&gt; Kernel.TrainData.BrakingParameters.BrakingModelValue{
                        SpeedStep =&gt; 180.0,
                        Acceleration =&gt; 0.27
                    },
                    Val6 =&gt; Kernel.TrainData.BrakingParameters.BrakingModelValue{
                        SpeedStep =&gt; 240.0,
                        Acceleration =&gt; 0.2
                    }
                },
                Regenerative =&gt; Kernel.TrainData.BrakingParameters.BrakingModel{
                    Val0 =&gt; Kernel.TrainData.BrakingParameters.BrakingModelValue{
                        SpeedStep =&gt; 0.0,
                        Acceleration =&gt; 0.8
                     },
                    Val1 =&gt; Kernel.TrainData.BrakingParameters.BrakingModelValue{
                        SpeedStep =&gt; 25.0,
                        Acceleration =&gt; 0.75
                    },
                    Val2 =&gt; Kernel.TrainData.BrakingParameters.BrakingModelValue{
                        SpeedStep =&gt; 40.0,
                        Acceleration =&gt; 0.7
                    },
                    Val3 =&gt; Kernel.TrainData.BrakingParameters.BrakingModelValue{
                        SpeedStep =&gt; 80.0,
                        Acceleration =&gt; 0.6
                    },
                    Val4 =&gt; Kernel.TrainData.BrakingParameters.BrakingModelValue{
                        SpeedStep =&gt; 120.0,
                        Acceleration =&gt; 0.4
                    },
                    Val5 =&gt; Kernel.TrainData.BrakingParameters.BrakingModelValue{
                        SpeedStep =&gt; 180.0,
                        Acceleration =&gt; 0.3
                    },
                    Val6 =&gt; Kernel.TrainData.BrakingParameters.BrakingModelValue{
                        SpeedStep =&gt; 250.0,
                        Acceleration =&gt; 0.2
                    }
                },
                EddyCurrent_Regenerative =&gt; Kernel.TrainData.BrakingParameters.BrakingModel{
                    Val0 =&gt; Kernel.TrainData.BrakingParameters.BrakingModelValue{
                        SpeedStep =&gt; 0.0,
                        Acceleration =&gt; 0.92
                   },
                   Val1 =&gt; Kernel.TrainData.BrakingParameters.BrakingModelValue{
                        SpeedStep =&gt; 40.0,
                        Acceleration =&gt; 0.81
                    },
                   Val2 =&gt; Kernel.TrainData.BrakingParameters.BrakingModelValue{
                        SpeedStep =&gt; 80.0,
                        Acceleration =&gt; 0.6
                    },
                    Val3 =&gt; Kernel.TrainData.BrakingParameters.BrakingModelValue{
                        SpeedStep =&gt; 120.0,
                        Acceleration =&gt; 0.46
                    },
                    Val4 =&gt; Kernel.TrainData.BrakingParameters.BrakingModelValue{
                        SpeedStep =&gt; 150.0,
                        Acceleration =&gt; 0.27
                    },
                    Val5 =&gt; Kernel.TrainData.BrakingParameters.BrakingModelValue{
                        SpeedStep =&gt; 190.0,
                        Acceleration =&gt; 0.22
                    },
                    Val6 =&gt; Kernel.TrainData.BrakingParameters.BrakingModelValue{
                        SpeedStep =&gt; 220.0,
                        Acceleration =&gt; 0.11
                    }
                },
                EddyCurrent_Magnetic_Regenerative =&gt; Kernel.TrainData.BrakingParameters.BrakingModel{
                    Val0 =&gt; Kernel.TrainData.BrakingParameters.BrakingModelValue{
                        SpeedStep =&gt; 0.0,
                        Acceleration =&gt; 0.9
                    },
                    Val1 =&gt; Kernel.TrainData.BrakingParameters.BrakingModelValue{
                        SpeedStep =&gt; 40.0,
                        Acceleration =&gt; 0.87
                    },
                    Val2 =&gt; Kernel.TrainData.BrakingParameters.BrakingModelValue{
                        SpeedStep =&gt; 80.0,
                        Acceleration =&gt; 0.8
                    },
                    Val3 =&gt; Kernel.TrainData.BrakingParameters.BrakingModelValue{
                        SpeedStep =&gt; 120.0,
                        Acceleration =&gt; 0.7
                    },
                    Val4 =&gt; Kernel.TrainData.BrakingParameters.BrakingModelValue{
                        SpeedStep =&gt; 170.0,
                        Acceleration =&gt; 0.6
                    },
                    Val5 =&gt; Kernel.TrainData.BrakingParameters.BrakingModelValue{
                        SpeedStep =&gt; 220.0,
                        Acceleration =&gt; 0.4
                    },
                    Val6 =&gt; Kernel.TrainData.BrakingParameters.BrakingModelValue{
                        SpeedStep =&gt; 270.0,
                        Acceleration =&gt; 0.2
                    }
                }
            }
        }
    }
}</Action><Action>Kernel.TrackDescription.AdhesionFactors.AdhFactors &lt;-
[
    Kernel.TrackDescription.AdhesionFactors.AdhesionFactor
    {
        Distance =&gt; 1500.0,
        Length =&gt; 100.0,
        Value =&gt; Messages.M_ADHESION.Slippery_rail
    },
    Kernel.TrackDescription.AdhesionFactors.AdhesionFactor
    {
        Distance =&gt; 1700.0,
        Length =&gt; 50.0,
        Value =&gt; Messages.M_ADHESION.Slippery_rail
    }
]</Action><Action>Kernel.NationalValues.ApplicableNationalValues &lt;- Kernel.NationalValues.NationalValues
{
    DataState =&gt; DataState.Valid,
    NID_C =&gt; 42,
    ApplicableDistance =&gt; 0.0,
    Value =&gt; Kernel.NationalValues.NationalDefaultData
    {
        ConfLevelForEmergBrakeSafeDecelerationOnDryRails =&gt; Messages.M_NVEBCL.Confidence_level___99_99,
        MaxDecelValueUnderReducedAdhesionCond1 =&gt; 0.2,
        MaxDecelValueUnderReducedAdhesionCond2 =&gt; 0.4,
        MaxDecelValueUnderReducedAdhesionCond3 =&gt; 0.7,
        WeightingFactorForAvailableWheelRailAdhesion =&gt; 0.2
    }
}</Action><Action>Kernel.TrackDescription.Gradient.Gradients &lt;- 
[
    Kernel.TrackDescription.Gradient.GradientInfo
    {
        Gradient =&gt; 0.004,
        Location =&gt; 1400.0
    },
    Kernel.TrackDescription.Gradient.GradientInfo
    {
        Gradient =&gt; 0.0,
        Location =&gt; 1600.0
    }
]</Action></Actions>
</SubStep></SubSteps>
</Step></Steps>
</TestCase></TestCases>
</SubSequence><SubSequence
 D_LRBG=""
 Level=""
 Mode=""
 NID_LRBG=""
 Q_DIRLRBG=""
 Q_DIRTRAIN=""
 Q_DLRBG=""
 RBC_ID=""
 RBCPhone=""
 Name="Train related inputs"
>
<TestCases>
<TestCase
 Feature="0"
 Case="0"
 NeedsRequirement="FALSE"
 Name="Setup"
>
<Steps>
<Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 Name="Step1 - Initialize test environment"
>
<SubSteps>
<SubStep
 Name="Sub-step1"
>
<Actions>
<Action>Kernel.InitializeTestEnvironment()</Action></Actions>
</SubStep></SubSteps>
</Step><Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 Name="Step2 - Setup"
>
<SubSteps>
<SubStep
 Name="Sub-step1"
>
<Actions>
<Action>Odometry.EstimatedAcceleration &lt;- 1.2</Action><Action>Kernel.TrackDescription.Gradient.Gradients &lt;- 
[
    Kernel.TrackDescription.Gradient.GradientInfo
    {
        Gradient =&gt; 4.0,
        Location =&gt; 1400.0
    },
    Kernel.TrackDescription.Gradient.GradientInfo
    {
        Gradient =&gt; 0.0,
        Location =&gt; 1600.0
    }
]</Action><Action>Odometry.NominalDistance &lt;- 1000.0</Action><Action>Kernel.TrainData.TrainData.DataState &lt;- Default.DataState.Valid</Action><Action>Kernel.TrainData.TrainData.Value.TractionSystems &lt;- []</Action><Action>Kernel.TrainData.TrainData.Value.TractionModel &lt;- Kernel.TrainData.TractionModel
{
    Coefficient =&gt; 14.0,
    Constant =&gt; 2.0
}</Action><Action>Kernel.TrainData.TrainData.Value.TractionCutOffInterfaceIsImplemented &lt;- Boolean.True</Action><Action>Kernel.TrainData.TrainData.Value.M_rotating_nom &lt;- 0.0</Action><Action>Kernel.MA.MA &lt;- Kernel.MA.MovementAuthority{
    TargetSpeed =&gt; 0.0,
    Sections =&gt; [],
    EndSection =&gt; Kernel.MA.EndSection{
        EndSectionTimeOut =&gt; Kernel.MA.SectionTimeOut{
            TimeOut =&gt; 0.0,
            Distance =&gt; 0.0
        },
        TimeOut =&gt; Kernel.MA.SectionTimeOut{
            TimeOut =&gt; 0.0,
            Distance =&gt; 0.0
        },
        Length =&gt; 0.0,
        DangerPoint =&gt; Kernel.MA.DangerPoint{
            Distance =&gt; 0.0,
            ReleaseSpeed =&gt; 0.0
        },
        Overlap =&gt; Kernel.MA.Overlap{
            Distance =&gt; 0.0,
            TimerDistance =&gt; 0.0,
            ReleaseSpeed =&gt; 0.0,
            TimeOut =&gt; 0.0
        }
    },
    TargetSpeedTimeOut =&gt; 0.0,
    ReferenceBG =&gt; 0,
    ReferenceBGLocation =&gt; 0.0
}</Action></Actions>
</SubStep></SubSteps>
</Step></Steps>
</TestCase><TestCase
 Feature="0"
 Case="0"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Traction model"
>
<ReqRef
 Id="b7b1bc48-6dda-4554-ac07-fd2a7e8ef50a"
>
</ReqRef><ReqRef
 Id="af82297e-0cd0-4080-912c-c8c8ff4a8ab7"
>
</ReqRef><Steps>
<Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 Name="Step1 - T_traction without gradient"
>
<SubSteps>
<SubStep
 Name="Sub-step1"
>
<Expectations>
<Expectation
 Kind="Instantaneous"
>Kernel.TrainData.BrakingParameters.A_traction ( Odometry.EstimatedAcceleration, Kernel.TrackDescription.Gradient.A_gradient ( Odometry.NominalDistance ) ) == 1.2</Expectation><Expectation
 Kind="Instantaneous"
>Kernel.TrainData.BrakingParameters.T_traction_cut_off () == 18.8</Expectation></Expectations>
</SubStep></SubSteps>
</Step><Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 Name="Step2 - T_traction with gradient"
>
<SubSteps>
<SubStep
 Name="Sub-step1"
>
<Actions>
<Action>Odometry.NominalDistance &lt;- 1500.0</Action></Actions>
<Expectations>
<Expectation
 Kind="Instantaneous"
>Kernel.TrainData.BrakingParameters.T_traction_cut_off () == 19.34936</Expectation><Expectation
 Kind="Instantaneous"
>Kernel.TrainData.BrakingParameters.A_traction ( Odometry.EstimatedAcceleration, Kernel.TrackDescription.Gradient.A_gradient ( Odometry.NominalDistance ) ) == 1.23924</Expectation><Expectation
 Kind="Instantaneous"
>Kernel.TrackDescription.Gradient.A_gradient ( Odometry.NominalDistance ) == 0.03924</Expectation></Expectations>
</SubStep></SubSteps>
</Step></Steps>
</TestCase><TestCase
 Feature="0"
 Case="0"
 NeedsRequirement="FALSE"
 Name="Brake build up time, T_be and T_bs"
>
<ReqRef
 Id="2cf137b8-bbbf-498f-b496-0d56ec81fe32"
>
</ReqRef><ReqRef
 Id="7b891aef-60db-4047-901f-e1515ac84ea8"
>
</ReqRef><ReqRef
 Id="19fa9290-6acb-4ae8-a84f-bdee455111a5"
>
</ReqRef><ReqRef
 Id="ba750721-bd4b-4fb5-86be-a54fff062ec4"
>
</ReqRef><ReqRef
 Id="43ac0583-bb58-4b32-b3ea-a0891744ee41"
>
</ReqRef><ReqRef
 Id="3d965310-43af-470d-963f-36c7d5f7569d"
>
</ReqRef><ReqRef
 Id="2dff7e7c-9af3-49bc-82ac-19616e3e91e6"
>
</ReqRef><ReqRef
 Id="cdb611eb-1ce9-4aba-a1fb-e64ca06b3669"
>
</ReqRef><ReqRef
 Id="83b8df3d-39ba-47e5-b2df-236a14f1441a"
>
</ReqRef><ReqRef
 Id="92da629d-5f50-4600-b877-db00a98ecf43"
>
</ReqRef><ReqRef
 Id="286c2abb-01dd-45cf-bdd9-4b508938c872"
>
</ReqRef><ReqRef
 Id="78767d0a-b1d1-4311-b158-adede38b9077"
>
</ReqRef><ReqRef
 Id="22233109-3b8f-4e3c-83b3-eb1332cd30ac"
>
</ReqRef><Steps>
<Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 Name="Step1 - Setup"
>
<SubSteps>
<SubStep
 Name="Sub-step1"
>
<Actions>
<Action>Kernel.TrainData.TrainData.Value.T_brake_emergency &lt;- Kernel.TrainData.BrakingParameters.T_brake_build_upSet
{
    EddyCurrent =&gt; 0.4,
    EddyCurrent_Magnetic =&gt; 0.78,
    EddyCurrent_Regenerative =&gt; 1.2,
    EddyCurrent_Ep =&gt; 0.12,
    Magnetic_Regenerative =&gt; 0.54,
    Magnetic_Ep =&gt; 0.64,
    Regenerative_Ep =&gt; 1.25,
    EddyCurrent_Magnetic_Regenerative =&gt; 0.47,
    EddyCurrent_Magnetic_Ep =&gt; 0.6,
    EddyCurrent_Regenerative_Ep =&gt; 0.11,
    Magnetic_Regenerative_Ep =&gt; 0.98,
    EddyCurrent_Magnetic_Regenerative_Ep =&gt; 1.7,
    Magnetic =&gt; 1.82,
    Regenerative =&gt; 0.96,
    Ep =&gt; 0.85
}</Action><Action>Kernel.TrainData.TrainData.Value.T_brake_service &lt;- Kernel.TrainData.BrakingParameters.T_brake_build_upSet
{
    EddyCurrent =&gt; 1.16,
    EddyCurrent_Magnetic =&gt; 0.48,
    EddyCurrent_Regenerative =&gt; 2.01,
    EddyCurrent_Ep =&gt; 0.72,
    Magnetic_Regenerative =&gt; 0.28,
    Magnetic_Ep =&gt; 0.56,
    Regenerative_Ep =&gt; 1.63,
    EddyCurrent_Magnetic_Regenerative =&gt; 0.45,
    EddyCurrent_Magnetic_Ep =&gt; 1.4,
    EddyCurrent_Regenerative_Ep =&gt; 1.8,
    Magnetic_Regenerative_Ep =&gt; 0.78,
    EddyCurrent_Magnetic_Regenerative_Ep =&gt; 0.21,
    Magnetic =&gt; 0.55,
    Regenerative =&gt; 1.15,
    Ep =&gt; 0.46
}</Action><Action>Kernel.TrainData.TrainData.Value.EddyCurrentBrake &lt;- Kernel.TrainData.BrakingParameters.SpecialBrake
{
    IsActive =&gt; True,
    InterfaceStatus =&gt; Kernel.TrainData.BrakingParameters.BrakeInterfaceStatus.Both
}</Action><Action>Kernel.TrainData.TrainData.Value.EpBrake &lt;- Kernel.TrainData.BrakingParameters.SpecialBrake
{
    IsActive =&gt; True,
    InterfaceStatus =&gt; Kernel.TrainData.BrakingParameters.BrakeInterfaceStatus.Both
}</Action><Action>Kernel.TrainData.TrainData.Value.MagneticShoeBrake &lt;- Kernel.TrainData.BrakingParameters.SpecialBrake
{
    IsActive =&gt; True,
    InterfaceStatus =&gt; Kernel.TrainData.BrakingParameters.BrakeInterfaceStatus.EB
}</Action><Action>Kernel.TrainData.TrainData.Value.RegenerativeBrake &lt;- Kernel.TrainData.BrakingParameters.SpecialBrake
{
    IsActive =&gt; True,
    InterfaceStatus =&gt; Kernel.TrainData.BrakingParameters.BrakeInterfaceStatus.NoInterface
}</Action><Action>Kernel.TrainData.TrainData.Value.BrakePosition &lt;- Kernel.TrainData.BrakingParameters.BrakePositions.PassengerTrainInP</Action></Actions>
<Expectations>
<Expectation
 Kind="Instantaneous"
>Kernel.TrainData.BrakingParameters.T_brake_emergency() == 0.6</Expectation><Expectation
 Kind="Instantaneous"
>Kernel.TrainData.BrakingParameters.T_brake_service() == 0.72</Expectation><Expectation
 Kind="Instantaneous"
>Kernel.TrainData.BrakingParameters.T_be() == 0.6</Expectation><Expectation
 Kind="Instantaneous"
>Kernel.TrainData.BrakingParameters.T_bs() == 0.72</Expectation></Expectations>
</SubStep></SubSteps>
</Step><Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 Name="Step2 - Disable Eddy Current brake"
>
<SubSteps>
<SubStep
 Name="Sub-step1"
>
<Actions>
<Action>Kernel.TrainData.TrainData.Value.EddyCurrentBrake &lt;- Kernel.TrainData.BrakingParameters.SpecialBrake
{
    IsActive =&gt; True,
    InterfaceStatus =&gt; Kernel.TrainData.BrakingParameters.BrakeInterfaceStatus.NoInterface
}</Action></Actions>
<Expectations>
<Expectation
 Kind="Instantaneous"
>Kernel.TrainData.BrakingParameters.T_brake_service() == 0.46</Expectation><Expectation
 Kind="Instantaneous"
>Kernel.TrainData.BrakingParameters.T_brake_emergency() == 0.64</Expectation><Expectation
 Kind="Instantaneous"
>Kernel.TrainData.BrakingParameters.T_be() == 0.64</Expectation><Expectation
 Kind="Instantaneous"
>Kernel.TrainData.BrakingParameters.T_bs() == 0.46</Expectation></Expectations>
</SubStep></SubSteps>
</Step><Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 Name="Step3 - Disable Electro pneumatic brake for EB"
>
<SubSteps>
<SubStep
 Name="Sub-step1"
>
<Actions>
<Action>Kernel.TrainData.TrainData.Value.EpBrake &lt;- Kernel.TrainData.BrakingParameters.SpecialBrake
{
    IsActive =&gt; True,
    InterfaceStatus =&gt; Kernel.TrainData.BrakingParameters.BrakeInterfaceStatus.SB
}</Action></Actions>
<Expectations>
<Expectation
 Kind="Instantaneous"
>Kernel.TrainData.BrakingParameters.T_brake_service() == 0.46</Expectation><Expectation
 Kind="Instantaneous"
>Kernel.TrainData.BrakingParameters.T_brake_emergency() == 1.82</Expectation><Expectation
 Kind="Instantaneous"
>Kernel.TrainData.BrakingParameters.T_be() == 1.82</Expectation><Expectation
 Kind="Instantaneous"
>Kernel.TrainData.BrakingParameters.T_bs() == 0.46</Expectation></Expectations>
</SubStep></SubSteps>
</Step><Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 Name="Step4 - Conversion model is used"
>
<SubSteps>
<SubStep
 SkipEngine="TRUE"
 Name="Sub-step1"
>
<Actions>
<Action>Kernel.TrainData.TrainData.Value.T_brake_emergency &lt;- EMPTY</Action><Action>Kernel.TrainData.TrainData.Value.TrainLength &lt;- 160.0</Action><Action>Kernel.TrainData.TrainData.Value.BrakePercentage &lt;- 147.0</Action><Action>Kernel.TrainData.TrainData.Value.EBModels &lt;- EMPTY</Action><Action>Kernel.TrainData.TrainData.Value.SBModels &lt;- EMPTY</Action></Actions>
</SubStep></SubSteps>
</Step><Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 Name="Step5 - Compute T_brake_emergency"
>
<SubSteps>
<SubStep
 Name="Sub-step1"
>
<Actions>
<Action>Kernel.TrainData.BrakingParameters.ConversionModel.Initialize()</Action></Actions>
<Expectations>
<Expectation
 Kind="Instantaneous"
>Kernel.TrainData.BrakingParameters.T_be() == 5.522</Expectation></Expectations>
</SubStep></SubSteps>
</Step></Steps>
</TestCase></TestCases>
</SubSequence></SubSequences>
</Frame>
