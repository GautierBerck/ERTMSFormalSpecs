<Frame
 CycleDuration="Kernel.CycleDuration"
 Name="MA - Functional tests"
>
<SubSequences>
<SubSequence
 D_LRBG=""
 Level=""
 Mode=""
 NID_LRBG=""
 Q_DIRLRBG=""
 Q_DIRTRAIN=""
 Q_DLRBG=""
 RBC_ID=""
 RBCPhone=""
 Name="MA structure - Danger point"
>
<TestCases>
<TestCase
 Feature="0"
 Case="0"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="MA structure - Danger point"
>
<ReqRef
 Id="53a5391c-db43-4e26-95c4-26b8316d77a8"
>
</ReqRef><ReqRef
 Id="48fba67a-8f19-4715-92e7-aea531d01881"
>
</ReqRef><ReqRef
 Id="9396972e-8fb4-49d1-9c8f-e2cd2efb6005"
>
</ReqRef><ReqRef
 Id="21d0760f-a057-466a-bdf0-41f316e4721c"
>
</ReqRef><Steps>
<Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 Name="Step1 - Setup"
>
<SubSteps>
<SubStep
 Name="Sub-step1 - Initialize test environment"
>
<Actions>
<Action>Kernel.InitializeTestEnvironment()</Action></Actions>
</SubStep><SubStep
 Name="Sub-step2 - Initialize elements to accept MA"
>
<Actions>
<Action>Kernel.InitializeElementsForMA()</Action></Actions>
</SubStep></SubSteps>
</Step><Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 Name="Step2 - New MA received in BG message, level 1"
>
<SubSteps>
<SubStep
 Name="Sub-step1"
>
<Actions>
<Action>BTM.Message &lt;- Messages.EUROBALISE.Message
{
    Q_UPDOWN=&gt; Messages.Q_UPDOWN.Up_link_telegram,
    M_VERSION=&gt;1,
    Q_MEDIA=&gt;Messages.Q_MEDIA.Balise,
    N_PIG=&gt;8,
    N_TOTAL=&gt;0,
    M_DUP=&gt;Messages.M_DUP.No_duplicates,
    M_MCOUNT=&gt;4,
    NID_C=&gt;140,
    NID_BG=&gt;2124,
    Q_LINK=&gt;Messages.Q_LINK.Linked,
    Sequence1=&gt;
    [
        Messages.EUROBALISE.SubStructure1
        {
            TRACK_TO_TRAIN=&gt;Messages.PACKET.TRACK_TO_TRAIN.Message
            {
                LEVEL_1_MOVEMENT_AUTHORITY=&gt;Messages.PACKET.TRACK_TO_TRAIN.LEVEL_1_MOVEMENT_AUTHORITY.Message
                {
                    NID_PACKET=&gt;8,
                    Q_DIR=&gt;Messages.Q_DIR.Nominal,
                    L_PACKET=&gt;400,
                    Q_SCALE=&gt;Messages.Q_SCALE._10_cm_scaleC,
                    V_MAIN=&gt;16,
                    V_LOA=&gt;8,
                    T_LOA=&gt;200,
                    N_ITER=&gt;0,
                    Sequence1=&gt;[],
                    L_ENDSECTION=&gt;10000,
                    Q_SECTIONTIMER=&gt;Messages.Q_SECTIONTIMER.No_Section_Timer_information,
                    T_SECTIONTIMER=&gt;0,
                    D_SECTIONTIMERSTOPLOC=&gt;0,
                    Q_ENDTIMER=&gt;Messages.Q_ENDTIMER.No_End_section_timer_information,
                    T_ENDTIMER=&gt;0,
                    D_ENDTIMERSTARTLOC=&gt;0,
                    Q_DANGERPOINT=&gt;Messages.Q_DANGERPOINT.Danger_point_information_to_follow,
                    D_DP=&gt;12000,
                    V_RELEASEDP=&gt;5,
                    Q_OVERLAP=&gt;Messages.Q_OVERLAP.No_overlap_information,
                    D_STARTOL=&gt;0,
                    T_OL=&gt;0,
                    D_OL=&gt;0,
                    V_RELEASEOL=&gt;0
                }
            }
        }
    ]
}</Action><Action>Kernel.MA.MA &lt;- EMPTY</Action><Action>BTM.LRBG &lt;- BTM.BaliseGroup
{
    NID =&gt; 9618,
    Orientation =&gt; Orientation.Nominal,
    Position =&gt; BTM.Position
    {
        OverReadingAmountOdo =&gt; 29.0,
        Position =&gt; 2000.0,
        UnderReadingAmountOdo =&gt; 35.0
    }
}</Action><Action>Odometry.Accuracy &lt;- Odometry.OdometerAccuracy
{
    D_ura =&gt; 54.0,
    D_ora =&gt; 51.0,
    V_ora =&gt; 0.0,
    V_ura =&gt; 0.0
}</Action></Actions>
<Expectations>
<Expectation
 Kind="Instantaneous"
>Available ( Kernel.MA.MA )</Expectation><Expectation
 Kind="Instantaneous"
>Kernel.MA.MA.EndSection.DangerPoint.ReleaseSpeed == 25.0</Expectation><Expectation
 Kind="Instantaneous"
>Kernel.MA.MA.EndSection.DangerPoint.Distance == 1200.0</Expectation><Expectation
 Kind="Instantaneous"
>Kernel.SpeedAndDistanceMonitoring.ReleaseSpeedSupervision.ReleaseSpeed == 25.0</Expectation></Expectations>
</SubStep></SubSteps>
</Step><Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 Name="Step3 - New MA received in BG message, level 2"
>
<SubSteps>
<SubStep
 Name="Sub-step1"
>
<Actions>
<Action>BTM.Message &lt;- Messages.EUROBALISE.Message
{
    Q_UPDOWN=&gt;Messages.Q_UPDOWN.Up_link_telegram,
    M_VERSION=&gt;1,
    Q_MEDIA=&gt;Messages.Q_MEDIA.Balise,
    N_PIG=&gt;8,
    N_TOTAL=&gt;0,
    M_DUP=&gt;Messages.M_DUP.No_duplicates,
    M_MCOUNT=&gt;4,
    NID_C=&gt;140,
    NID_BG=&gt;2124,
    Q_LINK=&gt;Messages.Q_LINK.Linked,
    Sequence1=&gt;
    [
        Messages.EUROBALISE.SubStructure1
        {
            TRACK_TO_TRAIN=&gt;Messages.PACKET.TRACK_TO_TRAIN.Message
            {
                LEVEL_2_3_MOVEMENT_AUTHORITY=&gt;Messages.PACKET.TRACK_TO_TRAIN.LEVEL_2_3_MOVEMENT_AUTHORITY.Message
                {
                    NID_PACKET=&gt;8,
                    Q_DIR=&gt;Messages.Q_DIR.Nominal,
                    L_PACKET=&gt;400,
                    Q_SCALE=&gt;Messages.Q_SCALE._10_cm_scaleC,
                    V_LOA=&gt;5,
                    T_LOA=&gt;150,
                    N_ITER=&gt;0,
                    Sequence1=&gt;[],
                    L_ENDSECTION=&gt;800,
                    Q_SECTIONTIMER=&gt;Messages.Q_SECTIONTIMER.No_Section_Timer_information,
                    T_SECTIONTIMER=&gt;0,
                    D_SECTIONTIMERSTOPLOC=&gt;0,
                    Q_ENDTIMER=&gt;Messages.Q_ENDTIMER.No_End_section_timer_information,
                    T_ENDTIMER=&gt;0,
                    D_ENDTIMERSTARTLOC=&gt;0,
                    Q_DANGERPOINT=&gt;Messages.Q_DANGERPOINT.Danger_point_information_to_follow,
                    D_DP=&gt;8400,
                    V_RELEASEDP=&gt;4,
                    Q_OVERLAP=&gt;Messages.Q_OVERLAP.No_overlap_information,
                    D_STARTOL=&gt;0,
                    T_OL=&gt;0,
                    D_OL=&gt;0,
                    V_RELEASEOL=&gt;0
                }
            }
        }
    ]
}</Action><Action>Kernel.MA.MA &lt;- EMPTY</Action></Actions>
<Expectations>
<Expectation
 Kind="Instantaneous"
>Available ( Kernel.MA.MA )</Expectation><Expectation
 Kind="Instantaneous"
>Kernel.SpeedAndDistanceMonitoring.ReleaseSpeedSupervision.ReleaseSpeed == 20.0</Expectation><Expectation
 Kind="Instantaneous"
>Kernel.MA.MA.EndSection.DangerPoint.ReleaseSpeed == 20.0</Expectation><Expectation
 Kind="Instantaneous"
>Kernel.MA.MA.EndSection.DangerPoint.Distance == 840.0</Expectation></Expectations>
</SubStep></SubSteps>
</Step></Steps>
</TestCase></TestCases>
</SubSequence><SubSequence
 D_LRBG=""
 Level=""
 Mode=""
 NID_LRBG=""
 Q_DIRLRBG=""
 Q_DIRTRAIN=""
 Q_DLRBG=""
 RBC_ID=""
 RBCPhone=""
 Name="MA structure - Default fields"
>
<TestCases>
<TestCase
 Feature="0"
 Case="0"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="MA structure - Default fields"
>
<ReqRef
 Id="e0b44a69-1080-47e9-80b7-b635996f4239"
>
</ReqRef><ReqRef
 Id="9d444c1e-f8ce-44ed-adb0-f81c08abac75"
>
</ReqRef><ReqRef
 Id="5d3380ae-3cb4-4f42-a7ba-d37280d33119"
>
</ReqRef><ReqRef
 Id="9396972e-8fb4-49d1-9c8f-e2cd2efb6005"
>
</ReqRef><ReqRef
 Id="d949102e-f89b-489f-8acc-cf60824bd0e5"
>
</ReqRef><Steps>
<Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 Name="Step1 - Setup"
>
<SubSteps>
<SubStep
 Name="Sub-step1 - Initialize test environment"
>
<Actions>
<Action>Kernel.InitializeTestEnvironment()</Action></Actions>
</SubStep><SubStep
 Name="Sub-step2 - Initialize elements to accept MA"
>
<Actions>
<Action>Kernel.InitializeElementsForMA()</Action></Actions>
</SubStep></SubSteps>
</Step><Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 Name="Step2 - New MA received in BG message, level 1"
>
<SubSteps>
<SubStep
 Name="Sub-step1"
>
<Actions>
<Action>BTM.Message &lt;- Messages.EUROBALISE.Message
{
    Q_UPDOWN=&gt;Messages.Q_UPDOWN.Up_link_telegram,
    M_VERSION=&gt;1,
    Q_MEDIA=&gt;Messages.Q_MEDIA.Balise,
    N_PIG=&gt;8,
    N_TOTAL=&gt;0,
    M_DUP=&gt;Messages.M_DUP.No_duplicates,
    M_MCOUNT=&gt;4,
    NID_C=&gt;140,
    NID_BG=&gt;2124,
    Q_LINK=&gt;Messages.Q_LINK.Linked,
    Sequence1=&gt;
    [
        Messages.EUROBALISE.SubStructure1
        {
            TRACK_TO_TRAIN=&gt;Messages.PACKET.TRACK_TO_TRAIN.Message
            {
                LEVEL_1_MOVEMENT_AUTHORITY=&gt;Messages.PACKET.TRACK_TO_TRAIN.LEVEL_1_MOVEMENT_AUTHORITY.Message
                {
                    NID_PACKET=&gt;8,
                    Q_DIR=&gt;Messages.Q_DIR.Nominal,
                    L_PACKET=&gt;400,
                    Q_SCALE=&gt;Messages.Q_SCALE._1_m_scaleC,
                    V_MAIN=&gt;16,
                    V_LOA=&gt;8,
                    T_LOA=&gt;200,
                    N_ITER=&gt;0,
                    Sequence1=&gt;[],
                    L_ENDSECTION=&gt;1000,
                    Q_SECTIONTIMER=&gt;Messages.Q_SECTIONTIMER.No_Section_Timer_information,
                    T_SECTIONTIMER=&gt;0,
                    D_SECTIONTIMERSTOPLOC=&gt;0,
                    Q_ENDTIMER=&gt;Messages.Q_ENDTIMER.No_End_section_timer_information,
                    T_ENDTIMER=&gt;0,
                    D_ENDTIMERSTARTLOC=&gt;0,
                    Q_DANGERPOINT=&gt;Messages.Q_DANGERPOINT.No_danger_point_information,
                    D_DP=&gt;0,
                    V_RELEASEDP=&gt;0,
                    Q_OVERLAP=&gt;Messages.Q_OVERLAP.No_overlap_information,
                    D_STARTOL=&gt;0,
                    T_OL=&gt;0,
                    D_OL=&gt;0,
                    V_RELEASEOL=&gt;0
                }
            }
        }
    ]
}</Action><Action>Kernel.MA.MA &lt;- EMPTY</Action><Action>BTM.LRBG &lt;- BTM.BaliseGroup
{
    NID =&gt; 9620,
    Orientation =&gt; Orientation.Nominal,
    Position =&gt; BTM.Position
    {
        OverReadingAmountOdo =&gt; 44.0,
        Position =&gt; 2500.0,
        UnderReadingAmountOdo =&gt; 44.0
    }
}</Action><Action>Odometry.Accuracy &lt;- Odometry.OdometerAccuracy
{
    D_ura =&gt; 49.0,
    D_ora =&gt; 48.0,
    V_ora =&gt; 0.0,
    V_ura =&gt; 0.0
}</Action></Actions>
<Expectations>
<Expectation
 Kind="Instantaneous"
>Available ( Kernel.MA.MA )</Expectation><Expectation
 Kind="Instantaneous"
>Kernel.MA.SignallingRelatedSpeedRestriction == 80.0</Expectation><Expectation
 Kind="Instantaneous"
>Kernel.MA.MA.Sections == []</Expectation><Expectation
 Kind="Instantaneous"
>Kernel.MA.MA.TargetSpeed == 40.0</Expectation><Expectation
 Kind="Instantaneous"
>Kernel.MA.MA.TargetSpeedTimeOut == 200.0</Expectation><Expectation
 Kind="Instantaneous"
>Kernel.MA.MA.EndSection.Length == 1000.0</Expectation><Expectation
 Kind="Instantaneous"
>Kernel.MA.MA.EndSection.Overlap == EMPTY</Expectation><Expectation
 Kind="Instantaneous"
>Kernel.MA.MA.EndSection.EndSectionTimeOut == EMPTY</Expectation><Expectation
 Kind="Instantaneous"
>Kernel.MA.MA.EndSection.DangerPoint == EMPTY</Expectation></Expectations>
</SubStep></SubSteps>
</Step><Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 Name="Step3 - Check EOA"
>
<SubSteps>
<SubStep
 Name="Sub-step1"
>
<Expectations>
<Expectation
 Kind="Instantaneous"
>Kernel.MA.EndOfMovementAuthority().Location == 1000.0</Expectation><Expectation
 Kind="Instantaneous"
>Kernel.MA.EndOfMovementAuthority().Speed == 40.0</Expectation></Expectations>
</SubStep></SubSteps>
</Step><Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 Name="Step4 - New MA received in BG message, level 2"
>
<SubSteps>
<SubStep
 Name="Sub-step1"
>
<Actions>
<Action>BTM.Message &lt;- Messages.EUROBALISE.Message
{
    Q_UPDOWN=&gt;Messages.Q_UPDOWN.Up_link_telegram,
    M_VERSION=&gt;1,
    Q_MEDIA=&gt;Messages.Q_MEDIA.Balise,
    N_PIG=&gt;8,
    N_TOTAL=&gt;0,
    M_DUP=&gt;Messages.M_DUP.No_duplicates,
    M_MCOUNT=&gt;4,
    NID_C=&gt;140,
    NID_BG=&gt;2124,
    Q_LINK=&gt;Messages.Q_LINK.Linked,
    Sequence1=&gt;
    [
        Messages.EUROBALISE.SubStructure1
        {
            TRACK_TO_TRAIN=&gt;Messages.PACKET.TRACK_TO_TRAIN.Message
            {
                LEVEL_2_3_MOVEMENT_AUTHORITY=&gt;Messages.PACKET.TRACK_TO_TRAIN.LEVEL_2_3_MOVEMENT_AUTHORITY.Message
                {
                    NID_PACKET=&gt;8,
                    Q_DIR=&gt;Messages.Q_DIR.Nominal,
                    L_PACKET=&gt;400,
                    Q_SCALE=&gt;Messages.Q_SCALE._10_m_scaleC,
                    V_LOA=&gt;5,
                    T_LOA=&gt;150,
                    N_ITER=&gt;0,
                    Sequence1=&gt;[],
                    L_ENDSECTION=&gt;80,
                    Q_SECTIONTIMER=&gt;Messages.Q_SECTIONTIMER.No_Section_Timer_information,
                    T_SECTIONTIMER=&gt;0,
                    D_SECTIONTIMERSTOPLOC=&gt;0,
                    Q_ENDTIMER=&gt;Messages.Q_ENDTIMER.No_End_section_timer_information,
                    T_ENDTIMER=&gt;0,
                    D_ENDTIMERSTARTLOC=&gt;0,
                    Q_DANGERPOINT=&gt;Messages.Q_DANGERPOINT.No_danger_point_information,
                    D_DP=&gt;0,
                    V_RELEASEDP=&gt;0,
                    Q_OVERLAP=&gt;Messages.Q_OVERLAP.No_overlap_information,
                    D_STARTOL=&gt;0,
                    T_OL=&gt;0,
                    D_OL=&gt;0,
                    V_RELEASEOL=&gt;0
                }
            }
        }
    ]
}</Action><Action>Kernel.MA.MA &lt;- EMPTY</Action></Actions>
<Expectations>
<Expectation
 Kind="Instantaneous"
>Available ( Kernel.MA.MA )</Expectation><Expectation
 Kind="Instantaneous"
>Kernel.MA.MA.Sections == []</Expectation><Expectation
 Kind="Instantaneous"
>Kernel.MA.MA.TargetSpeed == 25.0</Expectation><Expectation
 Kind="Instantaneous"
>Kernel.MA.MA.TargetSpeedTimeOut == 150.0</Expectation><Expectation
 Kind="Instantaneous"
>Kernel.MA.MA.EndSection.Length == 800.0</Expectation><Expectation
 Kind="Instantaneous"
>Kernel.MA.MA.EndSection.EndSectionTimeOut == EMPTY</Expectation><Expectation
 Kind="Instantaneous"
>Kernel.MA.MA.EndSection.Overlap == EMPTY</Expectation><Expectation
 Kind="Instantaneous"
>Kernel.MA.MA.EndSection.DangerPoint == EMPTY</Expectation></Expectations>
</SubStep></SubSteps>
</Step><Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 Name="Step5 - Check EOA"
>
<SubSteps>
<SubStep
 Name="Sub-step1"
>
<Expectations>
<Expectation
 Kind="Instantaneous"
>Kernel.MA.EndOfMovementAuthority().Location == 800.0</Expectation><Expectation
 Kind="Instantaneous"
>Kernel.MA.EndOfMovementAuthority().Speed == 25.0</Expectation></Expectations>
</SubStep></SubSteps>
</Step></Steps>
</TestCase></TestCases>
</SubSequence><SubSequence
 D_LRBG=""
 Level=""
 Mode=""
 NID_LRBG=""
 Q_DIRLRBG=""
 Q_DIRTRAIN=""
 Q_DLRBG=""
 RBC_ID=""
 RBCPhone=""
 Name="MA structure - End section time-out"
>
<TestCases>
<TestCase
 Feature="0"
 Case="0"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="MA structure - End section time-out"
>
<ReqRef
 Id="9396972e-8fb4-49d1-9c8f-e2cd2efb6005"
>
</ReqRef><ReqRef
 Id="8d09ca53-1394-4843-b8d6-829a86336ca3"
>
</ReqRef><ReqRef
 Id="21d0760f-a057-466a-bdf0-41f316e4721c"
>
</ReqRef><Steps>
<Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 Name="Step1 - Setup"
>
<SubSteps>
<SubStep
 Name="Sub-step1 - Initialize test environment"
>
<Actions>
<Action>Kernel.InitializeTestEnvironment()</Action></Actions>
</SubStep><SubStep
 Name="Sub-step2 - Initialize elements to accept MA"
>
<Actions>
<Action>Kernel.InitializeElementsForMA()</Action></Actions>
</SubStep></SubSteps>
</Step><Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 Name="Step2 - New MA received in BG message, level 1"
>
<SubSteps>
<SubStep
 Name="Sub-step1"
>
<Actions>
<Action>BTM.Message &lt;- Messages.EUROBALISE.Message
{
    Q_UPDOWN=&gt;Messages.Q_UPDOWN.Up_link_telegram,
    M_VERSION=&gt;1,
    Q_MEDIA=&gt;Messages.Q_MEDIA.Balise,
    N_PIG=&gt;8,
    N_TOTAL=&gt;0,
    M_DUP=&gt;Messages.M_DUP.No_duplicates,
    M_MCOUNT=&gt;4,
    NID_C=&gt;140,
    NID_BG=&gt;2124,
    Q_LINK=&gt;Messages.Q_LINK.Linked,
    Sequence1=&gt;
    [
        Messages.EUROBALISE.SubStructure1
        {
            TRACK_TO_TRAIN=&gt;Messages.PACKET.TRACK_TO_TRAIN.Message
            {
                LEVEL_1_MOVEMENT_AUTHORITY=&gt;Messages.PACKET.TRACK_TO_TRAIN.LEVEL_1_MOVEMENT_AUTHORITY.Message
                {
                    NID_PACKET=&gt;8,
                    Q_DIR=&gt;Messages.Q_DIR.Nominal,
                    L_PACKET=&gt;400,
                    Q_SCALE=&gt;Messages.Q_SCALE._1_m_scaleC,
                    V_MAIN=&gt;16,
                    V_LOA=&gt;8,
                    T_LOA=&gt;200,
                    N_ITER=&gt;0,
                    Sequence1=&gt;[],
                    L_ENDSECTION=&gt;1000,
                    Q_SECTIONTIMER=&gt;Messages.Q_SECTIONTIMER.No_Section_Timer_information,
                    T_SECTIONTIMER=&gt;0,
                    D_SECTIONTIMERSTOPLOC=&gt;0,
                    Q_ENDTIMER=&gt;Messages.Q_ENDTIMER.End_section_timer_information_to_follow,
                    T_ENDTIMER=&gt;200,
                    D_ENDTIMERSTARTLOC=&gt;900,
                    Q_DANGERPOINT=&gt;Messages.Q_DANGERPOINT.No_danger_point_information,
                    D_DP=&gt;0,
                    V_RELEASEDP=&gt;0,
                    Q_OVERLAP=&gt;Messages.Q_OVERLAP.No_overlap_information,
                    D_STARTOL=&gt;0,
                    T_OL=&gt;0,
                    D_OL=&gt;0,
                    V_RELEASEOL=&gt;0
                }
            }
        }
    ]
}</Action><Action>Kernel.MA.MA &lt;- EMPTY</Action><Action>BTM.LRBG &lt;- BTM.BaliseGroup
{
    NID =&gt; 9622,
    Orientation =&gt; Orientation.Nominal,
    Position =&gt; BTM.Position
    {
        OverReadingAmountOdo =&gt; 58.0,
        Position =&gt; 3000.0,
        UnderReadingAmountOdo =&gt; 64.0
    }
}</Action><Action>Odometry.Accuracy &lt;- Odometry.OdometerAccuracy
{
    D_ura =&gt; 88.0,
    D_ora =&gt; 75.0,
    V_ora =&gt; 0.0,
    V_ura =&gt; 0.0
}</Action></Actions>
<Expectations>
<Expectation
 Kind="Instantaneous"
>Available ( Kernel.MA.MA )</Expectation><Expectation
 Kind="Instantaneous"
>Kernel.MA.MA.EndSection.EndSectionTimeOut.Distance == 900.0</Expectation><Expectation
 Kind="Instantaneous"
>Available(Kernel.MA.MA.EndSection.EndSectionTimeOut)</Expectation><Expectation
 Kind="Instantaneous"
>Kernel.MA.MA.EndSection.EndSectionTimeOut.TimeOut == 200.0</Expectation></Expectations>
</SubStep></SubSteps>
</Step><Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 Name="Step3 - New MA received in BG message, level 2"
>
<SubSteps>
<SubStep
 Name="Sub-step1"
>
<Actions>
<Action>BTM.Message &lt;- Messages.EUROBALISE.Message
{
    Q_UPDOWN=&gt;Messages.Q_UPDOWN.Up_link_telegram,
    M_VERSION=&gt;1,
    Q_MEDIA=&gt;Messages.Q_MEDIA.Balise,
    N_PIG=&gt;8,
    N_TOTAL=&gt;0,
    M_DUP=&gt;Messages.M_DUP.No_duplicates,
    M_MCOUNT=&gt;4,
    NID_C=&gt;140,
    NID_BG=&gt;2124,
    Q_LINK=&gt;Messages.Q_LINK.Linked,
    Sequence1=&gt;
    [
        Messages.EUROBALISE.SubStructure1
        {
            TRACK_TO_TRAIN=&gt;Messages.PACKET.TRACK_TO_TRAIN.Message
            {
                LEVEL_2_3_MOVEMENT_AUTHORITY=&gt;Messages.PACKET.TRACK_TO_TRAIN.LEVEL_2_3_MOVEMENT_AUTHORITY.Message
                {
                    NID_PACKET=&gt;8,
                    Q_DIR=&gt;Messages.Q_DIR.Nominal,
                    L_PACKET=&gt;400,
                    Q_SCALE=&gt;Messages.Q_SCALE._10_cm_scaleC,
                    V_LOA=&gt;5,
                    T_LOA=&gt;150,
                    N_ITER=&gt;0,
                    Sequence1=&gt;[],
                    L_ENDSECTION=&gt;8000,
                    Q_SECTIONTIMER=&gt;Messages.Q_SECTIONTIMER.No_Section_Timer_information,
                    T_SECTIONTIMER=&gt;0,
                    D_SECTIONTIMERSTOPLOC=&gt;0,
                    Q_ENDTIMER=&gt;Messages.Q_ENDTIMER.End_section_timer_information_to_follow,
                    T_ENDTIMER=&gt;140,
                    D_ENDTIMERSTARTLOC=&gt;8200,
                    Q_DANGERPOINT=&gt;Messages.Q_DANGERPOINT.No_danger_point_information,
                    D_DP=&gt;0,
                    V_RELEASEDP=&gt;0,
                    Q_OVERLAP=&gt;Messages.Q_OVERLAP.No_overlap_information,
                    D_STARTOL=&gt;0,
                    T_OL=&gt;0,
                    D_OL=&gt;0,
                    V_RELEASEOL=&gt;0
                }
            }
        }
    ]
}</Action><Action>Kernel.MA.MA &lt;- EMPTY</Action></Actions>
<Expectations>
<Expectation
 Kind="Instantaneous"
>Available ( Kernel.MA.MA )</Expectation><Expectation
 Kind="Instantaneous"
>Kernel.MA.MA.EndSection.EndSectionTimeOut.TimeOut == 140.0</Expectation><Expectation
 Kind="Instantaneous"
>Kernel.MA.MA.EndSection.EndSectionTimeOut.Distance == 820.0</Expectation><Expectation
 Kind="Instantaneous"
>Available(Kernel.MA.MA.EndSection.EndSectionTimeOut)</Expectation></Expectations>
</SubStep></SubSteps>
</Step></Steps>
</TestCase></TestCases>
</SubSequence><SubSequence
 D_LRBG=""
 Level=""
 Mode=""
 NID_LRBG=""
 Q_DIRLRBG=""
 Q_DIRTRAIN=""
 Q_DLRBG=""
 RBC_ID=""
 RBCPhone=""
 Name="Release speed"
>
<TestCases>
<TestCase
 Feature="0"
 Case="0"
 Implemented="TRUE"
 Name="Release speed"
>
<ReqRef
 Id="197c8e6f-0fae-4862-be76-b280ffa433d2"
>
</ReqRef><ReqRef
 Id="9396972e-8fb4-49d1-9c8f-e2cd2efb6005"
>
</ReqRef><Steps>
<Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 Name="Step1 - Setup"
>
<SubSteps>
<SubStep
 Name="Sub-step1 - Initialize test environment"
>
<Actions>
<Action>Kernel.InitializeTestEnvironment()</Action></Actions>
</SubStep><SubStep
 Name="Sub-step2 - Initialize elements to accept MA"
>
<Actions>
<Action>Kernel.InitializeElementsForMA()</Action></Actions>
</SubStep></SubSteps>
</Step><Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 Name="Step2 - New MA with Danger Point received"
>
<SubSteps>
<SubStep
 Name="Sub-step1"
>
<Actions>
<Action>BTM.Message &lt;- Messages.EUROBALISE.Message
{
    Q_UPDOWN=&gt;Messages.Q_UPDOWN.Up_link_telegram,
    M_VERSION=&gt;1,
    Q_MEDIA=&gt;Messages.Q_MEDIA.Balise,
    N_PIG=&gt;8,
    N_TOTAL=&gt;0,
    M_DUP=&gt;Messages.M_DUP.No_duplicates,
    M_MCOUNT=&gt;4,
    NID_C=&gt;140,
    NID_BG=&gt;2124,
    Q_LINK=&gt;Messages.Q_LINK.Linked,
    Sequence1=&gt;
    [
        Messages.EUROBALISE.SubStructure1
        {
            TRACK_TO_TRAIN=&gt;Messages.PACKET.TRACK_TO_TRAIN.Message
            {
                LEVEL_1_MOVEMENT_AUTHORITY=&gt;Messages.PACKET.TRACK_TO_TRAIN.LEVEL_1_MOVEMENT_AUTHORITY.Message
                {
                    NID_PACKET=&gt;8,
                    Q_DIR=&gt;Messages.Q_DIR.Nominal,
                    L_PACKET=&gt;400,
                    Q_SCALE=&gt;Messages.Q_SCALE._10_cm_scaleC,
                    V_MAIN=&gt;16,
                    V_LOA=&gt;8,
                    T_LOA=&gt;200,
                    N_ITER=&gt;0,
                    Sequence1=&gt;[],
                    L_ENDSECTION=&gt;10000,
                    Q_SECTIONTIMER=&gt;Messages.Q_SECTIONTIMER.No_Section_Timer_information,
                    T_SECTIONTIMER=&gt;0,
                    D_SECTIONTIMERSTOPLOC=&gt;0,
                    Q_ENDTIMER=&gt;Messages.Q_ENDTIMER.No_End_section_timer_information,
                    T_ENDTIMER=&gt;0,
                    D_ENDTIMERSTARTLOC=&gt;0,
                    Q_DANGERPOINT=&gt;Messages.Q_DANGERPOINT.Danger_point_information_to_follow,
                    D_DP=&gt;12000,
                    V_RELEASEDP=&gt;5,
                    Q_OVERLAP=&gt;Messages.Q_OVERLAP.No_overlap_information,
                    D_STARTOL=&gt;0,
                    T_OL=&gt;0,
                    D_OL=&gt;0,
                    V_RELEASEOL=&gt;0
                }
            }
        }
    ]
}</Action><Action>BTM.LRBG &lt;- BTM.BaliseGroup
{
    NID =&gt; 9628,
    Orientation =&gt; Orientation.Nominal,
    Position =&gt; BTM.Position
    {
        OverReadingAmountOdo =&gt; 21.0,
        Position =&gt; 4500.0,
        UnderReadingAmountOdo =&gt; 21.0
    }
}</Action><Action>Odometry.Accuracy &lt;- Odometry.OdometerAccuracy
{
    D_ura =&gt; 27.0,
    D_ora =&gt; 26.0,
    V_ora =&gt; 0.0,
    V_ura =&gt; 0.0
}</Action></Actions>
<Expectations>
<Expectation
 Kind="Instantaneous"
>Kernel.SpeedAndDistanceMonitoring.ReleaseSpeedSupervision.ReleaseSpeed == 25.0</Expectation></Expectations>
</SubStep></SubSteps>
</Step><Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 Name="Step3 - New MA with Overlap received"
>
<SubSteps>
<SubStep
 Name="Sub-step1"
>
<Actions>
<Action>BTM.Message &lt;- Messages.EUROBALISE.Message
{
    Q_UPDOWN=&gt;Messages.Q_UPDOWN.Up_link_telegram,
    M_VERSION=&gt;1,
    Q_MEDIA=&gt;Messages.Q_MEDIA.Balise,
    N_PIG=&gt;8,
    N_TOTAL=&gt;0,
    M_DUP=&gt;Messages.M_DUP.No_duplicates,
    M_MCOUNT=&gt;4,
    NID_C=&gt;140,
    NID_BG=&gt;2124,
    Q_LINK=&gt;Messages.Q_LINK.Linked,
    Sequence1=&gt;
    [
        Messages.EUROBALISE.SubStructure1
        {
            TRACK_TO_TRAIN=&gt;Messages.PACKET.TRACK_TO_TRAIN.Message
            {
                LEVEL_2_3_MOVEMENT_AUTHORITY=&gt;Messages.PACKET.TRACK_TO_TRAIN.LEVEL_2_3_MOVEMENT_AUTHORITY.Message
                {
                    NID_PACKET=&gt;8,
                    Q_DIR=&gt;Messages.Q_DIR.Nominal,
                    L_PACKET=&gt;400,
                    Q_SCALE=&gt;Messages.Q_SCALE._10_cm_scaleC,
                    V_LOA=&gt;5,
                    T_LOA=&gt;150,
                    N_ITER=&gt;0,
                    Sequence1=&gt;[],
                    L_ENDSECTION=&gt;8000,
                    Q_SECTIONTIMER=&gt;Messages.Q_SECTIONTIMER.No_Section_Timer_information,
                    T_SECTIONTIMER=&gt;0,
                    D_SECTIONTIMERSTOPLOC=&gt;0,
                    Q_ENDTIMER=&gt;Messages.Q_ENDTIMER.No_End_section_timer_information,
                    T_ENDTIMER=&gt;0,
                    D_ENDTIMERSTARTLOC=&gt;0,
                    Q_DANGERPOINT=&gt;Messages.Q_DANGERPOINT.No_danger_point_information,
                    D_DP=&gt;0,
                    V_RELEASEDP=&gt;0,
                    Q_OVERLAP=&gt;Messages.Q_OVERLAP.Overlap_information_to_follow,
                    D_STARTOL=&gt;9000,
                    T_OL=&gt;70,
                    D_OL=&gt;500,
                    V_RELEASEOL=&gt;4
                }
            }
        }
    ]
}</Action></Actions>
<Expectations>
<Expectation
 Kind="Instantaneous"
>Kernel.SpeedAndDistanceMonitoring.ReleaseSpeedSupervision.ReleaseSpeed == 20.0</Expectation></Expectations>
</SubStep></SubSteps>
</Step><Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 Name="Step4 - New MA with Overlap and Danger Point received"
>
<SubSteps>
<SubStep
 Name="Sub-step1"
>
<Actions>
<Action>BTM.Message &lt;- Messages.EUROBALISE.Message
{
    Q_UPDOWN=&gt;Messages.Q_UPDOWN.Up_link_telegram,
    M_VERSION=&gt;1,
    Q_MEDIA=&gt;Messages.Q_MEDIA.Balise,
    N_PIG=&gt;8,
    N_TOTAL=&gt;0,
    M_DUP=&gt;Messages.M_DUP.No_duplicates,
    M_MCOUNT=&gt;4,
    NID_C=&gt;140,
    NID_BG=&gt;2124,
    Q_LINK=&gt;Messages.Q_LINK.Linked,
    Sequence1=&gt;
    [
        Messages.EUROBALISE.SubStructure1
        {
            TRACK_TO_TRAIN=&gt;Messages.PACKET.TRACK_TO_TRAIN.Message
            {
                LEVEL_2_3_MOVEMENT_AUTHORITY=&gt;Messages.PACKET.TRACK_TO_TRAIN.LEVEL_2_3_MOVEMENT_AUTHORITY.Message
                {
                    NID_PACKET=&gt;8,
                    Q_DIR=&gt;Messages.Q_DIR.Nominal,
                    L_PACKET=&gt;400,
                    Q_SCALE=&gt;Messages.Q_SCALE._1_m_scaleC,
                    V_LOA=&gt;5,
                    T_LOA=&gt;150,
                    N_ITER=&gt;0,
                    Sequence1=&gt;[],
                    L_ENDSECTION=&gt;800,
                    Q_SECTIONTIMER=&gt;Messages.Q_SECTIONTIMER.No_Section_Timer_information,
                    T_SECTIONTIMER=&gt;0,
                    D_SECTIONTIMERSTOPLOC=&gt;0,
                    Q_ENDTIMER=&gt;Messages.Q_ENDTIMER.No_End_section_timer_information,
                    T_ENDTIMER=&gt;0,
                    D_ENDTIMERSTARTLOC=&gt;0,
                    Q_DANGERPOINT=&gt;Messages.Q_DANGERPOINT.Danger_point_information_to_follow,
                    D_DP=&gt;850,
                    V_RELEASEDP=&gt;6,
                    Q_OVERLAP=&gt;Messages.Q_OVERLAP.Overlap_information_to_follow,
                    D_STARTOL=&gt;900,
                    T_OL=&gt;70,
                    D_OL=&gt;1000,
                    V_RELEASEOL=&gt;7
                }
            }
        }
    ]
}</Action></Actions>
<Expectations>
<Expectation
 Kind="Instantaneous"
>Kernel.SpeedAndDistanceMonitoring.ReleaseSpeedSupervision.ReleaseSpeed == 35.0</Expectation></Expectations>
</SubStep></SubSteps>
</Step><Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 Name="Step5 - New MA with no Overlap nor Danger Point received"
>
<SubSteps>
<SubStep
 Name="Sub-step1"
>
<Actions>
<Action>BTM.Message &lt;- Messages.EUROBALISE.Message
{
    Q_UPDOWN=&gt;Messages.Q_UPDOWN.Up_link_telegram,
    M_VERSION=&gt;1,
    Q_MEDIA=&gt;Messages.Q_MEDIA.Balise,
    N_PIG=&gt;8,
    N_TOTAL=&gt;0,
    M_DUP=&gt;Messages.M_DUP.No_duplicates,
    M_MCOUNT=&gt;4,
    NID_C=&gt;140,
    NID_BG=&gt;2124,
    Q_LINK=&gt;Messages.Q_LINK.Linked,
    Sequence1=&gt;
    [
        Messages.EUROBALISE.SubStructure1
        {
            TRACK_TO_TRAIN=&gt;Messages.PACKET.TRACK_TO_TRAIN.Message
            {
                LEVEL_1_MOVEMENT_AUTHORITY=&gt;Messages.PACKET.TRACK_TO_TRAIN.LEVEL_1_MOVEMENT_AUTHORITY.Message
                {
                    NID_PACKET=&gt;8,
                    Q_DIR=&gt;Messages.Q_DIR.Nominal,
                    L_PACKET=&gt;400,
                    Q_SCALE=&gt;Messages.Q_SCALE._10_cm_scaleC,
                    V_MAIN=&gt;80,
                    V_LOA=&gt;40,
                    T_LOA=&gt;200,
                    N_ITER=&gt;0,
                    Sequence1=&gt;[],
                    L_ENDSECTION=&gt;1000,
                    Q_SECTIONTIMER=&gt;Messages.Q_SECTIONTIMER.No_Section_Timer_information,
                    T_SECTIONTIMER=&gt;0,
                    D_SECTIONTIMERSTOPLOC=&gt;0,
                    Q_ENDTIMER=&gt;Messages.Q_ENDTIMER.No_End_section_timer_information,
                    T_ENDTIMER=&gt;0,
                    D_ENDTIMERSTARTLOC=&gt;0,
                    Q_DANGERPOINT=&gt;Messages.Q_DANGERPOINT.No_danger_point_information,
                    D_DP=&gt;0,
                    V_RELEASEDP=&gt;0,
                    Q_OVERLAP=&gt;Messages.Q_OVERLAP.No_overlap_information,
                    D_STARTOL=&gt;0,
                    T_OL=&gt;0,
                    D_OL=&gt;0,
                    V_RELEASEOL=&gt;0
                }
            }
        }
    ]
}</Action></Actions>
<Expectations>
<Expectation
 Kind="Instantaneous"
>Kernel.SpeedAndDistanceMonitoring.ReleaseSpeedSupervision.ReleaseSpeed == 0.0</Expectation></Expectations>
</SubStep></SubSteps>
</Step></Steps>
</TestCase></TestCases>
</SubSequence><SubSequence
 D_LRBG=""
 Level=""
 Mode=""
 NID_LRBG=""
 Q_DIRLRBG=""
 Q_DIRTRAIN=""
 Q_DLRBG=""
 RBC_ID=""
 RBCPhone=""
 Name="MA structure - Sections"
>
<TestCases>
<TestCase
 Feature="0"
 Case="0"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="MA structure - Sections"
>
<ReqRef
 Id="e0b44a69-1080-47e9-80b7-b635996f4239"
>
</ReqRef><ReqRef
 Id="cfc4df94-c1ee-4d42-b8ab-44f37ef4a6ba"
>
</ReqRef><ReqRef
 Id="173067d8-3484-4ec9-81e4-7275c3374764"
>
</ReqRef><ReqRef
 Id="9e1096f7-cf79-4ff5-8dcf-ac3a8bc775e6"
>
</ReqRef><ReqRef
 Id="5fa277c4-02a9-47ea-b645-f1473c0617ae"
>
</ReqRef><ReqRef
 Id="9396972e-8fb4-49d1-9c8f-e2cd2efb6005"
>
</ReqRef><ReqRef
 Id="4b2c7641-4724-45e9-ac46-acb185e386b0"
>
</ReqRef><ReqRef
 Id="51578cd7-a50a-46d9-b7a5-11e24eee2f49"
>
</ReqRef><ReqRef
 Id="b4e8a739-839a-4e55-80ab-4cabb887e47b"
>
</ReqRef><Steps>
<Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 Name="Step1 - Setup"
>
<SubSteps>
<SubStep
 Name="Sub-step1 - Initialize test environment"
>
<Actions>
<Action>Kernel.InitializeTestEnvironment()</Action></Actions>
</SubStep><SubStep
 Name="Sub-step2 - Initialize elements to accept MA"
>
<Actions>
<Action>Kernel.InitializeElementsForMA()</Action></Actions>
</SubStep></SubSteps>
</Step><Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 Name="Step2 - New MA received in BG message, level 1"
>
<SubSteps>
<SubStep
 Name="Sub-step1"
>
<Actions>
<Action>BTM.Message &lt;- Messages.EUROBALISE.Message
{
    Q_UPDOWN=&gt;Messages.Q_UPDOWN.Up_link_telegram,
    M_VERSION=&gt;1,
    Q_MEDIA=&gt;Messages.Q_MEDIA.Balise,
    N_PIG=&gt;8,
    N_TOTAL=&gt;0,
    M_DUP=&gt;Messages.M_DUP.No_duplicates,
    M_MCOUNT=&gt;4,
    NID_C=&gt;140,
    NID_BG=&gt;2124,
    Q_LINK=&gt;Messages.Q_LINK.Linked,
    Sequence1=&gt;
    [
        Messages.EUROBALISE.SubStructure1
        {
            TRACK_TO_TRAIN=&gt;Messages.PACKET.TRACK_TO_TRAIN.Message
            {
                LEVEL_1_MOVEMENT_AUTHORITY=&gt;Messages.PACKET.TRACK_TO_TRAIN.LEVEL_1_MOVEMENT_AUTHORITY.Message
                {
                    NID_PACKET=&gt;8,
                    Q_DIR=&gt;Messages.Q_DIR.Nominal,
                    L_PACKET=&gt;400,
                    Q_SCALE=&gt;Messages.Q_SCALE._1_m_scaleC,
                    V_MAIN=&gt;16,
                    V_LOA=&gt;8,
                    T_LOA=&gt;200,
                    N_ITER=&gt;4,
                    Sequence1=&gt;
                    [
                        Messages.PACKET.TRACK_TO_TRAIN.LEVEL_1_MOVEMENT_AUTHORITY.SubStructure1
                        {
                            L_SECTION=&gt;120,
                            Q_SECTIONTIMER=&gt;Messages.Q_SECTIONTIMER.Section_Timer_information_to_follow,
                            D_SECTIONTIMERSTOPLOC=&gt;20,
                            T_SECTIONTIMER=&gt;40
                        },
                        Messages.PACKET.TRACK_TO_TRAIN.LEVEL_1_MOVEMENT_AUTHORITY.SubStructure1
                        {
                            L_SECTION=&gt;140,
                            Q_SECTIONTIMER=&gt;Messages.Q_SECTIONTIMER.No_Section_Timer_information,
                            D_SECTIONTIMERSTOPLOC=&gt;0,
                            T_SECTIONTIMER=&gt;0
                        },
                        Messages.PACKET.TRACK_TO_TRAIN.LEVEL_1_MOVEMENT_AUTHORITY.SubStructure1
                        {
                            L_SECTION=&gt;100,
                            Q_SECTIONTIMER=&gt;Messages.Q_SECTIONTIMER.Section_Timer_information_to_follow,
                            D_SECTIONTIMERSTOPLOC=&gt;25,
                            T_SECTIONTIMER=&gt;20
                        },
                        Messages.PACKET.TRACK_TO_TRAIN.LEVEL_1_MOVEMENT_AUTHORITY.SubStructure1
                        {
                            L_SECTION=&gt;140,
                            Q_SECTIONTIMER=&gt;Messages.Q_SECTIONTIMER.Section_Timer_information_to_follow,
                            D_SECTIONTIMERSTOPLOC=&gt;40,
                            T_SECTIONTIMER=&gt;25
                        }
                    ],
                    L_ENDSECTION=&gt;1000,
                    Q_SECTIONTIMER=&gt;Messages.Q_SECTIONTIMER.No_Section_Timer_information,
                    T_SECTIONTIMER=&gt;0,
                    D_SECTIONTIMERSTOPLOC=&gt;0,
                    Q_ENDTIMER=&gt;Messages.Q_ENDTIMER.No_End_section_timer_information,
                    T_ENDTIMER=&gt;0,
                    D_ENDTIMERSTARTLOC=&gt;0,
                    Q_DANGERPOINT=&gt;Messages.Q_DANGERPOINT.No_danger_point_information,
                    D_DP=&gt;0,
                    V_RELEASEDP=&gt;0,
                    Q_OVERLAP=&gt;Messages.Q_OVERLAP.No_overlap_information,
                    D_STARTOL=&gt;0,
                    T_OL=&gt;0,
                    D_OL=&gt;0,
                    V_RELEASEOL=&gt;0
                }
            }
        }
    ]
}</Action><Action>Kernel.MA.MA &lt;- EMPTY</Action><Action>BTM.LRBG &lt;- BTM.BaliseGroup
{
    NID =&gt; 9626,
    Orientation =&gt; Orientation.Nominal,
    Position =&gt; BTM.Position
    {
        OverReadingAmountOdo =&gt; 11.0,
        Position =&gt; 4000.0,
        UnderReadingAmountOdo =&gt; 12.0
    }
}</Action><Action>Odometry.Accuracy &lt;- Odometry.OdometerAccuracy
{
    D_ura =&gt; 15.0,
    D_ora =&gt; 20.0,
    V_ora =&gt; 0.0,
    V_ura =&gt; 0.0
}</Action></Actions>
<Expectations>
<Expectation
 Kind="Instantaneous"
>Available ( Kernel.MA.MA )</Expectation><Expectation
 Kind="Instantaneous"
>Available(Kernel.MA.MA.Sections)</Expectation></Expectations>
</SubStep></SubSteps>
</Step><Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 Name="Step3 - Check EOA + section info"
>
<SubSteps>
<SubStep
 Name="Sub-step1"
>
<Expectations>
<Expectation
 Kind="Instantaneous"
>Kernel.MA.EndOfMovementAuthority().Location == 1500.0</Expectation><Expectation
 Kind="Instantaneous"
>(FIRST_IN Kernel.MA.MA.Sections).Length == 120.0</Expectation><Expectation
 Kind="Instantaneous"
>(FIRST_IN Kernel.MA.MA.Sections).TimeOut.TimeOut == 40.0</Expectation><Expectation
 Kind="Instantaneous"
>(FIRST_IN Kernel.MA.MA.Sections).TimeOut.Distance == 20.0</Expectation><Expectation
 Kind="Instantaneous"
>Available ( ( FIRST_IN Kernel.MA.MA.Sections ).TimeOut )</Expectation><Expectation
 Kind="Instantaneous"
>Kernel.MA.EndOfMovementAuthority().Speed == 40.0</Expectation></Expectations>
</SubStep></SubSteps>
</Step><Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 Name="Step4 - New MA received in BG message, level 2"
>
<SubSteps>
<SubStep
 Name="Sub-step1"
>
<Actions>
<Action>BTM.Message &lt;- Messages.EUROBALISE.Message
{
    Q_UPDOWN=&gt;Messages.Q_UPDOWN.Up_link_telegram,
    M_VERSION=&gt;1,
    Q_MEDIA=&gt;Messages.Q_MEDIA.Balise,
    N_PIG=&gt;8,
    N_TOTAL=&gt;0,
    M_DUP=&gt;Messages.M_DUP.No_duplicates,
    M_MCOUNT=&gt;4,
    NID_C=&gt;140,
    NID_BG=&gt;2124,
    Q_LINK=&gt;Messages.Q_LINK.Linked,
    Sequence1=&gt;
    [
        Messages.EUROBALISE.SubStructure1
        {
            TRACK_TO_TRAIN=&gt;Messages.PACKET.TRACK_TO_TRAIN.Message
            {
                LEVEL_2_3_MOVEMENT_AUTHORITY=&gt;Messages.PACKET.TRACK_TO_TRAIN.LEVEL_2_3_MOVEMENT_AUTHORITY.Message
                {
                    NID_PACKET=&gt;8,
                    Q_DIR=&gt;Messages.Q_DIR.Nominal,
                    L_PACKET=&gt;400,
                    Q_SCALE=&gt;Messages.Q_SCALE._10_m_scaleC,
                    V_LOA=&gt;5,
                    T_LOA=&gt;150,
                    N_ITER=&gt;3,
                    Sequence1=&gt;
                    [
                        Messages.PACKET.TRACK_TO_TRAIN.LEVEL_2_3_MOVEMENT_AUTHORITY.SubStructure1
                        {
                            L_SECTION=&gt;17,
                            Q_SECTIONTIMER=&gt;Messages.Q_SECTIONTIMER.No_Section_Timer_information,
                            D_SECTIONTIMERSTOPLOC=&gt;0,
                            T_SECTIONTIMER=&gt;0
                        },
                        Messages.PACKET.TRACK_TO_TRAIN.LEVEL_2_3_MOVEMENT_AUTHORITY.SubStructure1
                        {
                            L_SECTION=&gt;20,
                            Q_SECTIONTIMER=&gt;Messages.Q_SECTIONTIMER.No_Section_Timer_information,
                            D_SECTIONTIMERSTOPLOC=&gt;0,
                            T_SECTIONTIMER=&gt;0
                        },
                        Messages.PACKET.TRACK_TO_TRAIN.LEVEL_2_3_MOVEMENT_AUTHORITY.SubStructure1
                        {
                            L_SECTION=&gt;14,
                            Q_SECTIONTIMER=&gt;Messages.Q_SECTIONTIMER.Section_Timer_information_to_follow,
                            D_SECTIONTIMERSTOPLOC=&gt;25,
                            T_SECTIONTIMER=&gt;70
                        }
                    ],
                    L_ENDSECTION=&gt;80,
                    Q_SECTIONTIMER=&gt;Messages.Q_SECTIONTIMER.No_Section_Timer_information,
                    T_SECTIONTIMER=&gt;0,
                    D_SECTIONTIMERSTOPLOC=&gt;0,
                    Q_ENDTIMER=&gt;Messages.Q_ENDTIMER.No_End_section_timer_information,
                    T_ENDTIMER=&gt;0,
                    D_ENDTIMERSTARTLOC=&gt;0,
                    Q_DANGERPOINT=&gt;Messages.Q_DANGERPOINT.No_danger_point_information,
                    D_DP=&gt;0,
                    V_RELEASEDP=&gt;0,
                    Q_OVERLAP=&gt;Messages.Q_OVERLAP.No_overlap_information,
                    D_STARTOL=&gt;0,
                    T_OL=&gt;0,
                    D_OL=&gt;0,
                    V_RELEASEOL=&gt;0
                }
            }
        }
    ]
}</Action><Action>Kernel.MA.MA &lt;- EMPTY</Action></Actions>
<Expectations>
<Expectation
 Kind="Instantaneous"
>Available ( Kernel.MA.MA )</Expectation><Expectation
 Kind="Instantaneous"
>Available(Kernel.MA.MA.Sections)</Expectation></Expectations>
</SubStep></SubSteps>
</Step><Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 Name="Step5 - Check EOA + section info"
>
<SubSteps>
<SubStep
 Name="Sub-step1"
>
<Expectations>
<Expectation
 Kind="Instantaneous"
>Kernel.MA.EndOfMovementAuthority().Location == 1310.0</Expectation><Expectation
 Kind="Instantaneous"
>(FIRST_IN Kernel.MA.MA.Sections).TimeOut == EMPTY</Expectation><Expectation
 Kind="Instantaneous"
>(FIRST_IN Kernel.MA.MA.Sections).Length == 170.0</Expectation><Expectation
 Kind="Instantaneous"
>Kernel.MA.EndOfMovementAuthority().Speed == 25.0</Expectation></Expectations>
</SubStep></SubSteps>
</Step></Steps>
</TestCase></TestCases>
</SubSequence><SubSequence
 D_LRBG=""
 Level=""
 Mode=""
 NID_LRBG=""
 Q_DIRLRBG=""
 Q_DIRTRAIN=""
 Q_DLRBG=""
 RBC_ID=""
 RBCPhone=""
 Name="MA structure - Overlap"
>
<TestCases>
<TestCase
 Feature="0"
 Case="0"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="MA structure - Overlap"
>
<ReqRef
 Id="7fa6af9c-023d-474c-a0f7-8f72181a8fee"
>
</ReqRef><ReqRef
 Id="4777cb40-cb40-4257-8324-c515327a0152"
>
</ReqRef><ReqRef
 Id="9396972e-8fb4-49d1-9c8f-e2cd2efb6005"
>
</ReqRef><ReqRef
 Id="21d0760f-a057-466a-bdf0-41f316e4721c"
>
</ReqRef><Steps>
<Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 Name="Step1 - Setup"
>
<SubSteps>
<SubStep
 Name="Sub-step1 - Initialize test environment"
>
<Actions>
<Action>Kernel.InitializeTestEnvironment()</Action></Actions>
</SubStep><SubStep
 Name="Sub-step2 - Initialize elements to accept MA"
>
<Actions>
<Action>Kernel.InitializeElementsForMA()</Action></Actions>
</SubStep></SubSteps>
</Step><Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 Name="Step2 - New MA received in BG message, level 1"
>
<SubSteps>
<SubStep
 Name="Sub-step1"
>
<Actions>
<Action>BTM.Message &lt;- Messages.EUROBALISE.Message
{
    Q_UPDOWN=&gt;Messages.Q_UPDOWN.Up_link_telegram,
    M_VERSION=&gt;1,
    Q_MEDIA=&gt;Messages.Q_MEDIA.Balise,
    N_PIG=&gt;8,
    N_TOTAL=&gt;0,
    M_DUP=&gt;Messages.M_DUP.No_duplicates,
    M_MCOUNT=&gt;4,
    NID_C=&gt;140,
    NID_BG=&gt;2124,
    Q_LINK=&gt;Messages.Q_LINK.Linked,
    Sequence1=&gt;
    [
        Messages.EUROBALISE.SubStructure1
        {
            TRACK_TO_TRAIN=&gt;Messages.PACKET.TRACK_TO_TRAIN.Message
            {
                LEVEL_1_MOVEMENT_AUTHORITY=&gt;Messages.PACKET.TRACK_TO_TRAIN.LEVEL_1_MOVEMENT_AUTHORITY.Message
                {
                    NID_PACKET=&gt;8,
                    Q_DIR=&gt;Messages.Q_DIR.Nominal,
                    L_PACKET=&gt;400,
                    Q_SCALE=&gt;Messages.Q_SCALE._1_m_scaleC,
                    V_MAIN=&gt;16,
                    V_LOA=&gt;8,
                    T_LOA=&gt;200,
                    N_ITER=&gt;0,
                    Sequence1=&gt;[],
                    L_ENDSECTION=&gt;1000,
                    Q_SECTIONTIMER=&gt;Messages.Q_SECTIONTIMER.No_Section_Timer_information,
                    T_SECTIONTIMER=&gt;0,
                    D_SECTIONTIMERSTOPLOC=&gt;0,
                    Q_ENDTIMER=&gt;Messages.Q_ENDTIMER.No_End_section_timer_information,
                    T_ENDTIMER=&gt;0,
                    D_ENDTIMERSTARTLOC=&gt;0,
                    Q_DANGERPOINT=&gt;Messages.Q_DANGERPOINT.No_danger_point_information,
                    D_DP=&gt;0,
                    V_RELEASEDP=&gt;0,
                    Q_OVERLAP=&gt;Messages.Q_OVERLAP.Overlap_information_to_follow,
                    D_STARTOL=&gt;100,
                    T_OL=&gt;40,
                    D_OL=&gt;1150,
                    V_RELEASEOL=&gt;6
                }
            }
        }
    ]
}</Action><Action>Kernel.MA.MA &lt;- EMPTY</Action><Action>BTM.LRBG &lt;- BTM.BaliseGroup
{
    NID =&gt; 9624,
    Orientation =&gt; Orientation.Nominal,
    Position =&gt; BTM.Position
    {
        OverReadingAmountOdo =&gt; 24.0,
        Position =&gt; 3500.0,
        UnderReadingAmountOdo =&gt; 21.0
    }
}</Action><Action>Odometry.Accuracy &lt;- Odometry.OdometerAccuracy
{
    D_ura =&gt; 41.0,
    D_ora =&gt; 36.0,
    V_ora =&gt; 0.0,
    V_ura =&gt; 0.0
}</Action></Actions>
<Expectations>
<Expectation
 Kind="Instantaneous"
>Available ( Kernel.MA.MA )</Expectation><Expectation
 Kind="Instantaneous"
>Kernel.MA.MA.EndSection.Overlap.ReleaseSpeed == 30.0</Expectation><Expectation
 Kind="Instantaneous"
>Kernel.MA.MA.EndSection.Overlap.Distance == 1150.0</Expectation><Expectation
 Kind="Instantaneous"
>Kernel.MA.MA.EndSection.Overlap.TimerDistance == 100.0</Expectation><Expectation
 Kind="Instantaneous"
>Kernel.MA.MA.EndSection.Overlap.TimeOut == 40.0</Expectation></Expectations>
</SubStep></SubSteps>
</Step><Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 Name="Step3 - New MA received in BG message, level 2"
>
<SubSteps>
<SubStep
 Name="Sub-step1"
>
<Actions>
<Action>BTM.Message &lt;- Messages.EUROBALISE.Message
{
    Q_UPDOWN=&gt;Messages.Q_UPDOWN.Up_link_telegram,
    M_VERSION=&gt;1,
    Q_MEDIA=&gt;Messages.Q_MEDIA.Balise,
    N_PIG=&gt;8,
    N_TOTAL=&gt;0,
    M_DUP=&gt;Messages.M_DUP.No_duplicates,
    M_MCOUNT=&gt;4,
    NID_C=&gt;140,
    NID_BG=&gt;2124,
    Q_LINK=&gt;Messages.Q_LINK.Linked,
    Sequence1=&gt;
    [
        Messages.EUROBALISE.SubStructure1
        {
            TRACK_TO_TRAIN=&gt;Messages.PACKET.TRACK_TO_TRAIN.Message
            {
                LEVEL_2_3_MOVEMENT_AUTHORITY=&gt;Messages.PACKET.TRACK_TO_TRAIN.LEVEL_2_3_MOVEMENT_AUTHORITY.Message
                {
                    NID_PACKET=&gt;8,
                    Q_DIR=&gt;Messages.Q_DIR.Nominal,
                    L_PACKET=&gt;400,
                    Q_SCALE=&gt;Messages.Q_SCALE._10_m_scaleC,
                    V_LOA=&gt;5,
                    T_LOA=&gt;150,
                    N_ITER=&gt;0,
                    Sequence1=&gt;[],
                    L_ENDSECTION=&gt;80,
                    Q_SECTIONTIMER=&gt;Messages.Q_SECTIONTIMER.No_Section_Timer_information,
                    T_SECTIONTIMER=&gt;0,
                    D_SECTIONTIMERSTOPLOC=&gt;0,
                    Q_ENDTIMER=&gt;Messages.Q_ENDTIMER.No_End_section_timer_information,
                    T_ENDTIMER=&gt;0,
                    D_ENDTIMERSTARTLOC=&gt;0,
                    Q_DANGERPOINT=&gt;Messages.Q_DANGERPOINT.No_danger_point_information,
                    D_DP=&gt;0,
                    V_RELEASEDP=&gt;0,
                    Q_OVERLAP=&gt;Messages.Q_OVERLAP.Overlap_information_to_follow,
                    D_STARTOL=&gt;4,
                    T_OL=&gt;70,
                    D_OL=&gt;90,
                    V_RELEASEOL=&gt;2
                }
            }
        }
    ]
}</Action><Action>Kernel.MA.MA &lt;- EMPTY</Action></Actions>
<Expectations>
<Expectation
 Kind="Instantaneous"
>Available ( Kernel.MA.MA )</Expectation><Expectation
 Kind="Instantaneous"
>Kernel.MA.MA.EndSection.Overlap.TimeOut == 70.0</Expectation><Expectation
 Kind="Instantaneous"
>Kernel.MA.MA.EndSection.Overlap.ReleaseSpeed == 10.0</Expectation><Expectation
 Kind="Instantaneous"
>Kernel.MA.MA.EndSection.Overlap.Distance == 900.0</Expectation><Expectation
 Kind="Instantaneous"
>Kernel.MA.MA.EndSection.Overlap.TimerDistance == 40.0</Expectation></Expectations>
</SubStep></SubSteps>
</Step></Steps>
</TestCase></TestCases>
</SubSequence><SubSequence
 D_LRBG=""
 Level=""
 Mode=""
 NID_LRBG=""
 Q_DIRLRBG=""
 Q_DIRTRAIN=""
 Q_DLRBG=""
 RBC_ID=""
 RBCPhone=""
 Name="Signalling related speed restrictions"
>
<TestCases>
<TestCase
 Feature="0"
 Case="0"
 Implemented="TRUE"
 Name="Signalling related speed restrictions"
>
<ReqRef
 Id="d949102e-f89b-489f-8acc-cf60824bd0e5"
>
</ReqRef><ReqRef
 Id="5d3380ae-3cb4-4f42-a7ba-d37280d33119"
>
</ReqRef><Steps>
<Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 Name="Step1 - Setup"
>
<SubSteps>
<SubStep
 Name="Sub-step1 - Initialize test environment"
>
<Actions>
<Action>Kernel.InitializeTestEnvironment()</Action></Actions>
</SubStep><SubStep
 Name="Sub-step2 - Initialize elements to accept MA"
>
<Actions>
<Action>Kernel.InitializeElementsForMA()</Action></Actions>
</SubStep></SubSteps>
</Step><Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 Name="Step2 - New MA received"
>
<SubSteps>
<SubStep
 Name="Sub-step1"
>
<Actions>
<Action>BTM.Message &lt;- Messages.EUROBALISE.Message
{
    Q_UPDOWN=&gt;Messages.Q_UPDOWN.Up_link_telegram,
    M_VERSION=&gt;1,
    Q_MEDIA=&gt;Messages.Q_MEDIA.Balise,
    N_PIG=&gt;8,
    N_TOTAL=&gt;0,
    M_DUP=&gt;Messages.M_DUP.No_duplicates,
    M_MCOUNT=&gt;4,
    NID_C=&gt;140,
    NID_BG=&gt;2124,
    Q_LINK=&gt;Messages.Q_LINK.Linked,
    Sequence1=&gt;
    [
        Messages.EUROBALISE.SubStructure1
        {
            TRACK_TO_TRAIN=&gt;Messages.PACKET.TRACK_TO_TRAIN.Message
            {
                LEVEL_1_MOVEMENT_AUTHORITY=&gt;Messages.PACKET.TRACK_TO_TRAIN.LEVEL_1_MOVEMENT_AUTHORITY.Message
                {
                    NID_PACKET=&gt;8,
                    Q_DIR=&gt;Messages.Q_DIR.Nominal,
                    L_PACKET=&gt;400,
                    Q_SCALE=&gt;Messages.Q_SCALE._1_m_scaleC,
                    V_MAIN=&gt;17,
                    V_LOA=&gt;8,
                    T_LOA=&gt;200,
                    N_ITER=&gt;0,
                    Sequence1=&gt;[],
                    L_ENDSECTION=&gt;1000,
                    Q_SECTIONTIMER=&gt;Messages.Q_SECTIONTIMER.No_Section_Timer_information,
                    T_SECTIONTIMER=&gt;0,
                    D_SECTIONTIMERSTOPLOC=&gt;0,
                    Q_ENDTIMER=&gt;Messages.Q_ENDTIMER.No_End_section_timer_information,
                    T_ENDTIMER=&gt;0,
                    D_ENDTIMERSTARTLOC=&gt;0,
                    Q_DANGERPOINT=&gt;Messages.Q_DANGERPOINT.No_danger_point_information,
                    D_DP=&gt;0,
                    V_RELEASEDP=&gt;0,
                    Q_OVERLAP=&gt;Messages.Q_OVERLAP.No_overlap_information,
                    D_STARTOL=&gt;0,
                    T_OL=&gt;0,
                    D_OL=&gt;0,
                    V_RELEASEOL=&gt;0
                }
            }
        }
    ]
}</Action><Action>Kernel.Level.Value &lt;- Level.L1</Action><Action>BTM.LRBG &lt;- BTM.BaliseGroup
{
    NID =&gt; 9630,
    Orientation =&gt; Orientation.Nominal,
    Position =&gt; BTM.Position
    {
        OverReadingAmountOdo =&gt; 13.0,
        Position =&gt; 5000.0,
        UnderReadingAmountOdo =&gt; 12.0
    }
}</Action><Action>Odometry.Accuracy &lt;- Odometry.OdometerAccuracy
{
    D_ura =&gt; 15.0,
    D_ora =&gt; 17.0,
    V_ora =&gt; 0.0,
    V_ura =&gt; 0.0
}</Action></Actions>
<Expectations>
<Expectation
 Kind="Instantaneous"
>Kernel.MA.SignallingRelatedSpeedRestrictions ( 5000.0 ) == 85.0</Expectation></Expectations>
</SubStep></SubSteps>
</Step><Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 Name="Step3 - Level changes"
>
<SubSteps>
<SubStep
 Name="Sub-step1"
>
<Actions>
<Action>Kernel.Level.Value &lt;- Level.L2</Action></Actions>
<Expectations>
<Expectation
 Kind="Instantaneous"
>Kernel.MA.SignallingRelatedSpeedRestrictions ( 0.0 ) == Default.BaseTypes.Speed.MaxSpeed</Expectation></Expectations>
</SubStep></SubSteps>
</Step></Steps>
</TestCase></TestCases>
</SubSequence><SubSequence
 D_LRBG=""
 Level=""
 Mode=""
 NID_LRBG=""
 Q_DIRLRBG=""
 Q_DIRTRAIN=""
 Q_DLRBG=""
 RBC_ID=""
 RBCPhone=""
 Name="The SectionTimerStopLocation shall be inside the section"
>
<TestCases>
<TestCase
 Feature="0"
 Case="0"
 Implemented="TRUE"
 Name="The SectionTimerStopLocation shall be inside the section"
>
<ReqRef
 Id="e5896680-5ea9-4749-b01e-599ab85abe84"
>
</ReqRef><Steps>
<Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 Name="Step1 - Setup"
>
<SubSteps>
<SubStep
 Name="Sub-step1 - Initialize test environment"
>
<Actions>
<Action>Kernel.InitializeTestEnvironment()</Action></Actions>
</SubStep><SubStep
 Name="Sub-step2 - Initialize elements to accept MA"
>
<Actions>
<Action>Kernel.InitializeElementsForMA()</Action></Actions>
</SubStep></SubSteps>
</Step><Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 TranslationRequired="FALSE"
 Name="Step2 - BTM.Message"
>
<SubSteps>
<SubStep
 Name="SubStep1"
>
<Actions>
<Action>BTM.Message &lt;- Messages.EUROBALISE.Message
{
    Q_UPDOWN=&gt;Messages.Q_UPDOWN.Up_link_telegram,
    M_VERSION=&gt;1,
    Q_MEDIA=&gt;Messages.Q_MEDIA.Balise,
    N_PIG=&gt;8,
    N_TOTAL=&gt;0,
    M_DUP=&gt;Messages.M_DUP.No_duplicates,
    M_MCOUNT=&gt;4,
    NID_C=&gt;140,
    NID_BG=&gt;2124,
    Q_LINK=&gt;Messages.Q_LINK.Linked,
    Sequence1=&gt;
    [
        Messages.EUROBALISE.SubStructure1
        {
            TRACK_TO_TRAIN=&gt;Messages.PACKET.TRACK_TO_TRAIN.Message
            {
                LEVEL_1_MOVEMENT_AUTHORITY=&gt;Messages.PACKET.TRACK_TO_TRAIN.LEVEL_1_MOVEMENT_AUTHORITY.Message
                {
                    NID_PACKET=&gt;8,
                    Q_DIR=&gt;Messages.Q_DIR.Nominal,
                    L_PACKET=&gt;400,
                    Q_SCALE=&gt;Messages.Q_SCALE._1_m_scaleC,
                    V_MAIN=&gt;16,
                    V_LOA=&gt;8,
                    T_LOA=&gt;200,
                    N_ITER=&gt;4,
                    Sequence1=&gt;
                    [
                        Messages.PACKET.TRACK_TO_TRAIN.LEVEL_1_MOVEMENT_AUTHORITY.SubStructure1
                        {
                            L_SECTION=&gt;120,
                            Q_SECTIONTIMER=&gt;Messages.Q_SECTIONTIMER.Section_Timer_information_to_follow,
                            D_SECTIONTIMERSTOPLOC=&gt;20,
                            T_SECTIONTIMER=&gt;40
                        }
                    ],
                    L_ENDSECTION=&gt;1000,
                    Q_SECTIONTIMER=&gt;Messages.Q_SECTIONTIMER.No_Section_Timer_information,
                    T_SECTIONTIMER=&gt;0,
                    D_SECTIONTIMERSTOPLOC=&gt;0,
                    Q_ENDTIMER=&gt;Messages.Q_ENDTIMER.No_End_section_timer_information,
                    T_ENDTIMER=&gt;0,
                    D_ENDTIMERSTARTLOC=&gt;0,
                    Q_DANGERPOINT=&gt;Messages.Q_DANGERPOINT.No_danger_point_information,
                    D_DP=&gt;0,
                    V_RELEASEDP=&gt;0,
                    Q_OVERLAP=&gt;Messages.Q_OVERLAP.No_overlap_information,
                    D_STARTOL=&gt;0,
                    T_OL=&gt;0,
                    D_OL=&gt;0,
                    V_RELEASEOL=&gt;0
                }
            }
        }
    ]
}</Action></Actions>
</SubStep></SubSteps>
</Step><Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 TranslationRequired="FALSE"
 Name="Step3 - Data check"
>
<SubSteps>
<SubStep
 Name="SubStep1"
>
<Expectations>
<Expectation
 Kind="Instantaneous"
 DeadLine="1"
>THERE_IS_IN Kernel.MA.MA.Sections | (  X.Length == 120.0 AND X.TimeOut.Distance == 20.0  )</Expectation></Expectations>
</SubStep></SubSteps>
</Step></Steps>
</TestCase></TestCases>
</SubSequence><SubSequence
 D_LRBG=""
 Level=""
 Mode=""
 NID_LRBG=""
 Q_DIRLRBG=""
 Q_DIRTRAIN=""
 Q_DLRBG=""
 RBC_ID=""
 RBCPhone=""
 Name="SvL"
>
<TestCases>
<TestCase
 Feature="0"
 Case="0"
 Implemented="TRUE"
 Name="SvL is defined"
>
<ReqRef
 Id="dc0bc969-44fc-43da-bc2e-a002f4c15435"
>
</ReqRef><Steps>
<Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 Name="Step1 - Setup"
>
<SubSteps>
<SubStep
 Name="Sub-step1 - Initialize test environment"
>
<Actions>
<Action>Kernel.InitializeTestEnvironment()</Action></Actions>
</SubStep><SubStep
 Name="Sub-step2 - Initialize elements to accept MA"
>
<Actions>
<Action>Kernel.InitializeElementsForMA()</Action></Actions>
</SubStep></SubSteps>
</Step><Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 TranslationRequired="FALSE"
 Name="Step1 - SvL Overlap"
>
<SubSteps>
<SubStep
 Name="SubStep1"
>
<Actions>
<Action>BTM.Message &lt;- Messages.EUROBALISE.Message
{
    Q_UPDOWN=&gt;Messages.Q_UPDOWN.Up_link_telegram,
    M_VERSION=&gt;1,
    Q_MEDIA=&gt;Messages.Q_MEDIA.Balise,
    N_PIG=&gt;8,
    N_TOTAL=&gt;0,
    M_DUP=&gt;Messages.M_DUP.No_duplicates,
    M_MCOUNT=&gt;4,
    NID_C=&gt;140,
    NID_BG=&gt;2124,
    Q_LINK=&gt;Messages.Q_LINK.Linked,
    Sequence1=&gt;
    [
        Messages.EUROBALISE.SubStructure1
        {
            TRACK_TO_TRAIN=&gt;Messages.PACKET.TRACK_TO_TRAIN.Message
            {
                LEVEL_1_MOVEMENT_AUTHORITY=&gt;Messages.PACKET.TRACK_TO_TRAIN.LEVEL_1_MOVEMENT_AUTHORITY.Message
                {
                    NID_PACKET=&gt;8,
                    Q_DIR=&gt;Messages.Q_DIR.Nominal,
                    L_PACKET=&gt;400,
                    Q_SCALE=&gt;Messages.Q_SCALE._1_m_scaleC,
                    V_MAIN=&gt;16,
                    V_LOA=&gt;0,
                    T_LOA=&gt;200,
                    N_ITER=&gt;0,
                    Sequence1=&gt;[],
                    L_ENDSECTION=&gt;1000,
                    Q_SECTIONTIMER=&gt;Messages.Q_SECTIONTIMER.No_Section_Timer_information,
                    T_SECTIONTIMER=&gt;0,
                    D_SECTIONTIMERSTOPLOC=&gt;0,
                    Q_ENDTIMER=&gt;Messages.Q_ENDTIMER.No_End_section_timer_information,
                    T_ENDTIMER=&gt;0,
                    D_ENDTIMERSTARTLOC=&gt;0,
                    Q_DANGERPOINT=&gt;Messages.Q_DANGERPOINT.No_danger_point_information,
                    D_DP=&gt;0,
                    V_RELEASEDP=&gt;0,
                    Q_OVERLAP=&gt;Messages.Q_OVERLAP.Overlap_information_to_follow,
                    D_STARTOL=&gt;100,
                    T_OL=&gt;40,
                    D_OL=&gt;1150,
                    V_RELEASEOL=&gt;6
                }
            }
        }
    ]
}</Action></Actions>
</SubStep><SubStep
 Name="Sub-step2"
>
<Expectations>
<Expectation
 Kind="Instantaneous"
 DeadLine="1"
>Kernel.MA.MA.EndSection.Overlap != EMPTY</Expectation><Expectation
 Kind="Instantaneous"
 DeadLine="1"
>Kernel.MA.SvL().Speed == Kernel.MA.MA.TargetSpeed</Expectation><Expectation
 Kind="Instantaneous"
 DeadLine="1"
>Kernel.MA.SvL().Location == Kernel.MA.OverlapLocation()</Expectation><Expectation
 Kind="Instantaneous"
 DeadLine="1"
>Kernel.MA.MA.EndSection.DangerPoint == EMPTY</Expectation></Expectations>
</SubStep></SubSteps>
</Step><Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 TranslationRequired="FALSE"
 Name="Step3 - SvL DangerPoint"
>
<SubSteps>
<SubStep
 Name="SubStep1"
>
<Actions>
<Action>BTM.Message &lt;- Messages.EUROBALISE.Message
{
    Q_UPDOWN=&gt;Messages.Q_UPDOWN.Up_link_telegram,
    M_VERSION=&gt;1,
    Q_MEDIA=&gt;Messages.Q_MEDIA.Balise,
    N_PIG=&gt;8,
    N_TOTAL=&gt;0,
    M_DUP=&gt;Messages.M_DUP.No_duplicates,
    M_MCOUNT=&gt;4,
    NID_C=&gt;140,
    NID_BG=&gt;2124,
    Q_LINK=&gt;Messages.Q_LINK.Linked,
    Sequence1=&gt;
    [
        Messages.EUROBALISE.SubStructure1
        {
            TRACK_TO_TRAIN=&gt;Messages.PACKET.TRACK_TO_TRAIN.Message
            {
                LEVEL_1_MOVEMENT_AUTHORITY=&gt;Messages.PACKET.TRACK_TO_TRAIN.LEVEL_1_MOVEMENT_AUTHORITY.Message
                {
                    NID_PACKET=&gt;8,
                    Q_DIR=&gt;Messages.Q_DIR.Nominal,
                    L_PACKET=&gt;400,
                    Q_SCALE=&gt;Messages.Q_SCALE._1_m_scaleC,
                    V_MAIN=&gt;16,
                    V_LOA=&gt;0,
                    T_LOA=&gt;200,
                    N_ITER=&gt;0,
                    Sequence1=&gt;[],
                    L_ENDSECTION=&gt;1000,
                    Q_SECTIONTIMER=&gt;Messages.Q_SECTIONTIMER.No_Section_Timer_information,
                    T_SECTIONTIMER=&gt;0,
                    D_SECTIONTIMERSTOPLOC=&gt;0,
                    Q_ENDTIMER=&gt;Messages.Q_ENDTIMER.No_End_section_timer_information,
                    T_ENDTIMER=&gt;0,
                    D_ENDTIMERSTARTLOC=&gt;0,
                    Q_DANGERPOINT=&gt;Messages.Q_DANGERPOINT.Danger_point_information_to_follow,
                    D_DP=&gt;0,
                    V_RELEASEDP=&gt;0,
                    Q_OVERLAP=&gt;Messages.Q_OVERLAP.No_overlap_information,
                    D_STARTOL=&gt;100,
                    T_OL=&gt;40,
                    D_OL=&gt;1150,
                    V_RELEASEOL=&gt;6
                }
            }
        }
    ]
}</Action></Actions>
</SubStep><SubStep
 Name="Sub-step2"
>
<Expectations>
<Expectation
 Kind="Instantaneous"
 DeadLine="1"
>Kernel.MA.MA.EndSection.DangerPoint != EMPTY</Expectation><Expectation
 Kind="Instantaneous"
 DeadLine="1"
>Kernel.MA.SvL().Speed == Kernel.MA.MA.TargetSpeed</Expectation><Expectation
 Kind="Instantaneous"
 DeadLine="1"
>Kernel.MA.SvL().Location == Kernel.MA.DangerPointLocation()</Expectation><Expectation
 Kind="Instantaneous"
 DeadLine="1"
>Kernel.MA.MA.EndSection.Overlap == EMPTY</Expectation></Expectations>
</SubStep></SubSteps>
</Step><Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 TranslationRequired="FALSE"
 Name="Step3 - SvL EOA"
>
<SubSteps>
<SubStep
 Name="SubStep1"
>
<Actions>
<Action>BTM.Message &lt;- Messages.EUROBALISE.Message
{
    Q_UPDOWN=&gt;Messages.Q_UPDOWN.Up_link_telegram,
    M_VERSION=&gt;1,
    Q_MEDIA=&gt;Messages.Q_MEDIA.Balise,
    N_PIG=&gt;8,
    N_TOTAL=&gt;0,
    M_DUP=&gt;Messages.M_DUP.No_duplicates,
    M_MCOUNT=&gt;4,
    NID_C=&gt;140,
    NID_BG=&gt;2124,
    Q_LINK=&gt;Messages.Q_LINK.Linked,
    Sequence1=&gt;
    [
        Messages.EUROBALISE.SubStructure1
        {
            TRACK_TO_TRAIN=&gt;Messages.PACKET.TRACK_TO_TRAIN.Message
            {
                LEVEL_1_MOVEMENT_AUTHORITY=&gt;Messages.PACKET.TRACK_TO_TRAIN.LEVEL_1_MOVEMENT_AUTHORITY.Message
                {
                    NID_PACKET=&gt;8,
                    Q_DIR=&gt;Messages.Q_DIR.Nominal,
                    L_PACKET=&gt;400,
                    Q_SCALE=&gt;Messages.Q_SCALE._1_m_scaleC,
                    V_MAIN=&gt;16,
                    V_LOA=&gt;0,
                    T_LOA=&gt;200,
                    N_ITER=&gt;0,
                    Sequence1=&gt;[],
                    L_ENDSECTION=&gt;1000,
                    Q_SECTIONTIMER=&gt;Messages.Q_SECTIONTIMER.No_Section_Timer_information,
                    T_SECTIONTIMER=&gt;0,
                    D_SECTIONTIMERSTOPLOC=&gt;0,
                    Q_ENDTIMER=&gt;Messages.Q_ENDTIMER.No_End_section_timer_information,
                    T_ENDTIMER=&gt;0,
                    D_ENDTIMERSTARTLOC=&gt;0,
                    Q_DANGERPOINT=&gt;Messages.Q_DANGERPOINT.No_danger_point_information,
                    D_DP=&gt;0,
                    V_RELEASEDP=&gt;0,
                    Q_OVERLAP=&gt;Messages.Q_OVERLAP.No_overlap_information,
                    D_STARTOL=&gt;100,
                    T_OL=&gt;40,
                    D_OL=&gt;1150,
                    V_RELEASEOL=&gt;6
                }
            }
        }
    ]
}</Action></Actions>
</SubStep><SubStep
 Name="Sub-step2"
>
<Expectations>
<Expectation
 Kind="Instantaneous"
 DeadLine="1"
>Kernel.MA.SvL().Speed == Kernel.MA.MA.TargetSpeed</Expectation><Expectation
 Kind="Instantaneous"
 DeadLine="1"
>Kernel.MA.SvL().Location == Kernel.MA.EndOfMovementAuthority().Location</Expectation><Expectation
 Kind="Instantaneous"
 DeadLine="1"
>Kernel.MA.MA.EndSection.Overlap == EMPTY</Expectation><Expectation
 Kind="Instantaneous"
 DeadLine="1"
>Kernel.MA.MA.EndSection.DangerPoint == EMPTY</Expectation></Expectations>
</SubStep></SubSteps>
</Step></Steps>
</TestCase><TestCase
 Feature="0"
 Case="0"
 Implemented="TRUE"
 Name="SvL is not defined"
>
<ReqRef
 Id="8ab7aafb-d8cf-4c4d-bafc-08a1f658decd"
>
</ReqRef><Steps>
<Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 TranslationRequired="FALSE"
 Name="Step1 LimitofAuthority -&gt; No SvL defined"
>
<SubSteps>
<SubStep
 Name="SubStep1"
>
<Actions>
<Action>BTM.Message &lt;- Messages.EUROBALISE.Message
{
    Q_UPDOWN=&gt;Messages.Q_UPDOWN.Up_link_telegram,
    M_VERSION=&gt;1,
    Q_MEDIA=&gt;Messages.Q_MEDIA.Balise,
    N_PIG=&gt;8,
    N_TOTAL=&gt;0,
    M_DUP=&gt;Messages.M_DUP.No_duplicates,
    M_MCOUNT=&gt;4,
    NID_C=&gt;140,
    NID_BG=&gt;2124,
    Q_LINK=&gt;Messages.Q_LINK.Linked,
    Sequence1=&gt;
    [
        Messages.EUROBALISE.SubStructure1
        {
            TRACK_TO_TRAIN=&gt;Messages.PACKET.TRACK_TO_TRAIN.Message
            {
                LEVEL_1_MOVEMENT_AUTHORITY=&gt;Messages.PACKET.TRACK_TO_TRAIN.LEVEL_1_MOVEMENT_AUTHORITY.Message
                {
                    NID_PACKET=&gt;8,
                    Q_DIR=&gt;Messages.Q_DIR.Nominal,
                    L_PACKET=&gt;400,
                    Q_SCALE=&gt;Messages.Q_SCALE._1_m_scaleC,
                    V_MAIN=&gt;16,
                    V_LOA=&gt;8,
                    T_LOA=&gt;200,
                    N_ITER=&gt;0,
                    Sequence1=&gt;[],
                    L_ENDSECTION=&gt;1000,
                    Q_SECTIONTIMER=&gt;Messages.Q_SECTIONTIMER.No_Section_Timer_information,
                    T_SECTIONTIMER=&gt;0,
                    D_SECTIONTIMERSTOPLOC=&gt;0,
                    Q_ENDTIMER=&gt;Messages.Q_ENDTIMER.No_End_section_timer_information,
                    T_ENDTIMER=&gt;0,
                    D_ENDTIMERSTARTLOC=&gt;0,
                    Q_DANGERPOINT=&gt;Messages.Q_DANGERPOINT.No_danger_point_information,
                    D_DP=&gt;0,
                    V_RELEASEDP=&gt;0,
                    Q_OVERLAP=&gt;Messages.Q_OVERLAP.No_overlap_information,
                    D_STARTOL=&gt;100,
                    T_OL=&gt;40,
                    D_OL=&gt;1150,
                    V_RELEASEOL=&gt;6
                }
            }
        }
    ]
}</Action></Actions>
</SubStep><SubStep
 Name="Sub-step2"
>
<Expectations>
<Expectation
 Kind="Instantaneous"
 DeadLine="1"
>Kernel.MA.SvL() == EMPTY</Expectation><Expectation
 Kind="Instantaneous"
 DeadLine="1"
>Kernel.MA.MA.TargetSpeed != 0.0</Expectation></Expectations>
</SubStep></SubSteps>
</Step></Steps>
</TestCase></TestCases>
</SubSequence><SubSequence
 D_LRBG=""
 Level=""
 Mode=""
 NID_LRBG=""
 Q_DIRLRBG=""
 Q_DIRTRAIN=""
 Q_DLRBG=""
 RBC_ID=""
 RBCPhone=""
 Name="MA from RBC"
>
<TestCases>
<TestCase
 Feature="0"
 Case="0"
 Implemented="TRUE"
 Name="MA received from an RBC and by BTM.Message"
>
<ReqRef
 Id="948cdca7-999f-4b57-8b4a-7ffc1873927f"
>
</ReqRef><ReqRef
 Id="ab5117d0-92b0-4488-9084-9e07dba02cec"
>
</ReqRef><Steps>
<Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 Name="Step1 - Setup"
>
<SubSteps>
<SubStep
 Name="Sub-step1 - Initialize test environment"
>
<Actions>
<Action>Kernel.InitializeTestEnvironment()</Action></Actions>
</SubStep><SubStep
 Name="Sub-step2 - Initialize elements to accept MA"
>
<Actions>
<Action>Kernel.InitializeElementsForMA()</Action></Actions>
</SubStep></SubSteps>
</Step><Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 TranslationRequired="FALSE"
 Name="Step2 - Euroradio Message + BTM.LRBG"
>
<SubSteps>
<SubStep
 Name="SubStep1"
>
<Actions>
<Action>BTM.LRBG &lt;- BTM.BaliseGroup
{
    NID =&gt; 9626,
    Orientation =&gt; Orientation.Nominal,
    Position =&gt; BTM.Position
    {
        OverReadingAmountOdo =&gt; 11.0,
        Position =&gt; 4000.0,
        UnderReadingAmountOdo =&gt; 12.0
    }
}</Action><Action>EURORADIO.EuroradioMessageIn  &lt;- Messages.MESSAGE.TRACK_TO_TRAIN.Message

{
    MOVEMENT_AUTHORITY =&gt; Messages.MESSAGE.TRACK_TO_TRAIN.MOVEMENT_AUTHORITY.Message
    {

    NID_MESSAGE =&gt; 0,
    L_MESSAGE =&gt; 0,
    T_TRAIN =&gt; 0,
    M_ACK =&gt; Messages.M_ACK.No_acknowledgement_required,
    NID_LRBG =&gt; 9627,
    LEVEL_2_3_MOVEMENT_AUTHORITY =&gt; Messages.PACKET.TRACK_TO_TRAIN.LEVEL_2_3_MOVEMENT_AUTHORITY.Message

      {
        NID_PACKET =&gt; 15,
        Q_DIR =&gt; Messages.Q_DIR.Nominal,
        L_PACKET =&gt; 0,
        Q_SCALE =&gt; Messages.Q_SCALE._10_cm_scaleC,
        V_LOA =&gt; 0,
        T_LOA =&gt; 0,
        N_ITER =&gt; 1,
        Sequence1 =&gt; [

                 Messages.PACKET.TRACK_TO_TRAIN.LEVEL_2_3_MOVEMENT_AUTHORITY.SubStructure1
                 {
                   L_SECTION =&gt; 100,
                   Q_SECTIONTIMER =&gt; Messages.Q_SECTIONTIMER.No_Section_Timer_information,
                   T_SECTIONTIMER =&gt; 0,
                   D_SECTIONTIMERSTOPLOC =&gt; 0
                 }
                                ],
        L_ENDSECTION =&gt; 1000,
        Q_SECTIONTIMER =&gt; Messages.Q_SECTIONTIMER.No_Section_Timer_information,
        T_SECTIONTIMER =&gt; 0,
        D_SECTIONTIMERSTOPLOC =&gt; 0,
        Q_ENDTIMER =&gt; Messages.Q_ENDTIMER.No_End_section_timer_information,
        T_ENDTIMER =&gt; 0,
        D_ENDTIMERSTARTLOC =&gt; 0,
        Q_DANGERPOINT =&gt; Messages.Q_DANGERPOINT.No_danger_point_information,
        D_DP =&gt; 0,
        V_RELEASEDP =&gt; 0,
        Q_OVERLAP =&gt; Messages.Q_OVERLAP.No_overlap_information,
        D_STARTOL =&gt; 0,
        T_OL =&gt; 0,
        D_OL =&gt; 0,
        V_RELEASEOL =&gt; 0
       },
    Sequence1 =&gt; []
}



  
            
}</Action></Actions>
</SubStep><SubStep
 Name="Sub-step2"
>
<Expectations>
<Expectation
 Kind="Instantaneous"
 DeadLine="1"
>BTM.LRBG.NID == 9626</Expectation><Expectation
 Kind="Instantaneous"
 DeadLine="1"
>Kernel.MA.MA.ReferenceBG == 9627</Expectation></Expectations>
</SubStep></SubSteps>
</Step><Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 TranslationRequired="FALSE"
 Name="Step3 - BTM.Message + BTM.LRBG"
>
<SubSteps>
<SubStep
 Name="SubStep1"
>
<Actions>
<Action>BTM.Message &lt;- Messages.EUROBALISE.Message
{
    Q_UPDOWN=&gt;Messages.Q_UPDOWN.Up_link_telegram,
    M_VERSION=&gt;1,
    Q_MEDIA=&gt;Messages.Q_MEDIA.Balise,
    N_PIG=&gt;8,
    N_TOTAL=&gt;0,
    M_DUP=&gt;Messages.M_DUP.No_duplicates,
    M_MCOUNT=&gt;4,
    NID_C=&gt;140,
    NID_BG=&gt;2124,
    Q_LINK=&gt;Messages.Q_LINK.Linked,
    Sequence1=&gt;
    [
        Messages.EUROBALISE.SubStructure1
        {
            TRACK_TO_TRAIN=&gt;Messages.PACKET.TRACK_TO_TRAIN.Message
            {
                LEVEL_1_MOVEMENT_AUTHORITY=&gt;Messages.PACKET.TRACK_TO_TRAIN.LEVEL_1_MOVEMENT_AUTHORITY.Message
                {
                    NID_PACKET=&gt;8,
                    Q_DIR=&gt;Messages.Q_DIR.Nominal,
                    L_PACKET=&gt;400,
                    Q_SCALE=&gt;Messages.Q_SCALE._1_m_scaleC,
                    V_MAIN=&gt;16,
                    V_LOA=&gt;8,
                    T_LOA=&gt;200,
                    N_ITER=&gt;4,
                    Sequence1=&gt;
                    [
                        Messages.PACKET.TRACK_TO_TRAIN.LEVEL_1_MOVEMENT_AUTHORITY.SubStructure1
                        {
                            L_SECTION=&gt;120,
                            Q_SECTIONTIMER=&gt;Messages.Q_SECTIONTIMER.Section_Timer_information_to_follow,
                            D_SECTIONTIMERSTOPLOC=&gt;20,
                            T_SECTIONTIMER=&gt;40
                        },
                        Messages.PACKET.TRACK_TO_TRAIN.LEVEL_1_MOVEMENT_AUTHORITY.SubStructure1
                        {
                            L_SECTION=&gt;140,
                            Q_SECTIONTIMER=&gt;Messages.Q_SECTIONTIMER.No_Section_Timer_information,
                            D_SECTIONTIMERSTOPLOC=&gt;0,
                            T_SECTIONTIMER=&gt;0
                        },
                        Messages.PACKET.TRACK_TO_TRAIN.LEVEL_1_MOVEMENT_AUTHORITY.SubStructure1
                        {
                            L_SECTION=&gt;100,
                            Q_SECTIONTIMER=&gt;Messages.Q_SECTIONTIMER.Section_Timer_information_to_follow,
                            D_SECTIONTIMERSTOPLOC=&gt;25,
                            T_SECTIONTIMER=&gt;20
                        },
                        Messages.PACKET.TRACK_TO_TRAIN.LEVEL_1_MOVEMENT_AUTHORITY.SubStructure1
                        {
                            L_SECTION=&gt;140,
                            Q_SECTIONTIMER=&gt;Messages.Q_SECTIONTIMER.Section_Timer_information_to_follow,
                            D_SECTIONTIMERSTOPLOC=&gt;40,
                            T_SECTIONTIMER=&gt;25
                        }
                    ],
                    L_ENDSECTION=&gt;1000,
                    Q_SECTIONTIMER=&gt;Messages.Q_SECTIONTIMER.No_Section_Timer_information,
                    T_SECTIONTIMER=&gt;0,
                    D_SECTIONTIMERSTOPLOC=&gt;0,
                    Q_ENDTIMER=&gt;Messages.Q_ENDTIMER.No_End_section_timer_information,
                    T_ENDTIMER=&gt;0,
                    D_ENDTIMERSTARTLOC=&gt;0,
                    Q_DANGERPOINT=&gt;Messages.Q_DANGERPOINT.No_danger_point_information,
                    D_DP=&gt;0,
                    V_RELEASEDP=&gt;0,
                    Q_OVERLAP=&gt;Messages.Q_OVERLAP.No_overlap_information,
                    D_STARTOL=&gt;0,
                    T_OL=&gt;0,
                    D_OL=&gt;0,
                    V_RELEASEOL=&gt;0
                }
            }
        }
    ]
}</Action><Action>BTM.LRBG &lt;- BTM.BaliseGroup
{
    NID =&gt; 2120,
    Orientation =&gt; Orientation.Nominal,
    Position =&gt; BTM.Position
    {
        OverReadingAmountOdo =&gt; 11.0,
        Position =&gt; 4000.0,
        UnderReadingAmountOdo =&gt; 12.0
    }
}</Action></Actions>
</SubStep><SubStep
 Name="Sub-step2"
>
<Expectations>
<Expectation
 Kind="Instantaneous"
 DeadLine="1"
>BTM.LRBG.NID == 2120</Expectation><Expectation
 Kind="Instantaneous"
 DeadLine="1"
>Kernel.MA.MA.ReferenceBG == 2124</Expectation></Expectations>
</SubStep></SubSteps>
</Step></Steps>
</TestCase></TestCases>
</SubSequence><SubSequence
 D_LRBG=""
 Level=""
 Mode=""
 NID_LRBG=""
 Q_DIRLRBG=""
 Q_DIRTRAIN=""
 Q_DLRBG=""
 RBC_ID=""
 RBCPhone=""
 Name="Infill MA"
>
<TestCases>
<TestCase
 Feature="0"
 Case="0"
 Implemented="TRUE"
 Name="Infill MA received only when FS or LS Mode and Linking information available"
>
<ReqRef
 Id="ddf1106f-1c68-46d4-bb66-180ab706aa8e"
>
</ReqRef><ReqRef
 Id="55512f96-4453-4790-88cb-a4324c3a4a22"
>
</ReqRef><ReqRef
 Id="ee4976a9-43b5-48a3-83fa-b4b49e47c1a8"
>
</ReqRef><Comment>In the steps 3 and 4 it is possible to see that the OBU receives Infill MA when there is Linking information ( step 4 ). If there is not Linking information, there is not Infill MA ( step 3). This is the requirement 3.8.4.6.4. </Comment>
<Steps>
<Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 Name="Step1 - Setup"
>
<Comment>Setup of the enviroment</Comment>
<SubSteps>
<SubStep
 Name="Sub-step1 - Initialize test environment"
>
<Actions>
<Action>Kernel.InitializeTestEnvironment()</Action></Actions>
</SubStep><SubStep
 Name="Sub-step2 - Initialize elements to accept MA"
>
<Actions>
<Action>Kernel.InitializeElementsForMA()</Action></Actions>
</SubStep></SubSteps>
</Step><Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 TranslationRequired="FALSE"
 Name="Step2 - Mode OS + Level 1"
>
<Comment>level 1 needed to change to a valid mode</Comment>
<SubSteps>
<SubStep
 Name="Sub-step1"
>
<Actions>
<Action>Kernel.Mode &lt;- Default.Mode.OS</Action><Action>Kernel.Level.DataState &lt;- Default.DataState.Valid</Action><Action>Kernel.Level.Value &lt;- Default.Level.L1</Action></Actions>
</SubStep><SubStep
 Name="Sub-step2"
>
<Expectations>
<Expectation
 Kind="Instantaneous"
 DeadLine="1"
>Kernel.MA.MA == EMPTY</Expectation><Expectation
 Kind="Instantaneous"
 DeadLine="1"
>Kernel.Infill.Data == EMPTY</Expectation></Expectations>
</SubStep></SubSteps>
</Step><Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 TranslationRequired="FALSE"
 Name="Step3 - BTM.Message + Linking + Mode != LS or FS"
>
<Comment>This step is for testing that the OBU doesnt received the packets because it is not in the correct mode, in this case should be FS or LS </Comment>
<SubSteps>
<SubStep
 Name="SubStep1"
>
<Actions>
<Action>BTM.Message &lt;- Messages.EUROBALISE.Message
{
    Q_UPDOWN=&gt; Messages.Q_UPDOWN.Up_link_telegram,
    M_VERSION=&gt;1,
    Q_MEDIA=&gt;Messages.Q_MEDIA.Balise,
    N_PIG=&gt;0,
    N_TOTAL=&gt;0,
    M_DUP=&gt;Messages.M_DUP.No_duplicates,
    M_MCOUNT=&gt;4,
    NID_C=&gt;140,
    NID_BG=&gt;2125,
    Q_LINK=&gt;Messages.Q_LINK.Unlinked,
    Sequence1=&gt;
    [ 
         Messages.EUROBALISE.SubStructure1
            {
              TRACK_TO_TRAIN =&gt; Messages.PACKET.TRACK_TO_TRAIN.Message
                {
                   INFILL_LOCATION_REFERENCE =&gt;Messages.PACKET.TRACK_TO_TRAIN.INFILL_LOCATION_REFERENCE.Message
                     {
                          L_PACKET=&gt;10,
                          NID_BG=&gt;2126,
                          NID_C=&gt;140,
                          NID_PACKET=&gt;136,
                          Q_DIR=&gt;Messages.Q_DIR.Nominal,
                          Q_NEWCOUNTRY=&gt;Messages.Q_NEWCOUNTRY.Same_country___railway_administration__no_NID_C_follows
                     }
                 }
             },
     Messages.EUROBALISE.SubStructure1
        {
            TRACK_TO_TRAIN=&gt;Messages.PACKET.TRACK_TO_TRAIN.Message
            {
                 LEVEL_1_MOVEMENT_AUTHORITY=&gt;Messages.PACKET.TRACK_TO_TRAIN.LEVEL_1_MOVEMENT_AUTHORITY.Message
                {
                    NID_PACKET=&gt;12,
                    Q_DIR=&gt;Messages.Q_DIR.Nominal,
                    L_PACKET=&gt;400,
                    Q_SCALE=&gt;Messages.Q_SCALE._1_m_scaleC,
                    V_MAIN=&gt;16,
                    V_LOA=&gt;8,
                    T_LOA=&gt;200,
                    N_ITER=&gt;0,
                    Sequence1=&gt;[],
                    L_ENDSECTION=&gt;1000,
                    Q_SECTIONTIMER=&gt;Messages.Q_SECTIONTIMER.No_Section_Timer_information,
                    T_SECTIONTIMER=&gt;0,
                    D_SECTIONTIMERSTOPLOC=&gt;0,
                    Q_ENDTIMER=&gt;Messages.Q_ENDTIMER.No_End_section_timer_information,
                    T_ENDTIMER=&gt;0,
                    D_ENDTIMERSTARTLOC=&gt;0,
                    Q_DANGERPOINT=&gt;Messages.Q_DANGERPOINT.Danger_point_information_to_follow,
                    D_DP=&gt;12000,
                    V_RELEASEDP=&gt;5,
                    Q_OVERLAP=&gt;Messages.Q_OVERLAP.No_overlap_information,
                    D_STARTOL=&gt;0,
                    T_OL=&gt;0,
                    D_OL=&gt;0,
                    V_RELEASEOL=&gt;0
                }
            }
         }
                ]
}</Action><Action>INSERT
BTM.Linking.LinkingData
{
Distance =&gt; 1000.0,
LocationAccuracy =&gt; 100.0,
NID_BG =&gt; 2126,
Orientation =&gt; Default.Orientation.Nominal,
Reaction =&gt; BTM.Linking.LinkingReaction.NoReaction

}
IN
BTM.Linking.Linkings</Action></Actions>
</SubStep><SubStep
 Name="Sub-step2"
>
<Expectations>
<Expectation
 Kind="Instantaneous"
 DeadLine="1"
>Kernel.MA.MA == EMPTY</Expectation><Expectation
 Kind="Instantaneous"
 DeadLine="1"
>Kernel.Mode == Default.Mode.OS</Expectation><Expectation
 Kind="Instantaneous"
 DeadLine="1"
>Kernel.Infill.Data == EMPTY</Expectation></Expectations>
</SubStep></SubSteps>
</Step><Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 TranslationRequired="FALSE"
 Name="Step4 - BTM.Message + Mode FS"
>
<Comment>This step is for testing that the OBU receives the packets. It has all the necessary for it. The linking information, the correct mode LS or FS and a BTM.Message with the packets. </Comment>
<SubSteps>
<SubStep
 Name="SubStep1"
>
<Actions>
<Action>Kernel.Mode &lt;- Default.Mode.FS</Action><Action>BTM.Message &lt;- Messages.EUROBALISE.Message
{
    Q_UPDOWN=&gt; Messages.Q_UPDOWN.Up_link_telegram,
    M_VERSION=&gt;1,
    Q_MEDIA=&gt;Messages.Q_MEDIA.Balise,
    N_PIG=&gt;0,
    N_TOTAL=&gt;0,
    M_DUP=&gt;Messages.M_DUP.No_duplicates,
    M_MCOUNT=&gt;4,
    NID_C=&gt;140,
    NID_BG=&gt;2125,
    Q_LINK=&gt;Messages.Q_LINK.Unlinked,
    Sequence1=&gt;
    [ 
         Messages.EUROBALISE.SubStructure1
            {
              TRACK_TO_TRAIN =&gt; Messages.PACKET.TRACK_TO_TRAIN.Message
                {
                   INFILL_LOCATION_REFERENCE =&gt;Messages.PACKET.TRACK_TO_TRAIN.INFILL_LOCATION_REFERENCE.Message
                     {
                          L_PACKET=&gt;10,
                          NID_BG=&gt;2126,
                          NID_C=&gt;140,
                          NID_PACKET=&gt;136,
                          Q_DIR=&gt;Messages.Q_DIR.Nominal,
                          Q_NEWCOUNTRY=&gt;Messages.Q_NEWCOUNTRY.Same_country___railway_administration__no_NID_C_follows
                     }
                 }
             },
     Messages.EUROBALISE.SubStructure1
        {
            TRACK_TO_TRAIN=&gt;Messages.PACKET.TRACK_TO_TRAIN.Message
            {
                 LEVEL_1_MOVEMENT_AUTHORITY=&gt;Messages.PACKET.TRACK_TO_TRAIN.LEVEL_1_MOVEMENT_AUTHORITY.Message
                {
                    NID_PACKET=&gt;12,
                    Q_DIR=&gt;Messages.Q_DIR.Nominal,
                    L_PACKET=&gt;400,
                    Q_SCALE=&gt;Messages.Q_SCALE._1_m_scaleC,
                    V_MAIN=&gt;16,
                    V_LOA=&gt;8,
                    T_LOA=&gt;200,
                    N_ITER=&gt;0,
                    Sequence1=&gt;[],
                    L_ENDSECTION=&gt;1000,
                    Q_SECTIONTIMER=&gt;Messages.Q_SECTIONTIMER.No_Section_Timer_information,
                    T_SECTIONTIMER=&gt;0,
                    D_SECTIONTIMERSTOPLOC=&gt;0,
                    Q_ENDTIMER=&gt;Messages.Q_ENDTIMER.No_End_section_timer_information,
                    T_ENDTIMER=&gt;0,
                    D_ENDTIMERSTARTLOC=&gt;0,
                    Q_DANGERPOINT=&gt;Messages.Q_DANGERPOINT.Danger_point_information_to_follow,
                    D_DP=&gt;12000,
                    V_RELEASEDP=&gt;5,
                    Q_OVERLAP=&gt;Messages.Q_OVERLAP.No_overlap_information,
                    D_STARTOL=&gt;0,
                    T_OL=&gt;0,
                    D_OL=&gt;0,
                    V_RELEASEOL=&gt;0
                }
            }
         }
                ]
}</Action></Actions>
<Expectations>
<Expectation
 Kind="Instantaneous"
 DeadLine="1"
>Kernel.Infill.Data.NID_BG == 2126</Expectation><Expectation
 Kind="Instantaneous"
 DeadLine="1"
>Kernel.Infill.Data != EMPTY</Expectation></Expectations>
</SubStep><SubStep
 Name="Sub-step2"
>
<Expectations>
<Expectation
 Kind="Instantaneous"
 DeadLine="1"
>Kernel.Mode == Default.Mode.FS</Expectation><Expectation
 Kind="Instantaneous"
 DeadLine="1"
>Kernel.MA.MA.EndSection.Length == 1000.0</Expectation></Expectations>
</SubStep></SubSteps>
</Step><Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 TranslationRequired="FALSE"
 Name="Step5 - BTM.Message + Mode LS"
>
<Comment>Same as step 4 but for LS. The train is tripped otherwise kernel changes the mode to FS (condition 32 of Table 4.6)</Comment>
<SubSteps>
<SubStep
 Name="SubStep1"
>
<Actions>
<Action>Kernel.Mode &lt;- Default.Mode.LS</Action><Action>Kernel.SpeedAndDistanceMonitoring.TrainTripped &lt;- True</Action><Action>BTM.Message &lt;- Messages.EUROBALISE.Message
{
    Q_UPDOWN=&gt; Messages.Q_UPDOWN.Up_link_telegram,
    M_VERSION=&gt;1,
    Q_MEDIA=&gt;Messages.Q_MEDIA.Balise,
    N_PIG=&gt;0,
    N_TOTAL=&gt;0,
    M_DUP=&gt;Messages.M_DUP.No_duplicates,
    M_MCOUNT=&gt;4,
    NID_C=&gt;140,
    NID_BG=&gt;2125,
    Q_LINK=&gt;Messages.Q_LINK.Unlinked,
    Sequence1=&gt;
    [ 
         Messages.EUROBALISE.SubStructure1
            {
              TRACK_TO_TRAIN =&gt; Messages.PACKET.TRACK_TO_TRAIN.Message
                {
                   INFILL_LOCATION_REFERENCE =&gt;Messages.PACKET.TRACK_TO_TRAIN.INFILL_LOCATION_REFERENCE.Message
                     {
                          L_PACKET=&gt;10,
                          NID_BG=&gt;2126,
                          NID_C=&gt;140,
                          NID_PACKET=&gt;136,
                          Q_DIR=&gt;Messages.Q_DIR.Nominal,
                          Q_NEWCOUNTRY=&gt;Messages.Q_NEWCOUNTRY.Same_country___railway_administration__no_NID_C_follows
                     }
                 }
             },
     Messages.EUROBALISE.SubStructure1
        {
            TRACK_TO_TRAIN=&gt;Messages.PACKET.TRACK_TO_TRAIN.Message
            {
                 LEVEL_1_MOVEMENT_AUTHORITY=&gt;Messages.PACKET.TRACK_TO_TRAIN.LEVEL_1_MOVEMENT_AUTHORITY.Message
                {
                    NID_PACKET=&gt;12,
                    Q_DIR=&gt;Messages.Q_DIR.Nominal,
                    L_PACKET=&gt;400,
                    Q_SCALE=&gt;Messages.Q_SCALE._1_m_scaleC,
                    V_MAIN=&gt;16,
                    V_LOA=&gt;8,
                    T_LOA=&gt;200,
                    N_ITER=&gt;0,
                    Sequence1=&gt;[],
                    L_ENDSECTION=&gt;800,
                    Q_SECTIONTIMER=&gt;Messages.Q_SECTIONTIMER.No_Section_Timer_information,
                    T_SECTIONTIMER=&gt;0,
                    D_SECTIONTIMERSTOPLOC=&gt;0,
                    Q_ENDTIMER=&gt;Messages.Q_ENDTIMER.No_End_section_timer_information,
                    T_ENDTIMER=&gt;0,
                    D_ENDTIMERSTARTLOC=&gt;0,
                    Q_DANGERPOINT=&gt;Messages.Q_DANGERPOINT.Danger_point_information_to_follow,
                    D_DP=&gt;12000,
                    V_RELEASEDP=&gt;5,
                    Q_OVERLAP=&gt;Messages.Q_OVERLAP.No_overlap_information,
                    D_STARTOL=&gt;0,
                    T_OL=&gt;0,
                    D_OL=&gt;0,
                    V_RELEASEOL=&gt;0
                }
            }
         }
                ]
}</Action></Actions>
</SubStep><SubStep
 Name="Sub-step2"
>
<Expectations>
<Expectation
 Kind="Instantaneous"
 DeadLine="1"
>Kernel.Mode == Default.Mode.LS</Expectation><Expectation
 Kind="Instantaneous"
 DeadLine="1"
>Kernel.MA.MA.EndSection.Length == 800.0</Expectation></Expectations>
</SubStep></SubSteps>
</Step><Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 TranslationRequired="FALSE"
 Name="Step6 - BTM.Message + Mode LS + No Linking"
>
<Comment>This step is for testing that if there is not linking information, the OBU does not receive the packet even if it is in the correct mode. The value of the length of the EndSection, is for the previous MA. That means that the new one ( 1200 ) it is not stored.</Comment>
<SubSteps>
<SubStep
 Name="SubStep1"
>
<Actions>
<Action>BTM.Linking.Linkings &lt;- []</Action><Action>BTM.Message &lt;- Messages.EUROBALISE.Message
{
    Q_UPDOWN=&gt; Messages.Q_UPDOWN.Up_link_telegram,
    M_VERSION=&gt;1,
    Q_MEDIA=&gt;Messages.Q_MEDIA.Balise,
    N_PIG=&gt;0,
    N_TOTAL=&gt;0,
    M_DUP=&gt;Messages.M_DUP.No_duplicates,
    M_MCOUNT=&gt;4,
    NID_C=&gt;140,
    NID_BG=&gt;2125,
    Q_LINK=&gt;Messages.Q_LINK.Linked,
    Sequence1=&gt;
    [ 
         Messages.EUROBALISE.SubStructure1
            {
              TRACK_TO_TRAIN =&gt; Messages.PACKET.TRACK_TO_TRAIN.Message
                {
                   INFILL_LOCATION_REFERENCE =&gt;Messages.PACKET.TRACK_TO_TRAIN.INFILL_LOCATION_REFERENCE.Message
                     {
                          L_PACKET=&gt;10,
                          NID_BG=&gt;2126,
                          NID_C=&gt;140,
                          NID_PACKET=&gt;136,
                          Q_DIR=&gt;Messages.Q_DIR.Nominal,
                          Q_NEWCOUNTRY=&gt;Messages.Q_NEWCOUNTRY.Same_country___railway_administration__no_NID_C_follows
                     }
                 }
             },
     Messages.EUROBALISE.SubStructure1
        {
            TRACK_TO_TRAIN=&gt;Messages.PACKET.TRACK_TO_TRAIN.Message
            {
                 LEVEL_1_MOVEMENT_AUTHORITY=&gt;Messages.PACKET.TRACK_TO_TRAIN.LEVEL_1_MOVEMENT_AUTHORITY.Message
                {
                    NID_PACKET=&gt;12,
                    Q_DIR=&gt;Messages.Q_DIR.Nominal,
                    L_PACKET=&gt;400,
                    Q_SCALE=&gt;Messages.Q_SCALE._1_m_scaleC,
                    V_MAIN=&gt;16,
                    V_LOA=&gt;8,
                    T_LOA=&gt;200,
                    N_ITER=&gt;0,
                    Sequence1=&gt;[],
                    L_ENDSECTION=&gt;1200,
                    Q_SECTIONTIMER=&gt;Messages.Q_SECTIONTIMER.No_Section_Timer_information,
                    T_SECTIONTIMER=&gt;0,
                    D_SECTIONTIMERSTOPLOC=&gt;0,
                    Q_ENDTIMER=&gt;Messages.Q_ENDTIMER.No_End_section_timer_information,
                    T_ENDTIMER=&gt;0,
                    D_ENDTIMERSTARTLOC=&gt;0,
                    Q_DANGERPOINT=&gt;Messages.Q_DANGERPOINT.Danger_point_information_to_follow,
                    D_DP=&gt;12000,
                    V_RELEASEDP=&gt;5,
                    Q_OVERLAP=&gt;Messages.Q_OVERLAP.No_overlap_information,
                    D_STARTOL=&gt;0,
                    T_OL=&gt;0,
                    D_OL=&gt;0,
                    V_RELEASEOL=&gt;0
                }
            }
         }
                ]
}</Action></Actions>
</SubStep><SubStep
 Name="Sub-step2"
>
<Expectations>
<Expectation
 Kind="Instantaneous"
 DeadLine="1"
>Kernel.Infill.Data == EMPTY</Expectation><Expectation
 Kind="Instantaneous"
 DeadLine="1"
>Kernel.MA.MA.EndSection.Length == 800.0</Expectation></Expectations>
</SubStep></SubSteps>
</Step></Steps>
</TestCase><TestCase
 Implemented="TRUE"
 Name="Replace data beyond balise group in L1 via Balise"
>
<ReqRef
 Id="4f9e6037-be46-477d-bbca-3122bd9ad940"
>
</ReqRef><ReqRef
 Id="76a67f0f-9afc-46c4-80b9-b7a211017100"
>
</ReqRef><Steps>
<Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 Name="Step1 - Setup"
>
<SubSteps>
<SubStep
 Name="SubStep1 - Initialize test environment"
>
<Actions>
<Action>Kernel.InitializeTestEnvironment(

)</Action></Actions>
</SubStep><SubStep
 Name="Sub-step2 - Initialize elements to accept MA"
>
<Actions>
<Action>Kernel.InitializeElementsForMA()</Action></Actions>
</SubStep></SubSteps>
</Step><Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 Name="Step2 - Mode FS + Level 1"
>
<SubSteps>
<SubStep
 Name="SubStep1"
>
<Actions>
<Action>Kernel.Level.DataState &lt;- Default.DataState.Valid</Action><Action>Kernel.Level.Value &lt;- Default.Level.L1</Action><Action>Kernel.Mode &lt;- Default.Mode.FS</Action><Action>Kernel.MA.MA &lt;- EMPTY</Action><Action>Kernel.Infill.Data &lt;- EMPTY</Action><Action>BTM.Linking.Linkings &lt;- []</Action></Actions>
</SubStep><SubStep
 Name="Sub-step2"
>
<Expectations>
<Expectation
 Kind="Instantaneous"
 DeadLine="1"
>Kernel.Infill.Data == EMPTY</Expectation><Expectation
 Kind="Instantaneous"
 DeadLine="1"
>Kernel.MA.MA == EMPTY</Expectation></Expectations>
</SubStep></SubSteps>
</Step><Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 Name="Step3 - BTM.Message 1 NoInfill"
>
<SubSteps>
<SubStep
 Name="Sub-step1"
>
<Actions>
<Action>BTM.Message &lt;- Messages.EUROBALISE.Message
{
    Q_UPDOWN=&gt; Messages.Q_UPDOWN.Up_link_telegram,
    M_VERSION=&gt;1,
    Q_MEDIA=&gt;Messages.Q_MEDIA.Balise,
    N_PIG=&gt;8,
    N_TOTAL=&gt;0,
    M_DUP=&gt;Messages.M_DUP.No_duplicates,
    M_MCOUNT=&gt;4,
    NID_C=&gt;140,
    NID_BG=&gt;9618,
    Q_LINK=&gt;Messages.Q_LINK.Linked,
    Sequence1=&gt;
    [
        Messages.EUROBALISE.SubStructure1
        {
            TRACK_TO_TRAIN=&gt;Messages.PACKET.TRACK_TO_TRAIN.Message
            {
                LEVEL_1_MOVEMENT_AUTHORITY=&gt;Messages.PACKET.TRACK_TO_TRAIN.LEVEL_1_MOVEMENT_AUTHORITY.Message
                {
                    NID_PACKET=&gt;12,
                    Q_DIR=&gt;Messages.Q_DIR.Nominal,
                    L_PACKET=&gt;400,
                    Q_SCALE=&gt;Messages.Q_SCALE._1_m_scaleC,
                    V_MAIN=&gt;20,
                    V_LOA=&gt;8,
                    T_LOA=&gt;250,
                    N_ITER=&gt;3,
                    Sequence1=&gt;[
                    Messages.PACKET.TRACK_TO_TRAIN.LEVEL_1_MOVEMENT_AUTHORITY.SubStructure1 {
                      L_SECTION=&gt;800,
                      Q_SECTIONTIMER=&gt;Messages.Q_SECTIONTIMER.No_Section_Timer_information
                    },
                    Messages.PACKET.TRACK_TO_TRAIN.LEVEL_1_MOVEMENT_AUTHORITY.SubStructure1 {
                      L_SECTION=&gt;300,
                      Q_SECTIONTIMER=&gt;Messages.Q_SECTIONTIMER.No_Section_Timer_information
                    },
                    Messages.PACKET.TRACK_TO_TRAIN.LEVEL_1_MOVEMENT_AUTHORITY.SubStructure1 {
                      L_SECTION=&gt;100,
                      Q_SECTIONTIMER=&gt;Messages.Q_SECTIONTIMER.No_Section_Timer_information
                    }],
                    L_ENDSECTION=&gt;1500,
                    Q_SECTIONTIMER=&gt;Messages.Q_SECTIONTIMER.No_Section_Timer_information,
                    Q_ENDTIMER=&gt;Messages.Q_ENDTIMER.No_End_section_timer_information,
                    Q_DANGERPOINT=&gt;Messages.Q_DANGERPOINT.Danger_point_information_to_follow,
                    D_DP=&gt;12000,
                    V_RELEASEDP=&gt;5,
                    Q_OVERLAP=&gt;Messages.Q_OVERLAP.No_overlap_information
                }
            }
        }
    ]
}</Action></Actions>
</SubStep><SubStep
 Name="Sub-step2"
>
<Expectations>
<Expectation
 Kind="Instantaneous"
 DeadLine="1"
>(COUNT Kernel.MA.MA.Sections) == 3</Expectation><Expectation
 Kind="Instantaneous"
 DeadLine="1"
>(FIRST_IN Kernel.MA.MA.Sections).Length == 800.0</Expectation></Expectations>
</SubStep></SubSteps>
</Step><Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 Name="Step4 - BTM.Message 2 Infill"
>
<SubSteps>
<SubStep
 Name="SubStep1 - Send"
>
<Actions>
<Action>BTM.Message &lt;- Messages.EUROBALISE.Message
{
    Q_UPDOWN=&gt; Messages.Q_UPDOWN.Up_link_telegram,
    M_VERSION=&gt;1,
    Q_MEDIA=&gt;Messages.Q_MEDIA.Balise,
    N_PIG=&gt;0,
    N_TOTAL=&gt;0,
    M_DUP=&gt;Messages.M_DUP.No_duplicates,
    M_MCOUNT=&gt;4,
    NID_C=&gt;140,
    NID_BG=&gt;2125,
    Q_LINK=&gt;Messages.Q_LINK.Unlinked,
    Sequence1=&gt;
    [ 
         Messages.EUROBALISE.SubStructure1
            {
              TRACK_TO_TRAIN =&gt; Messages.PACKET.TRACK_TO_TRAIN.Message
                {
                   INFILL_LOCATION_REFERENCE =&gt;Messages.PACKET.TRACK_TO_TRAIN.INFILL_LOCATION_REFERENCE.Message
                     {
                          L_PACKET=&gt;10,
                          NID_BG=&gt;2127,
                          NID_C=&gt;140,
                          NID_PACKET=&gt;136,
                          Q_DIR=&gt;Messages.Q_DIR.Nominal,
                          Q_NEWCOUNTRY=&gt;Messages.Q_NEWCOUNTRY.Same_country___railway_administration__no_NID_C_follows
                     }
                 }
             },
     Messages.EUROBALISE.SubStructure1
        {
            TRACK_TO_TRAIN=&gt;Messages.PACKET.TRACK_TO_TRAIN.Message
            {
                 LEVEL_1_MOVEMENT_AUTHORITY=&gt;Messages.PACKET.TRACK_TO_TRAIN.LEVEL_1_MOVEMENT_AUTHORITY.Message
                {
                    NID_PACKET=&gt;12,
                    Q_DIR=&gt;Messages.Q_DIR.Nominal,
                    L_PACKET=&gt;400,
                    Q_SCALE=&gt;Messages.Q_SCALE._1_m_scaleC,
                    V_MAIN=&gt;16,
                    V_LOA=&gt;8,
                    T_LOA=&gt;200,
                    N_ITER=&gt;3,
                    Sequence1=&gt;[
                    Messages.PACKET.TRACK_TO_TRAIN.LEVEL_1_MOVEMENT_AUTHORITY.SubStructure1               
                    {
                      L_SECTION=&gt;123,
                      Q_SECTIONTIMER=&gt;Messages.Q_SECTIONTIMER.No_Section_Timer_information
                    },
                    Messages.PACKET.TRACK_TO_TRAIN.LEVEL_1_MOVEMENT_AUTHORITY.SubStructure1               
                    {
                      L_SECTION=&gt;234,
                      Q_SECTIONTIMER=&gt;Messages.Q_SECTIONTIMER.No_Section_Timer_information
                    },
                    Messages.PACKET.TRACK_TO_TRAIN.LEVEL_1_MOVEMENT_AUTHORITY.SubStructure1
                    {
                      L_SECTION=&gt;345,
                      Q_SECTIONTIMER=&gt;Messages.Q_SECTIONTIMER.No_Section_Timer_information
                    }],
                    L_ENDSECTION=&gt;1234,
                    Q_SECTIONTIMER=&gt;Messages.Q_SECTIONTIMER.No_Section_Timer_information,
                    T_SECTIONTIMER=&gt;0,
                    D_SECTIONTIMERSTOPLOC=&gt;0,
                    Q_ENDTIMER=&gt;Messages.Q_ENDTIMER.No_End_section_timer_information,
                    T_ENDTIMER=&gt;0,
                    D_ENDTIMERSTARTLOC=&gt;0,
                    Q_DANGERPOINT=&gt;Messages.Q_DANGERPOINT.Danger_point_information_to_follow,
                    D_DP=&gt;12000,
                    V_RELEASEDP=&gt;5,
                    Q_OVERLAP=&gt;Messages.Q_OVERLAP.No_overlap_information,
                    D_STARTOL=&gt;0,
                    T_OL=&gt;0,
                    D_OL=&gt;0,
                    V_RELEASEOL=&gt;0
                }
            }
         }
                ]
}</Action><Action>INSERT
BTM.Linking.LinkingData
{
Distance =&gt; 1000.0,
LocationAccuracy =&gt; 100.0,
NID_BG =&gt; 2127,
Orientation =&gt; Default.Orientation.Nominal,
Reaction =&gt; BTM.Linking.LinkingReaction.NoReaction

}
IN
BTM.Linking.Linkings</Action></Actions>
</SubStep><SubStep
 Name="Sub-step2"
>
</SubStep></SubSteps>
</Step><Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 Name="Step5 - Check for replaced information"
>
<SubSteps>
<SubStep
 Name="SubStep1"
>
<Expectations>
<Expectation
 Kind="Instantaneous"
 DeadLine="1"
>(COUNT Kernel.MA.MA.Sections) == 5</Expectation><Expectation
 Kind="Instantaneous"
 DeadLine="1"
>(FIRST_IN Kernel.MA.MA.Sections).Length == 800.0</Expectation><Expectation
 Kind="Instantaneous"
 DeadLine="1"
>(LAST_IN Kernel.MA.MA.Sections).Length == 345.0</Expectation><Expectation
 Kind="Instantaneous"
 DeadLine="1"
>Kernel.MA.MA.EndSection.Length == 1234.0</Expectation><Expectation
 Kind="Instantaneous"
 DeadLine="1"
>Before(
    ExpectedFirst=&gt; FIRST_IN Kernel.MA.MA.Sections | X.Length == 800.0, 
    ExpectedSecond=&gt; FIRST_IN Kernel.MA.MA.Sections | X.Length == 200.0,
    Collection=&gt; Kernel.MA.MA.Sections
)</Expectation></Expectations>
</SubStep></SubSteps>
</Step></Steps>
</TestCase><TestCase
 Implemented="TRUE"
 Name="Replace data beyond balise group in L1 via Loop"
>
<ReqRef
 Id="4f9e6037-be46-477d-bbca-3122bd9ad940"
>
</ReqRef><ReqRef
 Id="76a67f0f-9afc-46c4-80b9-b7a211017100"
>
</ReqRef><Steps>
<Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 Name="Step1 - Setup"
>
<SubSteps>
<SubStep
 Name="SubStep1 - Initialize test environment"
>
<Actions>
<Action>Kernel.InitializeTestEnvironment(

)</Action></Actions>
</SubStep><SubStep
 Name="Sub-step2 - Initialize elements to accept MA"
>
<Actions>
<Action>Kernel.InitializeElementsForMA()</Action></Actions>
</SubStep></SubSteps>
</Step><Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 Name="Step2 - Mode FS + Level 1"
>
<SubSteps>
<SubStep
 Name="SubStep1"
>
<Actions>
<Action>Kernel.Level.DataState &lt;- Default.DataState.Valid</Action><Action>Kernel.Level.Value &lt;- Default.Level.L1</Action><Action>Kernel.Mode &lt;- Default.Mode.FS</Action><Action>Kernel.MA.MA &lt;- EMPTY</Action><Action>Kernel.Infill.Data &lt;- EMPTY</Action><Action>BTM.Linking.Linkings &lt;- []</Action></Actions>
</SubStep><SubStep
 Name="Sub-step2"
>
<Expectations>
<Expectation
 Kind="Instantaneous"
 DeadLine="1"
>Kernel.Infill.Data == EMPTY</Expectation><Expectation
 Kind="Instantaneous"
 DeadLine="1"
>Kernel.MA.MA == EMPTY</Expectation></Expectations>
</SubStep></SubSteps>
</Step><Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 Name="Step3 - BTM.Message 1 NoInfill"
>
<SubSteps>
<SubStep
 Name="Sub-step1"
>
<Actions>
<Action>BTM.Message &lt;- Messages.EUROBALISE.Message
{
    Q_UPDOWN=&gt; Messages.Q_UPDOWN.Up_link_telegram,
    M_VERSION=&gt;1,
    Q_MEDIA=&gt;Messages.Q_MEDIA.Balise,
    N_PIG=&gt;8,
    N_TOTAL=&gt;0,
    M_DUP=&gt;Messages.M_DUP.No_duplicates,
    M_MCOUNT=&gt;4,
    NID_C=&gt;140,
    NID_BG=&gt;9618,
    Q_LINK=&gt;Messages.Q_LINK.Linked,
    Sequence1=&gt;
    [
        Messages.EUROBALISE.SubStructure1
        {
            TRACK_TO_TRAIN=&gt;Messages.PACKET.TRACK_TO_TRAIN.Message
            {
                LEVEL_1_MOVEMENT_AUTHORITY=&gt;Messages.PACKET.TRACK_TO_TRAIN.LEVEL_1_MOVEMENT_AUTHORITY.Message
                {
                    NID_PACKET=&gt;12,
                    Q_DIR=&gt;Messages.Q_DIR.Nominal,
                    L_PACKET=&gt;400,
                    Q_SCALE=&gt;Messages.Q_SCALE._1_m_scaleC,
                    V_MAIN=&gt;20,
                    V_LOA=&gt;8,
                    T_LOA=&gt;250,
                    N_ITER=&gt;3,
                    Sequence1=&gt;[
                    Messages.PACKET.TRACK_TO_TRAIN.LEVEL_1_MOVEMENT_AUTHORITY.SubStructure1 {
                      L_SECTION=&gt;800,
                      Q_SECTIONTIMER=&gt;Messages.Q_SECTIONTIMER.No_Section_Timer_information
                    },
                    Messages.PACKET.TRACK_TO_TRAIN.LEVEL_1_MOVEMENT_AUTHORITY.SubStructure1 {
                      L_SECTION=&gt;300,
                      Q_SECTIONTIMER=&gt;Messages.Q_SECTIONTIMER.No_Section_Timer_information
                    },
                    Messages.PACKET.TRACK_TO_TRAIN.LEVEL_1_MOVEMENT_AUTHORITY.SubStructure1 {
                      L_SECTION=&gt;100,
                      Q_SECTIONTIMER=&gt;Messages.Q_SECTIONTIMER.No_Section_Timer_information
                    }],
                    L_ENDSECTION=&gt;1500,
                    Q_SECTIONTIMER=&gt;Messages.Q_SECTIONTIMER.No_Section_Timer_information,
                    Q_ENDTIMER=&gt;Messages.Q_ENDTIMER.No_End_section_timer_information,
                    Q_DANGERPOINT=&gt;Messages.Q_DANGERPOINT.Danger_point_information_to_follow,
                    D_DP=&gt;12000,
                    V_RELEASEDP=&gt;5,
                    Q_OVERLAP=&gt;Messages.Q_OVERLAP.No_overlap_information
                }
            }
        }
    ]
}</Action></Actions>
</SubStep><SubStep
 Name="Sub-step2"
>
<Expectations>
<Expectation
 Kind="Instantaneous"
 DeadLine="1"
>(COUNT Kernel.MA.MA.Sections) == 3</Expectation><Expectation
 Kind="Instantaneous"
 DeadLine="1"
>(FIRST_IN Kernel.MA.MA.Sections).Length == 800.0</Expectation></Expectations>
</SubStep></SubSteps>
</Step><Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 Name="Step4 - BTM.Message 2 Infill"
>
<SubSteps>
<SubStep
 Name="SubStep1 - Send"
>
<Actions>
<Action>BTM.Message &lt;- Messages.EUROBALISE.Message
{
    Q_UPDOWN=&gt; Messages.Q_UPDOWN.Up_link_telegram,
    M_VERSION=&gt;1,
    Q_MEDIA=&gt;Messages.Q_MEDIA.Loop,
    N_PIG=&gt;0,
    N_TOTAL=&gt;0,
    M_DUP=&gt;Messages.M_DUP.No_duplicates,
    M_MCOUNT=&gt;4,
    NID_C=&gt;140,
    NID_BG=&gt;2125,
    Q_LINK=&gt;Messages.Q_LINK.Unlinked,
    Sequence1=&gt;
    [ 
         Messages.EUROBALISE.SubStructure1
            {
              TRACK_TO_TRAIN =&gt; Messages.PACKET.TRACK_TO_TRAIN.Message
                {
                   INFILL_LOCATION_REFERENCE =&gt;Messages.PACKET.TRACK_TO_TRAIN.INFILL_LOCATION_REFERENCE.Message
                     {
                          L_PACKET=&gt;10,
                          NID_BG=&gt;2127,
                          NID_C=&gt;140,
                          NID_PACKET=&gt;136,
                          Q_DIR=&gt;Messages.Q_DIR.Nominal,
                          Q_NEWCOUNTRY=&gt;Messages.Q_NEWCOUNTRY.Same_country___railway_administration__no_NID_C_follows
                     }
                 }
             },
     Messages.EUROBALISE.SubStructure1
        {
            TRACK_TO_TRAIN=&gt;Messages.PACKET.TRACK_TO_TRAIN.Message
            {
                 LEVEL_1_MOVEMENT_AUTHORITY=&gt;Messages.PACKET.TRACK_TO_TRAIN.LEVEL_1_MOVEMENT_AUTHORITY.Message
                {
                    NID_PACKET=&gt;12,
                    Q_DIR=&gt;Messages.Q_DIR.Nominal,
                    L_PACKET=&gt;400,
                    Q_SCALE=&gt;Messages.Q_SCALE._1_m_scaleC,
                    V_MAIN=&gt;16,
                    V_LOA=&gt;8,
                    T_LOA=&gt;200,
                    N_ITER=&gt;3,
                    Sequence1=&gt;[
                    Messages.PACKET.TRACK_TO_TRAIN.LEVEL_1_MOVEMENT_AUTHORITY.SubStructure1               
                    {
                      L_SECTION=&gt;123,
                      Q_SECTIONTIMER=&gt;Messages.Q_SECTIONTIMER.No_Section_Timer_information
                    },
                    Messages.PACKET.TRACK_TO_TRAIN.LEVEL_1_MOVEMENT_AUTHORITY.SubStructure1               
                    {
                      L_SECTION=&gt;234,
                      Q_SECTIONTIMER=&gt;Messages.Q_SECTIONTIMER.No_Section_Timer_information
                    },
                    Messages.PACKET.TRACK_TO_TRAIN.LEVEL_1_MOVEMENT_AUTHORITY.SubStructure1
                    {
                      L_SECTION=&gt;345,
                      Q_SECTIONTIMER=&gt;Messages.Q_SECTIONTIMER.No_Section_Timer_information
                    }],
                    L_ENDSECTION=&gt;1234,
                    Q_SECTIONTIMER=&gt;Messages.Q_SECTIONTIMER.No_Section_Timer_information,
                    T_SECTIONTIMER=&gt;0,
                    D_SECTIONTIMERSTOPLOC=&gt;0,
                    Q_ENDTIMER=&gt;Messages.Q_ENDTIMER.No_End_section_timer_information,
                    T_ENDTIMER=&gt;0,
                    D_ENDTIMERSTARTLOC=&gt;0,
                    Q_DANGERPOINT=&gt;Messages.Q_DANGERPOINT.Danger_point_information_to_follow,
                    D_DP=&gt;12000,
                    V_RELEASEDP=&gt;5,
                    Q_OVERLAP=&gt;Messages.Q_OVERLAP.No_overlap_information,
                    D_STARTOL=&gt;0,
                    T_OL=&gt;0,
                    D_OL=&gt;0,
                    V_RELEASEOL=&gt;0
                }
            }
         }
                ]
}</Action><Action>INSERT
BTM.Linking.LinkingData
{
Distance =&gt; 1000.0,
LocationAccuracy =&gt; 100.0,
NID_BG =&gt; 2127,
Orientation =&gt; Default.Orientation.Nominal,
Reaction =&gt; BTM.Linking.LinkingReaction.NoReaction

}
IN
BTM.Linking.Linkings</Action></Actions>
</SubStep><SubStep
 Name="Sub-step2"
>
</SubStep></SubSteps>
</Step><Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 Name="Step5 - Check for replaced information"
>
<SubSteps>
<SubStep
 Name="SubStep1"
>
<Expectations>
<Expectation
 Kind="Instantaneous"
 DeadLine="1"
>(COUNT Kernel.MA.MA.Sections) == 5</Expectation><Expectation
 Kind="Instantaneous"
 DeadLine="1"
>(FIRST_IN Kernel.MA.MA.Sections).Length == 800.0</Expectation><Expectation
 Kind="Instantaneous"
 DeadLine="1"
>(LAST_IN Kernel.MA.MA.Sections).Length == 345.0</Expectation><Expectation
 Kind="Instantaneous"
 DeadLine="1"
>Kernel.MA.MA.EndSection.Length == 1234.0</Expectation><Expectation
 Kind="Instantaneous"
 DeadLine="1"
>Before(
    ExpectedFirst=&gt; FIRST_IN Kernel.MA.MA.Sections | X.Length == 800.0, 
    ExpectedSecond=&gt; FIRST_IN Kernel.MA.MA.Sections | X.Length == 200.0,
    Collection=&gt; Kernel.MA.MA.Sections
)</Expectation></Expectations>
</SubStep></SubSteps>
</Step></Steps>
</TestCase></TestCases>
</SubSequence><SubSequence
 D_LRBG=""
 Level=""
 Mode=""
 NID_LRBG=""
 Q_DIRLRBG=""
 Q_DIRTRAIN=""
 Q_DLRBG=""
 RBC_ID=""
 RBCPhone=""
 Name="No Infill MA"
>
<TestCases>
<TestCase
 Implemented="TRUE"
 Name="Overwrite existing information L1 + Balise"
>
<ReqRef
 Id="5aa1fa8e-68c3-4f4f-83d8-b6d2b462a508"
>
</ReqRef><ReqRef
 Id="76a67f0f-9afc-46c4-80b9-b7a211017100"
>
</ReqRef><Steps>
<Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 Name="Step1 - Setup"
>
<SubSteps>
<SubStep
 Name="Sub-step1 - Initialize test environment"
>
<Actions>
<Action>Kernel.InitializeTestEnvironment(

)</Action></Actions>
</SubStep><SubStep
 Name="Sub-step2 - Initialize elements to accept MA"
>
<Actions>
<Action>Kernel.InitializeElementsForMA()</Action></Actions>
</SubStep></SubSteps>
</Step><Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 Name="Step2 - Mode OS + Level1"
>
<SubSteps>
<SubStep
 Name="SubStep1"
>
<Actions>
<Action>Kernel.Level.DataState &lt;- Default.DataState.Valid</Action><Action>Kernel.Level.Value &lt;- Default.Level.L1</Action><Action>Kernel.Mode &lt;- Default.Mode.OS</Action></Actions>
</SubStep><SubStep
 Name="Sub-step2"
>
<Expectations>
<Expectation
 Kind="Instantaneous"
 DeadLine="1"
>Kernel.Infill.Data == EMPTY</Expectation><Expectation
 Kind="Instantaneous"
 DeadLine="1"
>Kernel.MA.MA == EMPTY</Expectation></Expectations>
</SubStep></SubSteps>
</Step><Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 Name="Step3 - BTM.Message + someinformation"
>
<SubSteps>
<SubStep
 Name="SubStep1"
>
<Actions>
<Action>BTM.LRBG &lt;- BTM.BaliseGroup
{
    NID =&gt; 9618,
    Orientation =&gt; Orientation.Nominal,
    Position =&gt; BTM.Position
    {
        OverReadingAmountOdo =&gt; 29.0,
        Position =&gt; 2000.0,
        UnderReadingAmountOdo =&gt; 35.0
    }
}</Action><Action>Odometry.Accuracy &lt;- Odometry.OdometerAccuracy
{
    D_ura =&gt; 54.0,
    D_ora =&gt; 51.0,
    V_ora =&gt; 0.0,
    V_ura =&gt; 0.0
}</Action></Actions>
</SubStep><SubStep
 Name="Sub-step2"
>
<Actions>
<Action>BTM.Message &lt;- Messages.EUROBALISE.Message
{
    Q_UPDOWN=&gt; Messages.Q_UPDOWN.Up_link_telegram,
    M_VERSION=&gt;1,
    Q_MEDIA=&gt;Messages.Q_MEDIA.Balise,
    N_PIG=&gt;8,
    N_TOTAL=&gt;0,
    M_DUP=&gt;Messages.M_DUP.No_duplicates,
    M_MCOUNT=&gt;4,
    NID_C=&gt;140,
    NID_BG=&gt;9618,
    Q_LINK=&gt;Messages.Q_LINK.Linked,
    Sequence1=&gt;
    [
        Messages.EUROBALISE.SubStructure1
        {
            TRACK_TO_TRAIN=&gt;Messages.PACKET.TRACK_TO_TRAIN.Message
            {
                LEVEL_1_MOVEMENT_AUTHORITY=&gt;Messages.PACKET.TRACK_TO_TRAIN.LEVEL_1_MOVEMENT_AUTHORITY.Message
                {
                    NID_PACKET=&gt;12,
                    Q_DIR=&gt;Messages.Q_DIR.Nominal,
                    L_PACKET=&gt;400,
                    Q_SCALE=&gt;Messages.Q_SCALE._10_cm_scaleC,
                    V_MAIN=&gt;20,
                    V_LOA=&gt;8,
                    T_LOA=&gt;250,
                    N_ITER=&gt;1,
                    Sequence1=&gt;[
                    Messages.PACKET.TRACK_TO_TRAIN.LEVEL_1_MOVEMENT_AUTHORITY.SubStructure1 {
                      L_SECTION=&gt;7000,
                      Q_SECTIONTIMER=&gt;Messages.Q_SECTIONTIMER.No_Section_Timer_information
                    }],
                    L_ENDSECTION=&gt;10000,
                    Q_SECTIONTIMER=&gt;Messages.Q_SECTIONTIMER.No_Section_Timer_information,
                    Q_ENDTIMER=&gt;Messages.Q_ENDTIMER.No_End_section_timer_information,
                    Q_DANGERPOINT=&gt;Messages.Q_DANGERPOINT.Danger_point_information_to_follow,
                    D_DP=&gt;12000,
                    V_RELEASEDP=&gt;5,
                    Q_OVERLAP=&gt;Messages.Q_OVERLAP.No_overlap_information
                }
            }
        }
    ]
}</Action></Actions>
</SubStep><SubStep
 Name="Sub-step3"
>
<Expectations>
<Expectation
 Kind="Instantaneous"
 DeadLine="1"
>Kernel.MA.MA != EMPTY</Expectation><Expectation
 Kind="Instantaneous"
 DeadLine="1"
>Kernel.MA.MA.EndSection.Length == 1000.0</Expectation><Expectation
 Kind="Instantaneous"
 DeadLine="1"
>Kernel.MA.MA.TargetSpeed == 40.0</Expectation><Expectation
 Kind="Instantaneous"
 DeadLine="1"
>Kernel.MA.MA.TargetSpeedTimeOut == 250.0</Expectation><Expectation
 Kind="Instantaneous"
 DeadLine="1"
>Kernel.MA.MA.ReferenceBG == 9618</Expectation><Expectation
 Kind="Instantaneous"
 DeadLine="1"
>Kernel.MA.SignallingRelatedSpeedRestriction == 100.0</Expectation><Expectation
 Kind="Instantaneous"
 DeadLine="1"
>(COUNT Kernel.MA.MA.Sections) == 1</Expectation><Expectation
 Kind="Instantaneous"
 DeadLine="1"
>(FIRST_IN Kernel.MA.MA.Sections).Length == 700.0</Expectation><Expectation
 Kind="Instantaneous"
 DeadLine="1"
>Kernel.MA.MA.EndSection.DangerPoint.Distance == 1200.0</Expectation><Expectation
 Kind="Instantaneous"
 DeadLine="1"
>Kernel.MA.MA.EndSection.DangerPoint.ReleaseSpeed == 25.0</Expectation><Expectation
 Kind="Instantaneous"
 DeadLine="1"
>Kernel.SpeedAndDistanceMonitoring.ReleaseSpeedSupervision.ReleaseSpeed == 25.0</Expectation></Expectations>
</SubStep></SubSteps>
</Step><Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 Name="Step4 - BTM.Message + someNEWinformation"
>
<SubSteps>
<SubStep
 Name="SubStep1"
>
<Actions>
<Action>BTM.LRBG &lt;- BTM.BaliseGroup
{
    NID =&gt; 9619,
    Orientation =&gt; Orientation.Nominal,
    Position =&gt; BTM.Position
    {
        OverReadingAmountOdo =&gt; 29.0,
        Position =&gt; 3000.0,
        UnderReadingAmountOdo =&gt; 35.0
    }
}</Action></Actions>
<Expectations>
<Expectation
 Kind="Instantaneous"
 DeadLine="1"
>Kernel.MA.MA != EMPTY</Expectation></Expectations>
</SubStep><SubStep
 Name="Sub-step2"
>
<Actions>
<Action>BTM.Message &lt;- Messages.EUROBALISE.Message
{
    Q_UPDOWN=&gt; Messages.Q_UPDOWN.Up_link_telegram,
    M_VERSION=&gt;1,
    Q_MEDIA=&gt;Messages.Q_MEDIA.Balise,
    N_PIG=&gt;8,
    N_TOTAL=&gt;0,
    M_DUP=&gt;Messages.M_DUP.No_duplicates,
    M_MCOUNT=&gt;4,
    NID_C=&gt;140,
    NID_BG=&gt;9619,
    Q_LINK=&gt;Messages.Q_LINK.Linked,
    Sequence1=&gt;
    [
        Messages.EUROBALISE.SubStructure1
        {
            TRACK_TO_TRAIN=&gt;Messages.PACKET.TRACK_TO_TRAIN.Message
            {
                LEVEL_1_MOVEMENT_AUTHORITY=&gt;Messages.PACKET.TRACK_TO_TRAIN.LEVEL_1_MOVEMENT_AUTHORITY.Message
                {
                    NID_PACKET=&gt;12,
                    Q_DIR=&gt;Messages.Q_DIR.Nominal,
                    L_PACKET=&gt;400,
                    Q_SCALE=&gt;Messages.Q_SCALE._10_cm_scaleC,
                    V_MAIN=&gt;16,
                    V_LOA=&gt;10,
                    T_LOA=&gt;200,
                    N_ITER=&gt;2,
                    Sequence1=&gt;[
                    Messages.PACKET.TRACK_TO_TRAIN.LEVEL_1_MOVEMENT_AUTHORITY.SubStructure1 {
                      L_SECTION=&gt;9000,
                      Q_SECTIONTIMER=&gt;Messages.Q_SECTIONTIMER.No_Section_Timer_information
                    },
                    Messages.PACKET.TRACK_TO_TRAIN.LEVEL_1_MOVEMENT_AUTHORITY.SubStructure1 {
                      L_SECTION=&gt;11000,
                      Q_SECTIONTIMER=&gt;Messages.Q_SECTIONTIMER.No_Section_Timer_information
                    }],
                    L_ENDSECTION=&gt;12000,
                    Q_SECTIONTIMER=&gt;Messages.Q_SECTIONTIMER.No_Section_Timer_information,
                    Q_ENDTIMER=&gt;Messages.Q_ENDTIMER.No_End_section_timer_information,
                    Q_DANGERPOINT=&gt;Messages.Q_DANGERPOINT.Danger_point_information_to_follow,
                    D_DP=&gt;13000,
                    V_RELEASEDP=&gt;10,
                    Q_OVERLAP=&gt;Messages.Q_OVERLAP.No_overlap_information
                }
            }
        }
    ]
}</Action></Actions>
</SubStep><SubStep
 Name="Sub-step3"
>
<Expectations>
<Expectation
 Kind="Instantaneous"
 DeadLine="1"
>Kernel.MA.MA != EMPTY</Expectation><Expectation
 Kind="Instantaneous"
 DeadLine="1"
>Kernel.MA.MA.EndSection.Length == 1200.0</Expectation><Expectation
 Kind="Instantaneous"
 DeadLine="1"
>Kernel.MA.MA.TargetSpeed == 50.0</Expectation><Expectation
 Kind="Instantaneous"
 DeadLine="1"
>Kernel.MA.MA.TargetSpeedTimeOut == 200.0</Expectation><Expectation
 Kind="Instantaneous"
 DeadLine="1"
>Kernel.MA.MA.ReferenceBG == 9619</Expectation><Expectation
 Kind="Instantaneous"
 DeadLine="1"
>Kernel.MA.SignallingRelatedSpeedRestriction == 80.0</Expectation><Expectation
 Kind="Instantaneous"
 DeadLine="1"
>(COUNT Kernel.MA.MA.Sections) == 2</Expectation><Expectation
 Kind="Instantaneous"
 DeadLine="1"
>(LAST_IN Kernel.MA.MA.Sections).Length == 1100.0</Expectation><Expectation
 Kind="Instantaneous"
 DeadLine="1"
>(FIRST_IN Kernel.MA.MA.Sections).Length == 900.0</Expectation><Expectation
 Kind="Instantaneous"
 DeadLine="1"
>Kernel.MA.MA.EndSection.DangerPoint.ReleaseSpeed == 50.0</Expectation><Expectation
 Kind="Instantaneous"
 DeadLine="1"
>Kernel.MA.MA.EndSection.DangerPoint.Distance == 1300.0</Expectation><Expectation
 Kind="Instantaneous"
 DeadLine="1"
>Kernel.SpeedAndDistanceMonitoring.ReleaseSpeedSupervision.ReleaseSpeed == 50.0</Expectation></Expectations>
</SubStep></SubSteps>
</Step><Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 Name="Step5 - BTM.Message + someMORENEWinformation"
>
<Comment>We separately check for the overlap-fields here, so there is no interference with Kernel.SpeedAndDistanceMonitoring.ReleaseSpeedSupervision.ReleaseSpeed #morido, 13/11/20</Comment>
<SubSteps>
<SubStep
 Name="SubStep1"
>
<Actions>
<Action>BTM.LRBG &lt;- BTM.BaliseGroup
{
    NID =&gt; 9620,
    Orientation =&gt; Orientation.Nominal,
    Position =&gt; BTM.Position
    {
        OverReadingAmountOdo =&gt; 29.0,
        Position =&gt; 3000.0,
        UnderReadingAmountOdo =&gt; 35.0
    }
}</Action></Actions>
<Expectations>
<Expectation
 Kind="Instantaneous"
 DeadLine="1"
>Kernel.MA.MA != EMPTY</Expectation></Expectations>
</SubStep><SubStep
 Name="Sub-step2"
>
<Actions>
<Action>BTM.Message &lt;- Messages.EUROBALISE.Message
{
    Q_UPDOWN=&gt; Messages.Q_UPDOWN.Up_link_telegram,
    M_VERSION=&gt;1,
    Q_MEDIA=&gt;Messages.Q_MEDIA.Balise,
    N_PIG=&gt;8,
    N_TOTAL=&gt;0,
    M_DUP=&gt;Messages.M_DUP.No_duplicates,
    M_MCOUNT=&gt;4,
    NID_C=&gt;140,
    NID_BG=&gt;9620,
    Q_LINK=&gt;Messages.Q_LINK.Linked,
    Sequence1=&gt;
    [
        Messages.EUROBALISE.SubStructure1
        {
            TRACK_TO_TRAIN=&gt;Messages.PACKET.TRACK_TO_TRAIN.Message
            {
                LEVEL_1_MOVEMENT_AUTHORITY=&gt;Messages.PACKET.TRACK_TO_TRAIN.LEVEL_1_MOVEMENT_AUTHORITY.Message
                {
                    NID_PACKET=&gt;12,
                    Q_DIR=&gt;Messages.Q_DIR.Nominal,
                    L_PACKET=&gt;400,
                    Q_SCALE=&gt;Messages.Q_SCALE._10_cm_scaleC,
                    V_MAIN=&gt;16,
                    V_LOA=&gt;10,
                    T_LOA=&gt;200,
                    N_ITER=&gt;2,
                    Sequence1=&gt;[
                    Messages.PACKET.TRACK_TO_TRAIN.LEVEL_1_MOVEMENT_AUTHORITY.SubStructure1 {
                      L_SECTION=&gt;8000,
                      Q_SECTIONTIMER=&gt;Messages.Q_SECTIONTIMER.No_Section_Timer_information
                    },
                    Messages.PACKET.TRACK_TO_TRAIN.LEVEL_1_MOVEMENT_AUTHORITY.SubStructure1 {
                      L_SECTION=&gt;7000,
                      Q_SECTIONTIMER=&gt;Messages.Q_SECTIONTIMER.No_Section_Timer_information
                    }],
                    L_ENDSECTION=&gt;12000,
                    Q_SECTIONTIMER=&gt;Messages.Q_SECTIONTIMER.No_Section_Timer_information,
                    Q_ENDTIMER=&gt;Messages.Q_ENDTIMER.No_End_section_timer_information,
                    Q_DANGERPOINT=&gt;Messages.Q_DANGERPOINT.No_danger_point_information,
                    Q_OVERLAP=&gt;Messages.Q_OVERLAP.Overlap_information_to_follow,
                    D_STARTOL=&gt;1000,
                    T_OL=&gt;40,
                    D_OL=&gt;11500,
                    V_RELEASEOL=&gt;6
                }
            }
        }
    ]
}</Action></Actions>
</SubStep><SubStep
 Name="Sub-step3"
>
<Expectations>
<Expectation
 Kind="Instantaneous"
 DeadLine="1"
>Kernel.MA.MA.EndSection.Overlap.Distance == 1150.0</Expectation><Expectation
 Kind="Instantaneous"
 DeadLine="1"
>Kernel.MA.MA.EndSection.Overlap.ReleaseSpeed == 30.0</Expectation><Expectation
 Kind="Instantaneous"
 DeadLine="1"
>Kernel.MA.MA.EndSection.Overlap.TimeOut == 40.0</Expectation><Expectation
 Kind="Instantaneous"
 DeadLine="1"
>Kernel.MA.MA.EndSection.Overlap.TimerDistance == 100.0</Expectation><Expectation
 Kind="Instantaneous"
 DeadLine="1"
>(COUNT Kernel.MA.MA.Sections) == 2</Expectation><Expectation
 Kind="Instantaneous"
 DeadLine="1"
>(FIRST_IN Kernel.MA.MA.Sections).Length == 800.0</Expectation><Expectation
 Kind="Instantaneous"
 DeadLine="1"
>(LAST_IN Kernel.MA.MA.Sections).Length == 700.0</Expectation></Expectations>
</SubStep></SubSteps>
</Step></Steps>
</TestCase><TestCase
 Implemented="TRUE"
 Name="Overwrite existing information L23 + Balise"
>
<ReqRef
 Id="5aa1fa8e-68c3-4f4f-83d8-b6d2b462a508"
>
</ReqRef><ReqRef
 Id="76a67f0f-9afc-46c4-80b9-b7a211017100"
>
</ReqRef><Steps>
<Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 Name="Step1 - Setup"
>
<SubSteps>
<SubStep
 Name="Sub-step1 - Initialize test environment"
>
<Actions>
<Action>Kernel.InitializeTestEnvironment(

)</Action></Actions>
</SubStep><SubStep
 Name="Sub-step2 - Initialize elements to accept MA"
>
<Actions>
<Action>Kernel.InitializeElementsForMA()</Action></Actions>
</SubStep></SubSteps>
</Step><Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 Name="Step2 - Mode OS + Level2"
>
<SubSteps>
<SubStep
 Name="SubStep1"
>
<Actions>
<Action>Kernel.Level.DataState &lt;- Default.DataState.Valid</Action><Action>Kernel.Level.Value &lt;- Default.Level.L2</Action><Action>Kernel.Mode &lt;- Default.Mode.OS</Action><Action>Kernel.MA.MA &lt;- EMPTY</Action></Actions>
</SubStep><SubStep
 Name="Sub-step2"
>
<Expectations>
<Expectation
 Kind="Instantaneous"
 DeadLine="1"
>Kernel.Infill.Data == EMPTY</Expectation><Expectation
 Kind="Instantaneous"
 DeadLine="1"
>Kernel.MA.MA == EMPTY</Expectation></Expectations>
</SubStep></SubSteps>
</Step><Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 Name="Step3 - BTM.Message + someinformation"
>
<SubSteps>
<SubStep
 Name="SubStep1"
>
<Actions>
<Action>BTM.LRBG &lt;- BTM.BaliseGroup
{
    NID =&gt; 9618,
    Orientation =&gt; Orientation.Nominal,
    Position =&gt; BTM.Position
    {
        OverReadingAmountOdo =&gt; 29.0,
        Position =&gt; 2000.0,
        UnderReadingAmountOdo =&gt; 35.0
    }
}</Action><Action>Odometry.Accuracy &lt;- Odometry.OdometerAccuracy
{
    D_ura =&gt; 54.0,
    D_ora =&gt; 51.0,
    V_ora =&gt; 0.0,
    V_ura =&gt; 0.0
}</Action></Actions>
</SubStep><SubStep
 Name="Sub-step2"
>
<Actions>
<Action>BTM.Message &lt;- Messages.EUROBALISE.Message
{
    Q_UPDOWN=&gt;Messages.Q_UPDOWN.Up_link_telegram,
    M_VERSION=&gt;1,
    Q_MEDIA=&gt;Messages.Q_MEDIA.Balise,
    N_PIG=&gt;8,
    N_TOTAL=&gt;0,
    M_DUP=&gt;Messages.M_DUP.No_duplicates,
    M_MCOUNT=&gt;4,
    NID_C=&gt;140,
    NID_BG=&gt;9618,
    Q_LINK=&gt;Messages.Q_LINK.Linked,
    Sequence1=&gt;
    [
        Messages.EUROBALISE.SubStructure1
        {
            TRACK_TO_TRAIN=&gt;Messages.PACKET.TRACK_TO_TRAIN.Message
            {
                LEVEL_2_3_MOVEMENT_AUTHORITY=&gt;Messages.PACKET.TRACK_TO_TRAIN.LEVEL_2_3_MOVEMENT_AUTHORITY.Message
                {
                    NID_PACKET=&gt;15,
                    Q_DIR=&gt;Messages.Q_DIR.Nominal,
                    L_PACKET=&gt;400,
                    Q_SCALE=&gt;Messages.Q_SCALE._10_cm_scaleC,
                    V_LOA=&gt;8,
                    T_LOA=&gt;250,
                    N_ITER=&gt;1,
                    Sequence1=&gt;[
                    Messages.PACKET.TRACK_TO_TRAIN.LEVEL_2_3_MOVEMENT_AUTHORITY.SubStructure1
                    {
                       L_SECTION =&gt; 7000,
                       Q_SECTIONTIMER =&gt; Messages.Q_SECTIONTIMER.No_Section_Timer_information
                    }],
                    L_ENDSECTION=&gt;10000,
                    Q_SECTIONTIMER=&gt;Messages.Q_SECTIONTIMER.No_Section_Timer_information,
                    Q_ENDTIMER=&gt;Messages.Q_ENDTIMER.No_End_section_timer_information,
                    Q_DANGERPOINT=&gt;Messages.Q_DANGERPOINT.Danger_point_information_to_follow,
                    D_DP=&gt;12000,
                    V_RELEASEDP=&gt;5,
                    Q_OVERLAP=&gt;Messages.Q_OVERLAP.No_overlap_information
                }
            }
        }
    ]
}</Action></Actions>
</SubStep><SubStep
 Name="Sub-step3"
>
<Expectations>
<Expectation
 Kind="Instantaneous"
 DeadLine="1"
>Kernel.MA.MA != EMPTY</Expectation><Expectation
 Kind="Instantaneous"
 DeadLine="1"
>Kernel.MA.MA.EndSection.Length == 1000.0</Expectation><Expectation
 Kind="Instantaneous"
 DeadLine="1"
>Kernel.MA.MA.TargetSpeed == 40.0</Expectation><Expectation
 Kind="Instantaneous"
 DeadLine="1"
>Kernel.MA.MA.TargetSpeedTimeOut == 250.0</Expectation><Expectation
 Kind="Instantaneous"
 DeadLine="1"
>Kernel.MA.MA.ReferenceBG == 9618</Expectation><Expectation
 Kind="Instantaneous"
 DeadLine="1"
>(COUNT Kernel.MA.MA.Sections) == 1</Expectation><Expectation
 Kind="Instantaneous"
 DeadLine="1"
>(FIRST_IN Kernel.MA.MA.Sections).Length == 700.0</Expectation><Expectation
 Kind="Instantaneous"
 DeadLine="1"
>Kernel.SpeedAndDistanceMonitoring.ReleaseSpeedSupervision.ReleaseSpeed == 25.0</Expectation><Expectation
 Kind="Instantaneous"
 DeadLine="1"
>Kernel.MA.MA.EndSection.DangerPoint.Distance == 1200.0</Expectation><Expectation
 Kind="Instantaneous"
 DeadLine="1"
>Kernel.MA.MA.EndSection.DangerPoint.ReleaseSpeed == 25.0</Expectation></Expectations>
</SubStep></SubSteps>
</Step><Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 Name="Step4 - BTM.Message + someNEWinformation"
>
<SubSteps>
<SubStep
 Name="SubStep1"
>
<Actions>
<Action>BTM.LRBG &lt;- BTM.BaliseGroup
{
    NID =&gt; 9619,
    Orientation =&gt; Orientation.Nominal,
    Position =&gt; BTM.Position
    {
        OverReadingAmountOdo =&gt; 29.0,
        Position =&gt; 3000.0,
        UnderReadingAmountOdo =&gt; 35.0
    }
}</Action></Actions>
<Expectations>
<Expectation
 Kind="Instantaneous"
 DeadLine="1"
>Kernel.MA.MA != EMPTY</Expectation></Expectations>
</SubStep><SubStep
 Name="Sub-step2"
>
<Actions>
<Action>BTM.Message &lt;- Messages.EUROBALISE.Message
{
    Q_UPDOWN=&gt;Messages.Q_UPDOWN.Up_link_telegram,
    M_VERSION=&gt;1,
    Q_MEDIA=&gt;Messages.Q_MEDIA.Balise,
    N_PIG=&gt;8,
    N_TOTAL=&gt;0,
    M_DUP=&gt;Messages.M_DUP.No_duplicates,
    M_MCOUNT=&gt;4,
    NID_C=&gt;140,
    NID_BG=&gt;9619,
    Q_LINK=&gt;Messages.Q_LINK.Linked,
    Sequence1=&gt;
    [
        Messages.EUROBALISE.SubStructure1
        {
            TRACK_TO_TRAIN=&gt;Messages.PACKET.TRACK_TO_TRAIN.Message
            {
                LEVEL_2_3_MOVEMENT_AUTHORITY=&gt;Messages.PACKET.TRACK_TO_TRAIN.LEVEL_2_3_MOVEMENT_AUTHORITY.Message
                {
                    NID_PACKET=&gt;15,
                    Q_DIR=&gt;Messages.Q_DIR.Nominal,
                    L_PACKET=&gt;400,
                    Q_SCALE=&gt;Messages.Q_SCALE._10_cm_scaleC,
                    V_LOA=&gt;10,
                    T_LOA=&gt;200,
                    N_ITER=&gt;2,
                    Sequence1=&gt;[
                    Messages.PACKET.TRACK_TO_TRAIN.LEVEL_2_3_MOVEMENT_AUTHORITY.SubStructure1
                    {
                       L_SECTION =&gt; 9000,
                       Q_SECTIONTIMER =&gt; Messages.Q_SECTIONTIMER.No_Section_Timer_information
                    },
                    Messages.PACKET.TRACK_TO_TRAIN.LEVEL_2_3_MOVEMENT_AUTHORITY.SubStructure1
                    {
                       L_SECTION =&gt; 11000,
                       Q_SECTIONTIMER =&gt; Messages.Q_SECTIONTIMER.No_Section_Timer_information
                    }],
                    L_ENDSECTION=&gt;12000,
                    Q_SECTIONTIMER=&gt;Messages.Q_SECTIONTIMER.No_Section_Timer_information,
                    Q_ENDTIMER=&gt;Messages.Q_ENDTIMER.No_End_section_timer_information,
                    Q_DANGERPOINT=&gt;Messages.Q_DANGERPOINT.Danger_point_information_to_follow,
                    D_DP=&gt;13000,
                    V_RELEASEDP=&gt;10,
                    Q_OVERLAP=&gt;Messages.Q_OVERLAP.No_overlap_information
                }
            }
        }
    ]
}</Action></Actions>
</SubStep><SubStep
 Name="Sub-step3"
>
<Expectations>
<Expectation
 Kind="Instantaneous"
 DeadLine="1"
>Kernel.MA.MA != EMPTY</Expectation><Expectation
 Kind="Instantaneous"
 DeadLine="1"
>Kernel.MA.MA.EndSection.Length == 1200.0</Expectation><Expectation
 Kind="Instantaneous"
 DeadLine="1"
>Kernel.MA.MA.TargetSpeed == 50.0</Expectation><Expectation
 Kind="Instantaneous"
 DeadLine="1"
>Kernel.MA.MA.TargetSpeedTimeOut == 200.0</Expectation><Expectation
 Kind="Instantaneous"
 DeadLine="1"
>Kernel.MA.MA.ReferenceBG == 9619</Expectation><Expectation
 Kind="Instantaneous"
 DeadLine="1"
>(COUNT Kernel.MA.MA.Sections) == 2</Expectation><Expectation
 Kind="Instantaneous"
 DeadLine="1"
>(LAST_IN Kernel.MA.MA.Sections).Length == 1100.0</Expectation><Expectation
 Kind="Instantaneous"
 DeadLine="1"
>(FIRST_IN Kernel.MA.MA.Sections).Length == 900.0</Expectation><Expectation
 Kind="Instantaneous"
 DeadLine="1"
>Kernel.SpeedAndDistanceMonitoring.ReleaseSpeedSupervision.ReleaseSpeed == 50.0</Expectation><Expectation
 Kind="Instantaneous"
 DeadLine="1"
>Kernel.MA.MA.EndSection.DangerPoint.Distance == 1300.0</Expectation><Expectation
 Kind="Instantaneous"
 DeadLine="1"
>Kernel.MA.MA.EndSection.DangerPoint.ReleaseSpeed == 50.0</Expectation></Expectations>
</SubStep></SubSteps>
</Step><Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 Name="Step5 - BTM.Message + someMORENEWinformation"
>
<Comment>We separately check for the overlap-fields here, so there is no interference with Kernel.SpeedAndDistanceMonitoring.ReleaseSpeedSupervision.ReleaseSpeed #morido, 13/11/20</Comment>
<SubSteps>
<SubStep
 Name="SubStep1"
>
<Actions>
<Action>BTM.LRBG &lt;- BTM.BaliseGroup
{
    NID =&gt; 9620,
    Orientation =&gt; Orientation.Nominal,
    Position =&gt; BTM.Position
    {
        OverReadingAmountOdo =&gt; 29.0,
        Position =&gt; 3000.0,
        UnderReadingAmountOdo =&gt; 35.0
    }
}</Action></Actions>
<Expectations>
<Expectation
 Kind="Instantaneous"
 DeadLine="1"
>Kernel.MA.MA != EMPTY</Expectation></Expectations>
</SubStep><SubStep
 Name="Sub-step2"
>
<Actions>
<Action>BTM.Message &lt;- Messages.EUROBALISE.Message
{
    Q_UPDOWN=&gt;Messages.Q_UPDOWN.Up_link_telegram,
    M_VERSION=&gt;1,
    Q_MEDIA=&gt;Messages.Q_MEDIA.Balise,
    N_PIG=&gt;8,
    N_TOTAL=&gt;0,
    M_DUP=&gt;Messages.M_DUP.No_duplicates,
    M_MCOUNT=&gt;4,
    NID_C=&gt;140,
    NID_BG=&gt;9620,
    Q_LINK=&gt;Messages.Q_LINK.Linked,
    Sequence1=&gt;
    [
        Messages.EUROBALISE.SubStructure1
        {
            TRACK_TO_TRAIN=&gt;Messages.PACKET.TRACK_TO_TRAIN.Message
            {
                LEVEL_2_3_MOVEMENT_AUTHORITY=&gt;Messages.PACKET.TRACK_TO_TRAIN.LEVEL_2_3_MOVEMENT_AUTHORITY.Message
                {
                    NID_PACKET=&gt;15,
                    Q_DIR=&gt;Messages.Q_DIR.Nominal,
                    L_PACKET=&gt;400,
                    Q_SCALE=&gt;Messages.Q_SCALE._10_cm_scaleC,
                    V_LOA=&gt;10,
                    T_LOA=&gt;200,
                    N_ITER=&gt;2,
                    Sequence1=&gt;[
                    Messages.PACKET.TRACK_TO_TRAIN.LEVEL_2_3_MOVEMENT_AUTHORITY.SubStructure1
                    {
                       L_SECTION =&gt; 8000,
                       Q_SECTIONTIMER =&gt; Messages.Q_SECTIONTIMER.No_Section_Timer_information
                    },
                    Messages.PACKET.TRACK_TO_TRAIN.LEVEL_2_3_MOVEMENT_AUTHORITY.SubStructure1
                    {
                       L_SECTION =&gt; 7000,
                       Q_SECTIONTIMER =&gt; Messages.Q_SECTIONTIMER.No_Section_Timer_information
                    }],
                    L_ENDSECTION=&gt;12000,
                    Q_SECTIONTIMER=&gt;Messages.Q_SECTIONTIMER.No_Section_Timer_information,
                    Q_ENDTIMER=&gt;Messages.Q_ENDTIMER.No_End_section_timer_information,
                    Q_DANGERPOINT=&gt;Messages.Q_DANGERPOINT.No_danger_point_information,
                    Q_OVERLAP=&gt;Messages.Q_OVERLAP.Overlap_information_to_follow,
                    D_STARTOL=&gt;1000,
                    T_OL=&gt;40,
                    D_OL=&gt;11500,
                    V_RELEASEOL=&gt;6
                }
            }
        }
    ]
}</Action></Actions>
</SubStep><SubStep
 Name="Sub-step3"
>
<Expectations>
<Expectation
 Kind="Instantaneous"
 DeadLine="1"
>(COUNT Kernel.MA.MA.Sections) == 2</Expectation><Expectation
 Kind="Instantaneous"
 DeadLine="1"
>(FIRST_IN Kernel.MA.MA.Sections).Length == 800.0</Expectation><Expectation
 Kind="Instantaneous"
 DeadLine="1"
>(LAST_IN Kernel.MA.MA.Sections).Length == 700.0</Expectation><Expectation
 Kind="Instantaneous"
 DeadLine="1"
>Kernel.MA.MA.EndSection.Overlap.Distance == 1150.0</Expectation><Expectation
 Kind="Instantaneous"
 DeadLine="1"
>Kernel.MA.MA.EndSection.Overlap.ReleaseSpeed == 30.0</Expectation><Expectation
 Kind="Instantaneous"
 DeadLine="1"
>Kernel.MA.MA.EndSection.Overlap.TimeOut == 40.0</Expectation><Expectation
 Kind="Instantaneous"
 DeadLine="1"
>Kernel.MA.MA.EndSection.Overlap.TimerDistance == 100.0</Expectation></Expectations>
</SubStep></SubSteps>
</Step></Steps>
</TestCase><TestCase
 Implemented="TRUE"
 Name="Overwrite existing information L23 + Euroradio"
>
<ReqRef
 Id="5aa1fa8e-68c3-4f4f-83d8-b6d2b462a508"
>
</ReqRef><ReqRef
 Id="76a67f0f-9afc-46c4-80b9-b7a211017100"
>
</ReqRef><Comment>We separately check for the overlap-fields here, so there is no interference with Kernel.SpeedAndDistanceMonitoring.ReleaseSpeedSupervision.ReleaseSpeed #morido, 13/11/20</Comment>
<Steps>
<Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 Name="Step1 - Setup"
>
<SubSteps>
<SubStep
 Name="Sub-step1 - Initialize test environment"
>
<Actions>
<Action>Kernel.InitializeTestEnvironment(

)</Action></Actions>
</SubStep><SubStep
 Name="Sub-step2 - Initialize elements to accept MA"
>
<Actions>
<Action>Kernel.InitializeElementsForMA()</Action></Actions>
</SubStep></SubSteps>
</Step><Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 Name="Step2 - Mode OS + Level2"
>
<SubSteps>
<SubStep
 Name="SubStep1"
>
<Actions>
<Action>Kernel.Level.DataState &lt;- Default.DataState.Valid</Action><Action>Kernel.Level.Value &lt;- Default.Level.L2</Action><Action>Kernel.Mode &lt;- Default.Mode.OS</Action><Action>Kernel.MA.MA &lt;- EMPTY</Action></Actions>
</SubStep><SubStep
 Name="Sub-step2"
>
<Expectations>
<Expectation
 Kind="Instantaneous"
 DeadLine="1"
>Kernel.Infill.Data == EMPTY</Expectation><Expectation
 Kind="Instantaneous"
 DeadLine="1"
>Kernel.MA.MA == EMPTY</Expectation></Expectations>
</SubStep></SubSteps>
</Step><Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 Name="Step3 - EURORADIO.Message + someinformation"
>
<SubSteps>
<SubStep
 Name="SubStep1"
>
<Actions>
<Action>BTM.LRBG &lt;- BTM.BaliseGroup
{
    NID =&gt; 9618,
    Orientation =&gt; Orientation.Nominal,
    Position =&gt; BTM.Position
    {
        OverReadingAmountOdo =&gt; 29.0,
        Position =&gt; 2000.0,
        UnderReadingAmountOdo =&gt; 35.0
    }
}</Action><Action>Odometry.Accuracy &lt;- Odometry.OdometerAccuracy
{
    D_ura =&gt; 54.0,
    D_ora =&gt; 51.0,
    V_ora =&gt; 0.0,
    V_ura =&gt; 0.0
}</Action></Actions>
</SubStep><SubStep
 Name="Sub-step2"
>
<Actions>
<Action>EURORADIO.EuroradioMessageIn  &lt;- Messages.MESSAGE.TRACK_TO_TRAIN.Message

{
    MOVEMENT_AUTHORITY =&gt; Messages.MESSAGE.TRACK_TO_TRAIN.MOVEMENT_AUTHORITY.Message
    {

    NID_MESSAGE =&gt; 0,
    L_MESSAGE =&gt; 0,
    T_TRAIN =&gt; 0,
    M_ACK =&gt; Messages.M_ACK.No_acknowledgement_required,
    NID_LRBG =&gt; 9627,
    LEVEL_2_3_MOVEMENT_AUTHORITY =&gt; Messages.PACKET.TRACK_TO_TRAIN.LEVEL_2_3_MOVEMENT_AUTHORITY.Message

      {
        NID_PACKET =&gt; 15,
        Q_DIR =&gt; Messages.Q_DIR.Nominal,
        L_PACKET =&gt; 0,
        Q_SCALE =&gt; Messages.Q_SCALE._10_cm_scaleC,
        V_LOA =&gt; 8,
        T_LOA =&gt; 250,
        N_ITER =&gt; 1,
        Sequence1 =&gt; [

                 Messages.PACKET.TRACK_TO_TRAIN.LEVEL_2_3_MOVEMENT_AUTHORITY.SubStructure1
                 {
                   L_SECTION =&gt; 7000,
                   Q_SECTIONTIMER =&gt; Messages.Q_SECTIONTIMER.No_Section_Timer_information
                 }
                                ],
        L_ENDSECTION =&gt; 10000,
        Q_SECTIONTIMER =&gt; Messages.Q_SECTIONTIMER.No_Section_Timer_information,
        Q_ENDTIMER =&gt; Messages.Q_ENDTIMER.No_End_section_timer_information,
        Q_DANGERPOINT=&gt;Messages.Q_DANGERPOINT.Danger_point_information_to_follow,
        D_DP=&gt;12000,
        V_RELEASEDP=&gt;5,
        Q_OVERLAP =&gt; Messages.Q_OVERLAP.No_overlap_information
       },
    Sequence1 =&gt; []
}



  
            
}</Action></Actions>
</SubStep><SubStep
 Name="Sub-step3"
>
<Expectations>
<Expectation
 Kind="Instantaneous"
 DeadLine="1"
>Kernel.MA.MA != EMPTY</Expectation><Expectation
 Kind="Instantaneous"
 DeadLine="1"
>Kernel.MA.MA.EndSection.Length == 1000.0</Expectation><Expectation
 Kind="Instantaneous"
 DeadLine="1"
>Kernel.MA.MA.TargetSpeed == 40.0</Expectation><Expectation
 Kind="Instantaneous"
 DeadLine="1"
>Kernel.MA.MA.TargetSpeedTimeOut == 250.0</Expectation><Expectation
 Kind="Instantaneous"
 DeadLine="1"
>Kernel.MA.MA.ReferenceBG == 9627</Expectation><Expectation
 Kind="Instantaneous"
 DeadLine="1"
>(COUNT Kernel.MA.MA.Sections) == 1</Expectation><Expectation
 Kind="Instantaneous"
 DeadLine="1"
>(FIRST_IN Kernel.MA.MA.Sections).Length == 700.0</Expectation><Expectation
 Kind="Instantaneous"
 DeadLine="1"
>Kernel.SpeedAndDistanceMonitoring.ReleaseSpeedSupervision.ReleaseSpeed == 25.0</Expectation><Expectation
 Kind="Instantaneous"
 DeadLine="1"
>Kernel.MA.MA.EndSection.DangerPoint.Distance == 1200.0</Expectation><Expectation
 Kind="Instantaneous"
 DeadLine="1"
>Kernel.MA.MA.EndSection.DangerPoint.ReleaseSpeed == 25.0</Expectation></Expectations>
</SubStep></SubSteps>
</Step><Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 Name="Step4 - EURORADIO.Message + someNEWinformation"
>
<SubSteps>
<SubStep
 Name="SubStep1"
>
<Actions>
<Action>BTM.LRBG &lt;- BTM.BaliseGroup
{
    NID =&gt; 9619,
    Orientation =&gt; Orientation.Nominal,
    Position =&gt; BTM.Position
    {
        OverReadingAmountOdo =&gt; 29.0,
        Position =&gt; 3000.0,
        UnderReadingAmountOdo =&gt; 35.0
    }
}</Action></Actions>
<Expectations>
<Expectation
 Kind="Instantaneous"
 DeadLine="1"
>Kernel.MA.MA != EMPTY</Expectation></Expectations>
</SubStep><SubStep
 Name="Sub-step2"
>
<Actions>
<Action>EURORADIO.EuroradioMessageIn  &lt;- Messages.MESSAGE.TRACK_TO_TRAIN.Message

{
    MOVEMENT_AUTHORITY =&gt; Messages.MESSAGE.TRACK_TO_TRAIN.MOVEMENT_AUTHORITY.Message
    {

    NID_MESSAGE =&gt; 0,
    L_MESSAGE =&gt; 0,
    T_TRAIN =&gt; 0,
    M_ACK =&gt; Messages.M_ACK.No_acknowledgement_required,
    NID_LRBG =&gt; 9628,
    LEVEL_2_3_MOVEMENT_AUTHORITY =&gt; Messages.PACKET.TRACK_TO_TRAIN.LEVEL_2_3_MOVEMENT_AUTHORITY.Message

      {
        NID_PACKET =&gt; 15,
        Q_DIR =&gt; Messages.Q_DIR.Nominal,
        L_PACKET =&gt; 0,
        Q_SCALE =&gt; Messages.Q_SCALE._10_cm_scaleC,
        V_LOA =&gt; 10,
        T_LOA =&gt; 200,
        N_ITER =&gt; 3,
        Sequence1 =&gt; [

                 Messages.PACKET.TRACK_TO_TRAIN.LEVEL_2_3_MOVEMENT_AUTHORITY.SubStructure1
                 {
                   L_SECTION =&gt; 9000,
                   Q_SECTIONTIMER =&gt; Messages.Q_SECTIONTIMER.No_Section_Timer_information
                 },
                 Messages.PACKET.TRACK_TO_TRAIN.LEVEL_2_3_MOVEMENT_AUTHORITY.SubStructure1
                 {
                   L_SECTION =&gt; 11000,
                   Q_SECTIONTIMER =&gt; Messages.Q_SECTIONTIMER.No_Section_Timer_information
                 }

                                ],
        L_ENDSECTION =&gt; 12000,
        Q_SECTIONTIMER =&gt; Messages.Q_SECTIONTIMER.No_Section_Timer_information,
        Q_ENDTIMER =&gt; Messages.Q_ENDTIMER.No_End_section_timer_information,
        Q_DANGERPOINT=&gt;Messages.Q_DANGERPOINT.Danger_point_information_to_follow,
        D_DP=&gt;13000,
        V_RELEASEDP=&gt;10,
        Q_OVERLAP =&gt; Messages.Q_OVERLAP.No_overlap_information
       },
    Sequence1 =&gt; []
}



  
            
}</Action></Actions>
</SubStep><SubStep
 Name="Sub-step3"
>
<Expectations>
<Expectation
 Kind="Instantaneous"
 DeadLine="1"
>Kernel.MA.MA != EMPTY</Expectation><Expectation
 Kind="Instantaneous"
 DeadLine="1"
>Kernel.MA.MA.EndSection.Length == 1200.0</Expectation><Expectation
 Kind="Instantaneous"
 DeadLine="1"
>Kernel.MA.MA.TargetSpeed == 50.0</Expectation><Expectation
 Kind="Instantaneous"
 DeadLine="1"
>Kernel.MA.MA.TargetSpeedTimeOut == 200.0</Expectation><Expectation
 Kind="Instantaneous"
 DeadLine="1"
>Kernel.MA.MA.ReferenceBG == 9628</Expectation><Expectation
 Kind="Instantaneous"
 DeadLine="1"
>(COUNT Kernel.MA.MA.Sections) == 2</Expectation><Expectation
 Kind="Instantaneous"
 DeadLine="1"
>(LAST_IN Kernel.MA.MA.Sections).Length == 1100.0</Expectation><Expectation
 Kind="Instantaneous"
 DeadLine="1"
>(FIRST_IN Kernel.MA.MA.Sections).Length == 900.0</Expectation><Expectation
 Kind="Instantaneous"
 DeadLine="1"
>Kernel.SpeedAndDistanceMonitoring.ReleaseSpeedSupervision.ReleaseSpeed == 50.0</Expectation><Expectation
 Kind="Instantaneous"
 DeadLine="1"
>Kernel.MA.MA.EndSection.DangerPoint.Distance == 1300.0</Expectation><Expectation
 Kind="Instantaneous"
 DeadLine="1"
>Kernel.MA.MA.EndSection.DangerPoint.ReleaseSpeed == 50.0</Expectation></Expectations>
</SubStep></SubSteps>
</Step><Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 Name="Step5 - EURORADIO.Message + someMORENEWinformation"
>
<SubSteps>
<SubStep
 Name="SubStep1"
>
<Actions>
<Action>BTM.LRBG &lt;- BTM.BaliseGroup
{
    NID =&gt; 9620,
    Orientation =&gt; Orientation.Nominal,
    Position =&gt; BTM.Position
    {
        OverReadingAmountOdo =&gt; 29.0,
        Position =&gt; 3000.0,
        UnderReadingAmountOdo =&gt; 35.0
    }
}</Action></Actions>
<Expectations>
<Expectation
 Kind="Instantaneous"
 DeadLine="1"
>Kernel.MA.MA != EMPTY</Expectation></Expectations>
</SubStep><SubStep
 Name="Sub-step2"
>
<Actions>
<Action>EURORADIO.EuroradioMessageIn  &lt;- Messages.MESSAGE.TRACK_TO_TRAIN.Message

{
    MOVEMENT_AUTHORITY =&gt; Messages.MESSAGE.TRACK_TO_TRAIN.MOVEMENT_AUTHORITY.Message
    {

    NID_MESSAGE =&gt; 0,
    L_MESSAGE =&gt; 0,
    T_TRAIN =&gt; 0,
    M_ACK =&gt; Messages.M_ACK.No_acknowledgement_required,
    NID_LRBG =&gt; 9628,
    LEVEL_2_3_MOVEMENT_AUTHORITY =&gt; Messages.PACKET.TRACK_TO_TRAIN.LEVEL_2_3_MOVEMENT_AUTHORITY.Message

      {
        NID_PACKET =&gt; 15,
        Q_DIR =&gt; Messages.Q_DIR.Nominal,
        L_PACKET =&gt; 0,
        Q_SCALE =&gt; Messages.Q_SCALE._10_cm_scaleC,
        V_LOA =&gt; 10,
        T_LOA =&gt; 200,
        N_ITER =&gt; 3,
        Sequence1 =&gt; [

                 Messages.PACKET.TRACK_TO_TRAIN.LEVEL_2_3_MOVEMENT_AUTHORITY.SubStructure1
                 {
                   L_SECTION =&gt; 8000,
                   Q_SECTIONTIMER =&gt; Messages.Q_SECTIONTIMER.No_Section_Timer_information
                 },
                 Messages.PACKET.TRACK_TO_TRAIN.LEVEL_2_3_MOVEMENT_AUTHORITY.SubStructure1
                 {
                   L_SECTION =&gt; 7000,
                   Q_SECTIONTIMER =&gt; Messages.Q_SECTIONTIMER.No_Section_Timer_information
                 }

                                ],
        L_ENDSECTION =&gt; 12000,
        Q_SECTIONTIMER =&gt; Messages.Q_SECTIONTIMER.No_Section_Timer_information,
        Q_ENDTIMER =&gt; Messages.Q_ENDTIMER.No_End_section_timer_information,
        Q_DANGERPOINT=&gt;Messages.Q_DANGERPOINT.No_danger_point_information,
        Q_OVERLAP =&gt; Messages.Q_OVERLAP.Overlap_information_to_follow,
        D_STARTOL=&gt;1000,
        T_OL=&gt;40,
        D_OL=&gt;11500,
        V_RELEASEOL=&gt;6
       },
    Sequence1 =&gt; []
}



  
            
}</Action></Actions>
</SubStep><SubStep
 Name="Sub-step3"
>
<Expectations>
<Expectation
 Kind="Instantaneous"
 DeadLine="1"
>(COUNT Kernel.MA.MA.Sections) == 2</Expectation><Expectation
 Kind="Instantaneous"
 DeadLine="1"
>(FIRST_IN Kernel.MA.MA.Sections).Length == 800.0</Expectation><Expectation
 Kind="Instantaneous"
 DeadLine="1"
>(LAST_IN Kernel.MA.MA.Sections).Length == 700.0</Expectation><Expectation
 Kind="Instantaneous"
 DeadLine="1"
>Kernel.MA.MA.EndSection.Overlap.Distance == 1150.0</Expectation><Expectation
 Kind="Instantaneous"
 DeadLine="1"
>Kernel.MA.MA.EndSection.Overlap.ReleaseSpeed == 30.0</Expectation><Expectation
 Kind="Instantaneous"
 DeadLine="1"
>Kernel.MA.MA.EndSection.Overlap.TimeOut == 40.0</Expectation><Expectation
 Kind="Instantaneous"
 DeadLine="1"
>Kernel.MA.MA.EndSection.Overlap.TimerDistance == 100.0</Expectation></Expectations>
</SubStep></SubSteps>
</Step></Steps>
</TestCase></TestCases>
</SubSequence></SubSequences>
</Frame>
