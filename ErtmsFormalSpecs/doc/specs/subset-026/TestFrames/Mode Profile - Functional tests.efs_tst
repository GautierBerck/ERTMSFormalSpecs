<Frame
 CycleDuration="Kernel.CycleDuration"
 Name="Mode Profile - Functional tests"
>
<SubSequences>
<SubSequence
 D_LRBG=""
 Level=""
 Mode=""
 NID_LRBG=""
 Q_DIRLRBG=""
 Q_DIRTRAIN=""
 Q_DLRBG=""
 RBC_ID=""
 RBCPhone=""
 Name="Beginning/End of ModeProfile relates to Max/Min SafeFrontEnd"
>
<TestCases>
<TestCase
 Feature="0"
 Case="0"
 Implemented="TRUE"
 Name="Beginning/End of ModeProfile relates to Max/Min SafeFrontEnd"
>
<ReqRef
 Id="3b16e285-2513-4123-a986-2b50cf27f60f"
>
</ReqRef><ReqRef
 Id="c3a0339b-08aa-4713-aace-4e545d160b65"
>
</ReqRef><Steps>
<Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 TranslationRequired="FALSE"
 Name="Step1 - Setup"
>
<SubSteps>
<SubStep
 Name="Sub-step1"
>
<Actions>
<Action>Kernel.InitializeTestEnvironment()</Action></Actions>
</SubStep></SubSteps>
</Step><Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 TranslationRequired="FALSE"
 Name="Step2 - Level and PreviousMode received"
>
<SubSteps>
<SubStep
 Name="Sub-step1"
>
<Actions>
<Action>Kernel.Level.DataState &lt;- Default.DataState.Valid</Action><Action>Kernel.Level.Value &lt;- Default.Level.L1</Action><Action>Kernel.Mode &lt;- Default.Mode.SR</Action></Actions>
<Expectations>
<Expectation
 Kind="Instantaneous"
 DeadLine="1"
>Kernel.Mode == Default.Mode.SR</Expectation></Expectations>
</SubStep></SubSteps>
</Step><Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 TranslationRequired="FALSE"
 Name="Step3 - LS ModeProfile and MA received"
>
<SubSteps>
<SubStep
 Name="Sub-step1"
>
<Actions>
<Action>INSERT Kernel.MA.ModeProfile.ModeProfile 
{ 
    Distance=&gt;30.0,
    Length=&gt;200.0,
    Mode=&gt;Default.Mode.ModeProfile.LS  
}
IN Kernel.MA.ModeProfile.Profile</Action><Action>Kernel.MA.MA &lt;- Kernel.MA.MovementAuthority
{
    TargetSpeed =&gt; 0.0,
    Sections =&gt; [],
    EndSection =&gt;Kernel.MA.EndSection
{
        EndSectionTimeOut =&gt; Kernel.MA.SectionTimeOut
       {
            TimeOut =&gt; 0.0,
            Distance =&gt; 1000.0
        },
        TimeOut =&gt; Kernel.MA.SectionTimeOut
        {
            TimeOut =&gt; 10.0,
            Distance =&gt; 1000.0
        },
        Length =&gt; 1000.0,
        DangerPoint =&gt; Kernel.MA.DangerPoint
        {
            Distance =&gt;10.0,
            ReleaseSpeed =&gt; 0.0
        },
        Overlap =&gt; Kernel.MA.Overlap
      {
            Distance =&gt; 0.0,
            TimerDistance =&gt; 0.0,
            ReleaseSpeed =&gt; 0.0,
            TimeOut =&gt; 0.0
        }
    },
    TargetSpeedTimeOut =&gt; 0.0,
    ReferenceBG =&gt; 0,
    ReferenceBGLocation =&gt; 0.0
}</Action></Actions>
<Expectations>
<Expectation
 Kind="Instantaneous"
 DeadLine="1"
>Kernel.Mode == Default.Mode.SR</Expectation><Expectation
 Kind="Instantaneous"
 DeadLine="1"
>Kernel.TrainPosition.FrontEndPosition(
    PointOfInterest=&gt;DistanceInterval.Min
) == -16.0</Expectation><Expectation
 Kind="Instantaneous"
 DeadLine="1"
>Kernel.TrainPosition.FrontEndPosition(
    PointOfInterest=&gt;DistanceInterval.Max
) == 13.0</Expectation></Expectations>
</SubStep></SubSteps>
</Step><Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 TranslationRequired="FALSE"
 Name="Step4 - Max SafeFrontEnd Before LS ModeProfile"
>
<SubSteps>
<SubStep
 Name="Sub-step1"
>
<Expectations>
<Expectation
 Kind="Instantaneous"
 DeadLine="1"
>Kernel.Mode != Default.Mode.LS
AND 
Kernel.TrainPosition.FrontEndPosition(
    PointOfInterest=&gt;DistanceInterval.Max
) == 13.0</Expectation></Expectations>
</SubStep></SubSteps>
</Step><Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 TranslationRequired="FALSE"
 Name="Step5 - Beginning of LS Mode Profile"
>
<SubSteps>
<SubStep
 Name="Sub-step1"
>
<Actions>
<Action>Odometry.NominalDistance &lt;- 167.0 </Action></Actions>
<Expectations>
<Expectation
 Kind="Instantaneous"
 DeadLine="1"
>Kernel.Mode == Default.Mode.LS
AND 
Kernel.TrainPosition.FrontEndPosition(
    PointOfInterest=&gt;DistanceInterval.Max
) == 30.0</Expectation></Expectations>
</SubStep></SubSteps>
</Step><Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 TranslationRequired="FALSE"
 Name="Step6 - Max SafeFrontEnd After LS ModeProfile"
>
<SubSteps>
<SubStep
 Name="Sub-step1"
>
<Actions>
<Action>Odometry.NominalDistance &lt;- 170.0</Action></Actions>
<Expectations>
<Expectation
 Kind="Instantaneous"
 DeadLine="1"
>Kernel.Mode == Default.Mode.LS
AND 
Kernel.TrainPosition.FrontEndPosition(
    PointOfInterest=&gt;DistanceInterval.Max
) == 33.0</Expectation></Expectations>
</SubStep></SubSteps>
</Step><Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 TranslationRequired="FALSE"
 Name="Step7 - Min SafeFrontEnd Before Exit LSModeProfile"
>
<SubSteps>
<SubStep
 Name="Sub-step1"
>
<Actions>
<Action>Odometry.NominalDistance &lt;- 396.0</Action></Actions>
<Expectations>
<Expectation
 Kind="Instantaneous"
 DeadLine="1"
>Kernel.Mode == Default.Mode.LS
AND 
Kernel.TrainPosition.FrontEndPosition(
    PointOfInterest=&gt;DistanceInterval.Min
) == 230.0</Expectation></Expectations>
</SubStep></SubSteps>
</Step><Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 TranslationRequired="FALSE"
 Name="Step8 - Min SafeFrontEnd After Exit LS ModeProfile"
>
<SubSteps>
<SubStep
 Name="Sub-step1"
>
<Actions>
<Action>Odometry.NominalDistance &lt;- 397.0</Action></Actions>
<Expectations>
<Expectation
 Kind="Instantaneous"
 DeadLine="1"
>Kernel.Mode != Default.Mode.LS
AND 
Kernel.TrainPosition.FrontEndPosition(
    PointOfInterest=&gt;DistanceInterval.Min
) == 231.0</Expectation></Expectations>
</SubStep></SubSteps>
</Step></Steps>
</TestCase></TestCases>
</SubSequence><SubSequence
 D_LRBG=""
 Level=""
 Mode=""
 NID_LRBG=""
 Q_DIRLRBG=""
 Q_DIRTRAIN=""
 Q_DLRBG=""
 RBC_ID=""
 RBCPhone=""
 Name="Mode Profile LS/OS defines Entry and Length of the Mode"
>
<TestCases>
<TestCase
 Feature="0"
 Case="0"
 Implemented="TRUE"
 Name="Mode Profile OS defines Entry and Lenght of the Mode"
>
<ReqRef
 Id="b4a804d0-53f6-49e2-9897-24b3babe34bd"
>
</ReqRef><Steps>
<Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 TranslationRequired="FALSE"
 Name="Step1 - Setup"
>
<SubSteps>
<SubStep
 Name="Sub-step1"
>
<Actions>
<Action>Kernel.InitializeTestEnvironment()</Action></Actions>
</SubStep></SubSteps>
</Step><Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 TranslationRequired="FALSE"
 Name="Step2 - Mode Setup"
>
<SubSteps>
<SubStep
 Name="Sub-step1"
>
<Actions>
<Action>Kernel.Level.Value &lt;- Default.Level.L1</Action><Action>Kernel.Level.DataState &lt;- Default.DataState.Valid</Action><Action>Kernel.Mode &lt;- Default.Mode.SR</Action></Actions>
<Expectations>
<Expectation
 Kind="Instantaneous"
 DeadLine="1"
>Kernel.Mode == Default.Mode.SR</Expectation></Expectations>
</SubStep></SubSteps>
</Step><Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 TranslationRequired="FALSE"
 Name="Step3 BTM.Message Mode Profile OS Entry and Length received"
>
<SubSteps>
<SubStep
 Name="Sub-step1"
>
<Actions>
<Action>BTM.Message &lt;- Messages.EUROBALISE.Message
{
    Q_UPDOWN=&gt; Messages.Q_UPDOWN.Up_link_telegram,
    M_VERSION=&gt;1,
    Q_MEDIA=&gt;Messages.Q_MEDIA.Balise,
    N_PIG=&gt;0,
    N_TOTAL=&gt;0,
    M_DUP=&gt;Messages.M_DUP.No_duplicates,
    M_MCOUNT=&gt;4,
    NID_C=&gt;140,
    NID_BG=&gt;2124,
    Q_LINK=&gt;Messages.Q_LINK.Linked,
    Sequence1=&gt;
    [ 
       Messages.EUROBALISE.SubStructure1
        {
            TRACK_TO_TRAIN=&gt;Messages.PACKET.TRACK_TO_TRAIN.Message
            {
                MODE_PROFILE=&gt;Messages.PACKET.TRACK_TO_TRAIN.MODE_PROFILE.Message
                {
                   D_MAMODE=&gt;50,
                   L_ACKMAMODE=&gt;500,
                   L_MAMODE=&gt;200,
                   L_PACKET=&gt;0,
                   M_MAMODE=&gt; Messages.M_MAMODE.On_Sight,               
                   N_ITER=&gt;0,
                   NID_PACKET=&gt;80,
                   Q_DIR=&gt; Messages.Q_DIR.Nominal,
                   Q_MAMODE=&gt; Messages.Q_MAMODE.as_both_the_EOA_and_SvL__instead_of_the_EOA_and_SvL_given_by_the_MA,
                   Q_SCALE=&gt;Messages.Q_SCALE._1_m_scaleC,
                   V_MAMODE=&gt;1,
                   Sequence1=&gt; [] 
                }
           }
               },
     Messages.EUROBALISE.SubStructure1
        {
            TRACK_TO_TRAIN=&gt;Messages.PACKET.TRACK_TO_TRAIN.Message
            {
                 LEVEL_1_MOVEMENT_AUTHORITY=&gt;Messages.PACKET.TRACK_TO_TRAIN.LEVEL_1_MOVEMENT_AUTHORITY.Message
                {
                    NID_PACKET=&gt;12,
                    Q_DIR=&gt;Messages.Q_DIR.Nominal,
                    L_PACKET=&gt;400,
                    Q_SCALE=&gt;Messages.Q_SCALE._1_m_scaleC,
                    V_MAIN=&gt;16,
                    V_LOA=&gt;8,
                    T_LOA=&gt;200,
                    N_ITER=&gt;0,
                    Sequence1=&gt;[],
                    L_ENDSECTION=&gt;1000,
                    Q_SECTIONTIMER=&gt;Messages.Q_SECTIONTIMER.No_Section_Timer_information,
                    T_SECTIONTIMER=&gt;0,
                    D_SECTIONTIMERSTOPLOC=&gt;0,
                    Q_ENDTIMER=&gt;Messages.Q_ENDTIMER.No_End_section_timer_information,
                    T_ENDTIMER=&gt;0,
                    D_ENDTIMERSTARTLOC=&gt;0,
                    Q_DANGERPOINT=&gt;Messages.Q_DANGERPOINT.Danger_point_information_to_follow,
                    D_DP=&gt;12000,
                    V_RELEASEDP=&gt;5,
                    Q_OVERLAP=&gt;Messages.Q_OVERLAP.No_overlap_information,
                    D_STARTOL=&gt;0,
                    T_OL=&gt;0,
                    D_OL=&gt;0,
                    V_RELEASEOL=&gt;0
                }
            }
         }
                           ]
}</Action></Actions>
</SubStep></SubSteps>
</Step><Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 TranslationRequired="FALSE"
 Name="Step4 - Data Check"
>
<SubSteps>
<SubStep
 Name="Sub-step1"
>
<Expectations>
<Expectation
 Kind="Instantaneous"
 DeadLine="1"
>(FIRST_IN Kernel.MA.ModeProfile.Profile).Length == 200.0</Expectation><Expectation
 Kind="Instantaneous"
 DeadLine="1"
>(FIRST_IN Kernel.MA.ModeProfile.Profile).Distance == 50.0</Expectation><Expectation
 Kind="Instantaneous"
 DeadLine="1"
>(FIRST_IN Kernel.MA.ModeProfile.Profile).Mode == Mode.ModeProfile.OS</Expectation></Expectations>
</SubStep></SubSteps>
</Step></Steps>
</TestCase><TestCase
 Feature="0"
 Case="0"
 Implemented="TRUE"
 Name="Mode Profile LS defines Entry and Lenght of the Mode"
>
<ReqRef
 Id="b4a804d0-53f6-49e2-9897-24b3babe34bd"
>
</ReqRef><Steps>
<Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 TranslationRequired="FALSE"
 Name="Step1 - Mode Setup"
>
<SubSteps>
<SubStep
 Name="Sub-step1"
>
<Actions>
<Action>Kernel.Mode &lt;- Default.Mode.SR</Action></Actions>
<Expectations>
<Expectation
 Kind="Instantaneous"
 DeadLine="1"
>Kernel.Mode == Default.Mode.SR</Expectation></Expectations>
</SubStep></SubSteps>
</Step><Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 TranslationRequired="FALSE"
 Name="Step2 BTM.Message Mode Profile LS Entry and Length received"
>
<SubSteps>
<SubStep
 Name="Sub-step1"
>
<Actions>
<Action>BTM.Message &lt;- Messages.EUROBALISE.Message
{
    Q_UPDOWN=&gt; Messages.Q_UPDOWN.Up_link_telegram,
    M_VERSION=&gt;1,
    Q_MEDIA=&gt;Messages.Q_MEDIA.Balise,
    N_PIG=&gt;0,
    N_TOTAL=&gt;0,
    M_DUP=&gt;Messages.M_DUP.No_duplicates,
    M_MCOUNT=&gt;4,
    NID_C=&gt;140,
    NID_BG=&gt;2124,
    Q_LINK=&gt;Messages.Q_LINK.Linked,
    Sequence1=&gt;
    [ 
       Messages.EUROBALISE.SubStructure1
        {
            TRACK_TO_TRAIN=&gt;Messages.PACKET.TRACK_TO_TRAIN.Message
            {
                MODE_PROFILE=&gt;Messages.PACKET.TRACK_TO_TRAIN.MODE_PROFILE.Message
                {
                   D_MAMODE=&gt;50,
                   L_ACKMAMODE=&gt;500,
                   L_MAMODE=&gt;200,
                   L_PACKET=&gt;0,
                   M_MAMODE=&gt; Messages.M_MAMODE.Limited_Supervision,               
                   N_ITER=&gt;0,
                   NID_PACKET=&gt;80,
                   Q_DIR=&gt; Messages.Q_DIR.Nominal,
                   Q_MAMODE=&gt; Messages.Q_MAMODE.as_both_the_EOA_and_SvL__instead_of_the_EOA_and_SvL_given_by_the_MA,
                   Q_SCALE=&gt;Messages.Q_SCALE._1_m_scaleC,
                   V_MAMODE=&gt;1,
                   Sequence1=&gt; [] 
                }
           }
               },
     Messages.EUROBALISE.SubStructure1
        {
            TRACK_TO_TRAIN=&gt;Messages.PACKET.TRACK_TO_TRAIN.Message
            {
                 LEVEL_1_MOVEMENT_AUTHORITY=&gt;Messages.PACKET.TRACK_TO_TRAIN.LEVEL_1_MOVEMENT_AUTHORITY.Message
                {
                    NID_PACKET=&gt;12,
                    Q_DIR=&gt;Messages.Q_DIR.Nominal,
                    L_PACKET=&gt;400,
                    Q_SCALE=&gt;Messages.Q_SCALE._1_m_scaleC,
                    V_MAIN=&gt;16,
                    V_LOA=&gt;8,
                    T_LOA=&gt;200,
                    N_ITER=&gt;0,
                    Sequence1=&gt;[],
                    L_ENDSECTION=&gt;1000,
                    Q_SECTIONTIMER=&gt;Messages.Q_SECTIONTIMER.No_Section_Timer_information,
                    T_SECTIONTIMER=&gt;0,
                    D_SECTIONTIMERSTOPLOC=&gt;0,
                    Q_ENDTIMER=&gt;Messages.Q_ENDTIMER.No_End_section_timer_information,
                    T_ENDTIMER=&gt;0,
                    D_ENDTIMERSTARTLOC=&gt;0,
                    Q_DANGERPOINT=&gt;Messages.Q_DANGERPOINT.Danger_point_information_to_follow,
                    D_DP=&gt;12000,
                    V_RELEASEDP=&gt;5,
                    Q_OVERLAP=&gt;Messages.Q_OVERLAP.No_overlap_information,
                    D_STARTOL=&gt;0,
                    T_OL=&gt;0,
                    D_OL=&gt;0,
                    V_RELEASEOL=&gt;0
                }
            }
         }
                           ]
}</Action></Actions>
</SubStep></SubSteps>
</Step><Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 TranslationRequired="FALSE"
 Name="Step3 - Data Check"
>
<SubSteps>
<SubStep
 Name="Sub-step1"
>
<Expectations>
<Expectation
 Kind="Instantaneous"
 DeadLine="1"
>(FIRST_IN Kernel.MA.ModeProfile.Profile).Length == 200.0</Expectation><Expectation
 Kind="Instantaneous"
 DeadLine="1"
>(FIRST_IN Kernel.MA.ModeProfile.Profile).Distance == 50.0</Expectation><Expectation
 Kind="Instantaneous"
 DeadLine="1"
>(FIRST_IN Kernel.MA.ModeProfile.Profile).Mode == Mode.ModeProfile.LS</Expectation></Expectations>
</SubStep></SubSteps>
</Step></Steps>
</TestCase></TestCases>
</SubSequence><SubSequence
 D_LRBG=""
 Level=""
 Mode=""
 NID_LRBG=""
 Q_DIRLRBG=""
 Q_DIRTRAIN=""
 Q_DLRBG=""
 RBC_ID=""
 RBCPhone=""
 Name="Mode Profile SH defines only Entry of the Mode"
>
<TestCases>
<TestCase
 Feature="0"
 Case="0"
 Implemented="TRUE"
 Name="Mode Profile SH defines only Entry of the Mode"
>
<ReqRef
 Id="b4a804d0-53f6-49e2-9897-24b3babe34bd"
>
</ReqRef><Steps>
<Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 TranslationRequired="FALSE"
 Name="Step1 - Setup"
>
<SubSteps>
<SubStep
 Name="Sub-step1"
>
<Actions>
<Action>Kernel.InitializeTestEnvironment()</Action></Actions>
</SubStep></SubSteps>
</Step><Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 TranslationRequired="FALSE"
 Name="Step2 - Level and Previous Mode received"
>
<SubSteps>
<SubStep
 Name="Sub-step1"
>
<Actions>
<Action>Kernel.Level.Value &lt;- Default.Level.L1</Action><Action>Kernel.Level.DataState &lt;- Default.DataState.Valid</Action><Action>Kernel.Mode &lt;- Default.Mode.SR</Action></Actions>
<Expectations>
<Expectation
 Kind="Instantaneous"
 DeadLine="1"
>Kernel.Mode == Default.Mode.SR</Expectation></Expectations>
</SubStep></SubSteps>
</Step><Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 TranslationRequired="FALSE"
 Name="Step3 BTM.Message Mode Profile SH Entry of Mode received"
>
<SubSteps>
<SubStep
 Name="Sub-step1"
>
<Actions>
<Action>BTM.Message &lt;- Messages.EUROBALISE.Message
{
    Q_UPDOWN=&gt; Messages.Q_UPDOWN.Up_link_telegram,
    M_VERSION=&gt;1,
    Q_MEDIA=&gt;Messages.Q_MEDIA.Balise,
    N_PIG=&gt;0,
    N_TOTAL=&gt;0,
    M_DUP=&gt;Messages.M_DUP.No_duplicates,
    M_MCOUNT=&gt;4,
    NID_C=&gt;140,
    NID_BG=&gt;2124,
    Q_LINK=&gt;Messages.Q_LINK.Linked,
    Sequence1=&gt;
    [ 
       Messages.EUROBALISE.SubStructure1
        {
            TRACK_TO_TRAIN=&gt;Messages.PACKET.TRACK_TO_TRAIN.Message
            {
                MODE_PROFILE=&gt;Messages.PACKET.TRACK_TO_TRAIN.MODE_PROFILE.Message
                {
                   D_MAMODE=&gt;50,
                   L_ACKMAMODE=&gt;500,
                   L_MAMODE=&gt;100,
                   L_PACKET=&gt;0,
                   M_MAMODE=&gt;   Messages.M_MAMODE.Shunting,               
                   N_ITER=&gt;0,
                   NID_PACKET=&gt;80,
                   Q_DIR=&gt; Messages.Q_DIR.Nominal,
                   Q_MAMODE=&gt; Messages.Q_MAMODE.as_both_the_EOA_and_SvL__instead_of_the_EOA_and_SvL_given_by_the_MA,
                   Q_SCALE=&gt;Messages.Q_SCALE._1_m_scaleC,
                   V_MAMODE=&gt;1,
                   Sequence1=&gt;[] 
               }
          }
      },
       Messages.EUROBALISE.SubStructure1
        {
            TRACK_TO_TRAIN=&gt;Messages.PACKET.TRACK_TO_TRAIN.Message
            {
                 LEVEL_1_MOVEMENT_AUTHORITY=&gt;Messages.PACKET.TRACK_TO_TRAIN.LEVEL_1_MOVEMENT_AUTHORITY.Message
                {
                    NID_PACKET=&gt;12,
                    Q_DIR=&gt;Messages.Q_DIR.Nominal,
                    L_PACKET=&gt;400,
                    Q_SCALE=&gt;Messages.Q_SCALE._1_m_scaleC,
                    V_MAIN=&gt;16,
                    V_LOA=&gt;8,
                    T_LOA=&gt;200,
                    N_ITER=&gt;0,
                    Sequence1=&gt;[],
                    L_ENDSECTION=&gt;1000,
                    Q_SECTIONTIMER=&gt;Messages.Q_SECTIONTIMER.No_Section_Timer_information,
                    T_SECTIONTIMER=&gt;0,
                    D_SECTIONTIMERSTOPLOC=&gt;0,
                    Q_ENDTIMER=&gt;Messages.Q_ENDTIMER.No_End_section_timer_information,
                    T_ENDTIMER=&gt;0,
                    D_ENDTIMERSTARTLOC=&gt;0,
                    Q_DANGERPOINT=&gt;Messages.Q_DANGERPOINT.Danger_point_information_to_follow,
                    D_DP=&gt;12000,
                    V_RELEASEDP=&gt;5,
                    Q_OVERLAP=&gt;Messages.Q_OVERLAP.No_overlap_information,
                    D_STARTOL=&gt;0,
                    T_OL=&gt;0,
                    D_OL=&gt;0,
                    V_RELEASEOL=&gt;0
                }
            }
         },
           Messages.EUROBALISE.SubStructure1
        {
            TRACK_TO_TRAIN=&gt;Messages.PACKET.TRACK_TO_TRAIN.Message
            {
                               LIST_OF_BALISES_FOR_SH_AREA =&gt; Messages.PACKET.TRACK_TO_TRAIN.LIST_OF_BALISES_FOR_SH_AREA.Message
                  {
                      NID_PACKET =&gt; 49,
                      Q_DIR =&gt; Messages.Q_DIR.Nominal,
                      L_PACKET =&gt; 0,
                      N_ITER =&gt; 1,
                      Sequence1 =&gt; 
                              [
                                 Messages.PACKET.TRACK_TO_TRAIN.LIST_OF_BALISES_FOR_SH_AREA.SubStructure1
                                  {
                                        NID_BG=&gt; 2124,
                                        NID_C=&gt;140,
                                        Q_NEWCOUNTRY=&gt;Messages.Q_NEWCOUNTRY.Same_country___railway_administration__no_NID_C_follows
                                    }
                              ]
                   } 
            }
         }
                ]
}</Action><Action>Odometry.NominalDistance &lt;- 250.0</Action></Actions>
</SubStep></SubSteps>
</Step><Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 TranslationRequired="FALSE"
 Name="Step4 - Data check"
>
<SubSteps>
<SubStep
 Name="Sub-step1"
>
<Expectations>
<Expectation
 Kind="Instantaneous"
 DeadLine="1"
>Kernel.Mode == Default.Mode.SH</Expectation><Expectation
 Kind="Instantaneous"
 DeadLine="1"
>(FIRST_IN Kernel.MA.ModeProfile.Profile).Length == Kernel.MA.ModeProfile.ModeProfile.Length.NA</Expectation><Expectation
 Kind="Instantaneous"
 DeadLine="1"
>(FIRST_IN Kernel.MA.ModeProfile.Profile).Distance ==  50.0</Expectation></Expectations>
</SubStep></SubSteps>
</Step></Steps>
</TestCase></TestCases>
</SubSequence><SubSequence
 D_LRBG=""
 Level=""
 Mode=""
 NID_LRBG=""
 Q_DIRLRBG=""
 Q_DIRTRAIN=""
 Q_DLRBG=""
 RBC_ID=""
 RBCPhone=""
 Name="The ModeProfile can request SH Mode"
>
<TestCases>
<TestCase
 Feature="0"
 Case="0"
 Implemented="TRUE"
 Name="SH Mode Profile received"
>
<ReqRef
 Id="cbef1165-fc33-4ac1-994e-5f8a83f5e225"
>
</ReqRef><Steps>
<Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 TranslationRequired="FALSE"
 Name="Step1 - Setup"
>
<SubSteps>
<SubStep
 Name="Sub-step1"
>
<Actions>
<Action>Kernel.InitializeTestEnvironment()</Action></Actions>
</SubStep></SubSteps>
</Step><Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 TranslationRequired="FALSE"
 Name="Step2 - ModeSR"
>
<SubSteps>
<SubStep
 Name="Sub-step1"
>
<Actions>
<Action>Kernel.Mode &lt;- Default.Mode.SR</Action></Actions>
</SubStep></SubSteps>
</Step><Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 TranslationRequired="FALSE"
 Name="Step3 - BTM.Message ModeProfileSH"
>
<SubSteps>
<SubStep
 Name="Sub-step1"
>
<Actions>
<Action>BTM.Message &lt;- Messages.EUROBALISE.Message
{
    Q_UPDOWN=&gt; Messages.Q_UPDOWN.Up_link_telegram,
    M_VERSION=&gt;1,
    Q_MEDIA=&gt;Messages.Q_MEDIA.Balise,
    N_PIG=&gt;0,
    N_TOTAL=&gt;0,
    M_DUP=&gt;Messages.M_DUP.No_duplicates,
    M_MCOUNT=&gt;4,
    NID_C=&gt;140,
    NID_BG=&gt;2124,
    Q_LINK=&gt;Messages.Q_LINK.Linked,
    Sequence1=&gt;
    [ 
       Messages.EUROBALISE.SubStructure1
        {
            TRACK_TO_TRAIN=&gt;Messages.PACKET.TRACK_TO_TRAIN.Message
            {
                MODE_PROFILE=&gt;Messages.PACKET.TRACK_TO_TRAIN.MODE_PROFILE.Message
                {
                   D_MAMODE=&gt;0,
                   L_ACKMAMODE=&gt;500,
                   L_MAMODE=&gt;100,
                   L_PACKET=&gt;0,
                   M_MAMODE=&gt;   Messages.M_MAMODE.Shunting,               
                   N_ITER=&gt;0,
                   NID_PACKET=&gt;80,
                   Q_DIR=&gt; Messages.Q_DIR.Nominal,
                   Q_MAMODE=&gt; Messages.Q_MAMODE.as_both_the_EOA_and_SvL__instead_of_the_EOA_and_SvL_given_by_the_MA,
                   Q_SCALE=&gt;Messages.Q_SCALE._1_m_scaleC,
                   V_MAMODE=&gt;1,
                   Sequence1=&gt;[] 
               }
          }
      },
       Messages.EUROBALISE.SubStructure1
        {
            TRACK_TO_TRAIN=&gt;Messages.PACKET.TRACK_TO_TRAIN.Message
            {
                 LEVEL_1_MOVEMENT_AUTHORITY=&gt;Messages.PACKET.TRACK_TO_TRAIN.LEVEL_1_MOVEMENT_AUTHORITY.Message
                {
                    NID_PACKET=&gt;12,
                    Q_DIR=&gt;Messages.Q_DIR.Nominal,
                    L_PACKET=&gt;400,
                    Q_SCALE=&gt;Messages.Q_SCALE._1_m_scaleC,
                    V_MAIN=&gt;16,
                    V_LOA=&gt;8,
                    T_LOA=&gt;200,
                    N_ITER=&gt;0,
                    Sequence1=&gt;[],
                    L_ENDSECTION=&gt;10000,
                    Q_SECTIONTIMER=&gt;Messages.Q_SECTIONTIMER.No_Section_Timer_information,
                    T_SECTIONTIMER=&gt;0,
                    D_SECTIONTIMERSTOPLOC=&gt;0,
                    Q_ENDTIMER=&gt;Messages.Q_ENDTIMER.No_End_section_timer_information,
                    T_ENDTIMER=&gt;0,
                    D_ENDTIMERSTARTLOC=&gt;0,
                    Q_DANGERPOINT=&gt;Messages.Q_DANGERPOINT.Danger_point_information_to_follow,
                    D_DP=&gt;12000,
                    V_RELEASEDP=&gt;5,
                    Q_OVERLAP=&gt;Messages.Q_OVERLAP.No_overlap_information,
                    D_STARTOL=&gt;0,
                    T_OL=&gt;0,
                    D_OL=&gt;0,
                    V_RELEASEOL=&gt;0
                }
            }
         },
           Messages.EUROBALISE.SubStructure1
        {
            TRACK_TO_TRAIN=&gt;Messages.PACKET.TRACK_TO_TRAIN.Message
            {
                               LIST_OF_BALISES_FOR_SH_AREA =&gt; Messages.PACKET.TRACK_TO_TRAIN.LIST_OF_BALISES_FOR_SH_AREA.Message
                  {
                      NID_PACKET =&gt; 49,
                      Q_DIR =&gt; Messages.Q_DIR.Nominal,
                      L_PACKET =&gt; 0,
                      N_ITER =&gt; 1,
                      Sequence1 =&gt; 
                              [
                                 Messages.PACKET.TRACK_TO_TRAIN.LIST_OF_BALISES_FOR_SH_AREA.SubStructure1
                                  {
                                        NID_BG=&gt; 2124,
                                        NID_C=&gt;140,
                                        Q_NEWCOUNTRY=&gt;Messages.Q_NEWCOUNTRY.Same_country___railway_administration__no_NID_C_follows
                                    }
                              ]
                   } 
            }
         }
                ]
}</Action><Action>Kernel.Level.Value &lt;- Default.Level.L1</Action><Action>Kernel.Level.DataState &lt;- Default.DataState.Valid</Action></Actions>
<Expectations>
<Expectation
 Kind="Instantaneous"
 DeadLine="1"
>Kernel.MA.ModeProfile.ModeProfileIsApplicable() == Boolean.True</Expectation></Expectations>
</SubStep></SubSteps>
</Step><Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 TranslationRequired="FALSE"
 Name="Step4 - Mode Check"
>
<SubSteps>
<SubStep
 Name="Sub-step1"
>
<Expectations>
<Expectation
 Kind="Instantaneous"
 DeadLine="1"
>Kernel.MA.ModeProfile.CurrentMode() == Default.Mode.ModeProfile.SH</Expectation><Expectation
 Kind="Instantaneous"
 DeadLine="1"
>Kernel.Mode == Default.Mode.SH</Expectation></Expectations>
</SubStep></SubSteps>
</Step></Steps>
</TestCase></TestCases>
</SubSequence><SubSequence
 D_LRBG=""
 Level=""
 Mode=""
 NID_LRBG=""
 Q_DIRLRBG=""
 Q_DIRTRAIN=""
 Q_DLRBG=""
 RBC_ID=""
 RBCPhone=""
 Name="On reception of a new MA ( with or without MP ) the current MP should be deleted."
>
<TestCases>
<TestCase
 Feature="0"
 Case="0"
 Implemented="TRUE"
 Name="MA without Mode Profile received"
>
<ReqRef
 Id="74a25803-8c28-4708-b506-55a76bd8bc21"
>
</ReqRef><Steps>
<Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 TranslationRequired="FALSE"
 Name="Step1 - Setup"
>
<SubSteps>
<SubStep
 Name="Sub-step1"
>
<Actions>
<Action>Kernel.InitializeTestEnvironment()</Action></Actions>
</SubStep></SubSteps>
</Step><Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 TranslationRequired="FALSE"
 Name="Step2 - MA with ModeProfile"
>
<SubSteps>
<SubStep
 Name="Sub-step1"
>
<Actions>
<Action>BTM.Message &lt;- Messages.EUROBALISE.Message
{
    Q_UPDOWN=&gt; Messages.Q_UPDOWN.Up_link_telegram,
    M_VERSION=&gt;1,
    Q_MEDIA=&gt;Messages.Q_MEDIA.Balise,
    N_PIG=&gt;0,
    N_TOTAL=&gt;0,
    M_DUP=&gt;Messages.M_DUP.No_duplicates,
    M_MCOUNT=&gt;4,
    NID_C=&gt;140,
    NID_BG=&gt;2124,
    Q_LINK=&gt;Messages.Q_LINK.Linked,
    Sequence1=&gt;
    [ 
       Messages.EUROBALISE.SubStructure1
        {
            TRACK_TO_TRAIN=&gt;Messages.PACKET.TRACK_TO_TRAIN.Message
            {
                MODE_PROFILE=&gt;Messages.PACKET.TRACK_TO_TRAIN.MODE_PROFILE.Message
                {
                   D_MAMODE=&gt;0,
                   L_ACKMAMODE=&gt;500,
                   L_MAMODE=&gt;100,
                   L_PACKET=&gt;0,
                   M_MAMODE=&gt;   Messages.M_MAMODE.Shunting,               
                   N_ITER=&gt;0,
                   NID_PACKET=&gt;80,
                   Q_DIR=&gt; Messages.Q_DIR.Nominal,
                   Q_MAMODE=&gt; Messages.Q_MAMODE.as_both_the_EOA_and_SvL__instead_of_the_EOA_and_SvL_given_by_the_MA,
                   Q_SCALE=&gt;Messages.Q_SCALE._1_m_scaleC,
                   V_MAMODE=&gt;1,
                   Sequence1=&gt;[] 
             }
          }
               },
Messages.EUROBALISE.SubStructure1
        {
            TRACK_TO_TRAIN=&gt;Messages.PACKET.TRACK_TO_TRAIN.Message
            {
                 LEVEL_1_MOVEMENT_AUTHORITY=&gt;Messages.PACKET.TRACK_TO_TRAIN.LEVEL_1_MOVEMENT_AUTHORITY.Message
                {
                    NID_PACKET=&gt;12,
                    Q_DIR=&gt;Messages.Q_DIR.Nominal,
                    L_PACKET=&gt;400,
                    Q_SCALE=&gt;Messages.Q_SCALE._1_m_scaleC,
                    V_MAIN=&gt;16,
                    V_LOA=&gt;8,
                    T_LOA=&gt;200,
                    N_ITER=&gt;0,
                    Sequence1=&gt;[],
                    L_ENDSECTION=&gt;10000,
                    Q_SECTIONTIMER=&gt;Messages.Q_SECTIONTIMER.No_Section_Timer_information,
                    T_SECTIONTIMER=&gt;0,
                    D_SECTIONTIMERSTOPLOC=&gt;0,
                    Q_ENDTIMER=&gt;Messages.Q_ENDTIMER.No_End_section_timer_information,
                    T_ENDTIMER=&gt;0,
                    D_ENDTIMERSTARTLOC=&gt;0,
                    Q_DANGERPOINT=&gt;Messages.Q_DANGERPOINT.Danger_point_information_to_follow,
                    D_DP=&gt;12000,
                    V_RELEASEDP=&gt;5,
                    Q_OVERLAP=&gt;Messages.Q_OVERLAP.No_overlap_information,
                    D_STARTOL=&gt;0,
                    T_OL=&gt;0,
                    D_OL=&gt;0,
                    V_RELEASEOL=&gt;0
                }
            }
         },
           Messages.EUROBALISE.SubStructure1
        {
            TRACK_TO_TRAIN=&gt;Messages.PACKET.TRACK_TO_TRAIN.Message
            {
                               LIST_OF_BALISES_FOR_SH_AREA =&gt; Messages.PACKET.TRACK_TO_TRAIN.LIST_OF_BALISES_FOR_SH_AREA.Message
                  {
                      NID_PACKET =&gt; 49,
                      Q_DIR =&gt; Messages.Q_DIR.Nominal,
                      L_PACKET =&gt; 0,
                      N_ITER =&gt; 1,
                      Sequence1 =&gt; 
                              [
                                 Messages.PACKET.TRACK_TO_TRAIN.LIST_OF_BALISES_FOR_SH_AREA.SubStructure1
                                  {
                                        NID_BG=&gt; 2124,
                                        Q_NEWCOUNTRY=&gt;Messages.Q_NEWCOUNTRY.Same_country___railway_administration__no_NID_C_follows,
                                        NID_C=&gt;140
                                    }
                              ]
                   } 
            }
         }
                ]
}</Action></Actions>
<Expectations>
<Expectation
 Kind="Instantaneous"
 DeadLine="1"
>Kernel.MA.ModeProfile.Profile != []</Expectation><Expectation
 Kind="Instantaneous"
 DeadLine="1"
>(FIRST_IN Kernel.MA.ModeProfile.Profile).Mode == Mode.ModeProfile.SH</Expectation></Expectations>
</SubStep></SubSteps>
</Step><Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 TranslationRequired="FALSE"
 Name="Step3 - New MA without Mode Profile"
>
<SubSteps>
<SubStep
 Name="Sub-step1"
>
<Actions>
<Action>BTM.Message &lt;- Messages.EUROBALISE.Message
{
    Q_UPDOWN=&gt; Messages.Q_UPDOWN.Up_link_telegram,
    M_VERSION=&gt;1,
    Q_MEDIA=&gt;Messages.Q_MEDIA.Balise,
    N_PIG=&gt;0,
    N_TOTAL=&gt;0,
    M_DUP=&gt;Messages.M_DUP.No_duplicates,
    M_MCOUNT=&gt;4,
    NID_C=&gt;140,
    NID_BG=&gt;2124,
    Q_LINK=&gt;Messages.Q_LINK.Linked,
    Sequence1=&gt;
    [ 
       Messages.EUROBALISE.SubStructure1
        {
            TRACK_TO_TRAIN=&gt;Messages.PACKET.TRACK_TO_TRAIN.Message
            {
                                LEVEL_1_MOVEMENT_AUTHORITY=&gt;Messages.PACKET.TRACK_TO_TRAIN.LEVEL_1_MOVEMENT_AUTHORITY.Message
                {
                    NID_PACKET=&gt;12,
                    Q_DIR=&gt;Messages.Q_DIR.Nominal,
                    L_PACKET=&gt;400,
                    Q_SCALE=&gt;Messages.Q_SCALE._1_m_scaleC,
                    V_MAIN=&gt;16,
                    V_LOA=&gt;8,
                    T_LOA=&gt;200,
                    N_ITER=&gt;0,
                    Sequence1=&gt;[],
                    L_ENDSECTION=&gt;10000,
                    Q_SECTIONTIMER=&gt;Messages.Q_SECTIONTIMER.No_Section_Timer_information,
                    T_SECTIONTIMER=&gt;0,
                    D_SECTIONTIMERSTOPLOC=&gt;0,
                    Q_ENDTIMER=&gt;Messages.Q_ENDTIMER.No_End_section_timer_information,
                    T_ENDTIMER=&gt;0,
                    D_ENDTIMERSTARTLOC=&gt;0,
                    Q_DANGERPOINT=&gt;Messages.Q_DANGERPOINT.Danger_point_information_to_follow,
                    D_DP=&gt;12000,
                    V_RELEASEDP=&gt;5,
                    Q_OVERLAP=&gt;Messages.Q_OVERLAP.No_overlap_information,
                    D_STARTOL=&gt;0,
                    T_OL=&gt;0,
                    D_OL=&gt;0,
                    V_RELEASEOL=&gt;0
                }
            }
        }             
   ]
}</Action></Actions>
</SubStep></SubSteps>
</Step><Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 TranslationRequired="FALSE"
 Name="Step4 - Data check"
>
<SubSteps>
<SubStep
 Name="Sub-step1"
>
<Expectations>
<Expectation
 Kind="Instantaneous"
 DeadLine="1"
>Kernel.MA.ModeProfile.Profile == []</Expectation></Expectations>
</SubStep></SubSteps>
</Step></Steps>
</TestCase><TestCase
 Feature="0"
 Case="0"
 Implemented="TRUE"
 Name="MA  with ModeProfile received"
>
<ReqRef
 Id="74a25803-8c28-4708-b506-55a76bd8bc21"
>
</ReqRef><Steps>
<Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 TranslationRequired="FALSE"
 Name="Step1 - MA with ModeProfile received"
>
<SubSteps>
<SubStep
 Name="Sub-step1"
>
<Actions>
<Action>BTM.Message &lt;- Messages.EUROBALISE.Message
{
    Q_UPDOWN=&gt; Messages.Q_UPDOWN.Up_link_telegram,
    M_VERSION=&gt;1,
    Q_MEDIA=&gt;Messages.Q_MEDIA.Balise,
    N_PIG=&gt;0,
    N_TOTAL=&gt;0,
    M_DUP=&gt;Messages.M_DUP.No_duplicates,
    M_MCOUNT=&gt;4,
    NID_C=&gt;140,
    NID_BG=&gt;2124,
    Q_LINK=&gt;Messages.Q_LINK.Linked,
    Sequence1=&gt;
    [ 
       Messages.EUROBALISE.SubStructure1
        {
            TRACK_TO_TRAIN=&gt;Messages.PACKET.TRACK_TO_TRAIN.Message
            {
                MODE_PROFILE=&gt;Messages.PACKET.TRACK_TO_TRAIN.MODE_PROFILE.Message
                {
                   D_MAMODE=&gt;0,
                   L_ACKMAMODE=&gt;500,
                   L_MAMODE=&gt;100,
                   L_PACKET=&gt;0,
                   M_MAMODE=&gt;   Messages.M_MAMODE.Shunting,               
                   N_ITER=&gt;0,
                   NID_PACKET=&gt;80,
                   Q_DIR=&gt; Messages.Q_DIR.Nominal,
                   Q_MAMODE=&gt; Messages.Q_MAMODE.as_both_the_EOA_and_SvL__instead_of_the_EOA_and_SvL_given_by_the_MA,
                   Q_SCALE=&gt;Messages.Q_SCALE._1_m_scaleC,
                   V_MAMODE=&gt;1,
                   Sequence1=&gt;[]
          }
            } 
               },
 Messages.EUROBALISE.SubStructure1
        {
            TRACK_TO_TRAIN=&gt;Messages.PACKET.TRACK_TO_TRAIN.Message
            {
                 LEVEL_1_MOVEMENT_AUTHORITY=&gt;Messages.PACKET.TRACK_TO_TRAIN.LEVEL_1_MOVEMENT_AUTHORITY.Message
                {
                    NID_PACKET=&gt;12,
                    Q_DIR=&gt;Messages.Q_DIR.Nominal,
                    L_PACKET=&gt;400,
                    Q_SCALE=&gt;Messages.Q_SCALE._1_m_scaleC,
                    V_MAIN=&gt;16,
                    V_LOA=&gt;8,
                    T_LOA=&gt;200,
                    N_ITER=&gt;0,
                    Sequence1=&gt;[],
                    L_ENDSECTION=&gt;10000,
                    Q_SECTIONTIMER=&gt;Messages.Q_SECTIONTIMER.No_Section_Timer_information,
                    T_SECTIONTIMER=&gt;0,
                    D_SECTIONTIMERSTOPLOC=&gt;0,
                    Q_ENDTIMER=&gt;Messages.Q_ENDTIMER.No_End_section_timer_information,
                    T_ENDTIMER=&gt;0,
                    D_ENDTIMERSTARTLOC=&gt;0,
                    Q_DANGERPOINT=&gt;Messages.Q_DANGERPOINT.Danger_point_information_to_follow,
                    D_DP=&gt;12000,
                    V_RELEASEDP=&gt;5,
                    Q_OVERLAP=&gt;Messages.Q_OVERLAP.No_overlap_information,
                    D_STARTOL=&gt;0,
                    T_OL=&gt;0,
                    D_OL=&gt;0,
                    V_RELEASEOL=&gt;0
                }
            }
         },
           Messages.EUROBALISE.SubStructure1
        {
            TRACK_TO_TRAIN=&gt;Messages.PACKET.TRACK_TO_TRAIN.Message
            {
                               LIST_OF_BALISES_FOR_SH_AREA =&gt; Messages.PACKET.TRACK_TO_TRAIN.LIST_OF_BALISES_FOR_SH_AREA.Message
                  {
                      NID_PACKET =&gt; 49,
                      Q_DIR =&gt; Messages.Q_DIR.Nominal,
                      L_PACKET =&gt; 0,
                      N_ITER =&gt; 1,
                      Sequence1 =&gt; 
                              [
                                 Messages.PACKET.TRACK_TO_TRAIN.LIST_OF_BALISES_FOR_SH_AREA.SubStructure1
                                  {
                                        NID_BG=&gt; 2124,
                                        Q_NEWCOUNTRY=&gt;Messages.Q_NEWCOUNTRY.Same_country___railway_administration__no_NID_C_follows,
                                        NID_C=&gt;140
                                    }
                              ]
                   } 
            }
         }
                ]
}</Action></Actions>
<Expectations>
<Expectation
 Kind="Instantaneous"
 DeadLine="1"
>Kernel.MA.ModeProfile.Profile != [] </Expectation><Expectation
 Kind="Instantaneous"
 DeadLine="1"
>(FIRST_IN Kernel.MA.ModeProfile.Profile).Mode == Mode.ModeProfile.SH</Expectation></Expectations>
</SubStep></SubSteps>
</Step><Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 TranslationRequired="FALSE"
 Name="Step2 - New MA with ModeProfile received"
>
<SubSteps>
<SubStep
 Name="Sub-step1"
>
<Actions>
<Action>BTM.Message &lt;- Messages.EUROBALISE.Message
{
    Q_UPDOWN=&gt; Messages.Q_UPDOWN.Up_link_telegram,
    M_VERSION=&gt;1,
    Q_MEDIA=&gt;Messages.Q_MEDIA.Balise,
    N_PIG=&gt;0,
    N_TOTAL=&gt;0,
    M_DUP=&gt;Messages.M_DUP.No_duplicates,
    M_MCOUNT=&gt;4,
    NID_C=&gt;140,
    NID_BG=&gt;2124,
    Q_LINK=&gt;Messages.Q_LINK.Linked,
    Sequence1=&gt;
    [ 
       Messages.EUROBALISE.SubStructure1
        {
            TRACK_TO_TRAIN=&gt;Messages.PACKET.TRACK_TO_TRAIN.Message
            {
                MODE_PROFILE=&gt;Messages.PACKET.TRACK_TO_TRAIN.MODE_PROFILE.Message
                {
                   D_MAMODE=&gt;100,
                   L_ACKMAMODE=&gt;700,
                   L_MAMODE=&gt;200,
                   L_PACKET=&gt;0,
                   M_MAMODE=&gt;   Messages.M_MAMODE.On_Sight,               
                   N_ITER=&gt;1,
                   NID_PACKET=&gt;80,
                   Q_DIR=&gt; Messages.Q_DIR.Nominal,
                   Q_MAMODE=&gt; Messages.Q_MAMODE.as_both_the_EOA_and_SvL__instead_of_the_EOA_and_SvL_given_by_the_MA,
                   Q_SCALE=&gt;Messages.Q_SCALE._1_m_scaleC,
                   V_MAMODE=&gt;1,
                   Sequence1=&gt;[] 
            }
        }
               },
 Messages.EUROBALISE.SubStructure1
        {
            TRACK_TO_TRAIN=&gt;Messages.PACKET.TRACK_TO_TRAIN.Message
            {
                 LEVEL_1_MOVEMENT_AUTHORITY=&gt;Messages.PACKET.TRACK_TO_TRAIN.LEVEL_1_MOVEMENT_AUTHORITY.Message
                {
                    NID_PACKET=&gt;12,
                    Q_DIR=&gt;Messages.Q_DIR.Nominal,
                    L_PACKET=&gt;400,
                    Q_SCALE=&gt;Messages.Q_SCALE._1_m_scaleC,
                    V_MAIN=&gt;16,
                    V_LOA=&gt;8,
                    T_LOA=&gt;200,
                    N_ITER=&gt;0,
                    Sequence1=&gt;[],
                    L_ENDSECTION=&gt;10000,
                    Q_SECTIONTIMER=&gt;Messages.Q_SECTIONTIMER.No_Section_Timer_information,
                    T_SECTIONTIMER=&gt;0,
                    D_SECTIONTIMERSTOPLOC=&gt;0,
                    Q_ENDTIMER=&gt;Messages.Q_ENDTIMER.No_End_section_timer_information,
                    T_ENDTIMER=&gt;0,
                    D_ENDTIMERSTARTLOC=&gt;0,
                    Q_DANGERPOINT=&gt;Messages.Q_DANGERPOINT.Danger_point_information_to_follow,
                    D_DP=&gt;12000,
                    V_RELEASEDP=&gt;5,
                    Q_OVERLAP=&gt;Messages.Q_OVERLAP.No_overlap_information,
                    D_STARTOL=&gt;0,
                    T_OL=&gt;0,
                    D_OL=&gt;0,
                    V_RELEASEOL=&gt;0
                }
            }
         }
                ]
}</Action></Actions>
</SubStep></SubSteps>
</Step><Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 TranslationRequired="FALSE"
 Name="Step3 - Data check"
>
<SubSteps>
<SubStep
 Name="Sub-step1"
>
<Expectations>
<Expectation
 Kind="Instantaneous"
 DeadLine="1"
>Kernel.MA.ModeProfile.Profile != [] </Expectation><Expectation
 Kind="Instantaneous"
 DeadLine="1"
>(FIRST_IN Kernel.MA.ModeProfile.Profile).Mode == Mode.ModeProfile.OS</Expectation></Expectations>
</SubStep></SubSteps>
</Step></Steps>
</TestCase></TestCases>
</SubSequence><SubSequence
 D_LRBG=""
 Level=""
 Mode=""
 NID_LRBG=""
 Q_DIRLRBG=""
 Q_DIRTRAIN=""
 Q_DLRBG=""
 RBC_ID=""
 RBCPhone=""
 Name="The ModeProfile can request LS Mode"
>
<TestCases>
<TestCase
 Feature="0"
 Case="0"
 Implemented="TRUE"
 Name="LS Mode Profile received"
>
<ReqRef
 Id="cbef1165-fc33-4ac1-994e-5f8a83f5e225"
>
</ReqRef><Steps>
<Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 TranslationRequired="FALSE"
 Name="Step1 - Setup"
>
<SubSteps>
<SubStep
 Name="Sub-step1"
>
<Actions>
<Action>Kernel.InitializeTestEnvironment()</Action></Actions>
</SubStep></SubSteps>
</Step><Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 TranslationRequired="FALSE"
 Name="Step2 - ModeSR"
>
<SubSteps>
<SubStep
 Name="Sub-step1"
>
<Actions>
<Action>Kernel.Mode &lt;- Default.Mode.SR</Action></Actions>
</SubStep></SubSteps>
</Step><Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 TranslationRequired="FALSE"
 Name="Step3 - BTM.Message ModeProfile LS + Level.L1"
>
<SubSteps>
<SubStep
 Name="Sub-step1"
>
<Actions>
<Action>BTM.Message &lt;- Messages.EUROBALISE.Message
{
    Q_UPDOWN=&gt; Messages.Q_UPDOWN.Up_link_telegram,
    M_VERSION=&gt;1,
    Q_MEDIA=&gt;Messages.Q_MEDIA.Balise,
    N_PIG=&gt;0,
    N_TOTAL=&gt;0,
    M_DUP=&gt;Messages.M_DUP.No_duplicates,
    M_MCOUNT=&gt;4,
    NID_C=&gt;140,
    NID_BG=&gt;2124,
    Q_LINK=&gt;Messages.Q_LINK.Linked,
    Sequence1=&gt;
    [ 
       Messages.EUROBALISE.SubStructure1
        {
            TRACK_TO_TRAIN=&gt;Messages.PACKET.TRACK_TO_TRAIN.Message
            {
                MODE_PROFILE=&gt;Messages.PACKET.TRACK_TO_TRAIN.MODE_PROFILE.Message
                {
                   D_MAMODE=&gt;0,
                   L_ACKMAMODE=&gt;500,
                   L_MAMODE=&gt;100,
                   L_PACKET=&gt;0,
                   M_MAMODE=&gt;Messages.M_MAMODE.Limited_Supervision,               
                   N_ITER=&gt;0,
                   NID_PACKET=&gt;80,
                   Q_DIR=&gt; Messages.Q_DIR.Nominal,
                   Q_MAMODE=&gt; Messages.Q_MAMODE.as_both_the_EOA_and_SvL__instead_of_the_EOA_and_SvL_given_by_the_MA,
                   Q_SCALE=&gt;Messages.Q_SCALE._1_m_scaleC,
                   V_MAMODE=&gt;1,
                   Sequence1=&gt;[] 
                }
           }
               },
 Messages.EUROBALISE.SubStructure1
        {
            TRACK_TO_TRAIN=&gt;Messages.PACKET.TRACK_TO_TRAIN.Message
            {
                 LEVEL_1_MOVEMENT_AUTHORITY=&gt;Messages.PACKET.TRACK_TO_TRAIN.LEVEL_1_MOVEMENT_AUTHORITY.Message
                {
                    NID_PACKET=&gt;12,
                    Q_DIR=&gt;Messages.Q_DIR.Nominal,
                    L_PACKET=&gt;400,
                    Q_SCALE=&gt;Messages.Q_SCALE._1_m_scaleC,
                    V_MAIN=&gt;16,
                    V_LOA=&gt;8,
                    T_LOA=&gt;200,
                    N_ITER=&gt;0,
                    Sequence1=&gt;[],
                    L_ENDSECTION=&gt;1000,
                    Q_SECTIONTIMER=&gt;Messages.Q_SECTIONTIMER.No_Section_Timer_information,
                    T_SECTIONTIMER=&gt;0,
                    D_SECTIONTIMERSTOPLOC=&gt;0,
                    Q_ENDTIMER=&gt;Messages.Q_ENDTIMER.No_End_section_timer_information,
                    T_ENDTIMER=&gt;0,
                    D_ENDTIMERSTARTLOC=&gt;0,
                    Q_DANGERPOINT=&gt;Messages.Q_DANGERPOINT.Danger_point_information_to_follow,
                    D_DP=&gt;12000,
                    V_RELEASEDP=&gt;5,
                    Q_OVERLAP=&gt;Messages.Q_OVERLAP.No_overlap_information,
                    D_STARTOL=&gt;0,
                    T_OL=&gt;0,
                    D_OL=&gt;0,
                    V_RELEASEOL=&gt;0
                }
            }
         }
                           ]
}</Action><Action>Kernel.Level.Value &lt;- Default.Level.L1</Action><Action>Kernel.Level.DataState &lt;- Default.DataState.Valid</Action></Actions>
<Expectations>
<Expectation
 Kind="Instantaneous"
 DeadLine="1"
>Kernel.MA.ModeProfile.ModeProfileIsApplicable() == Boolean.True</Expectation></Expectations>
</SubStep></SubSteps>
</Step><Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 TranslationRequired="FALSE"
 Name="Step4 - Mode Check"
>
<SubSteps>
<SubStep
 Name="Sub-step1"
>
<Expectations>
<Expectation
 Kind="Instantaneous"
 DeadLine="1"
>Kernel.Mode == Default.Mode.LS</Expectation><Expectation
 Kind="Instantaneous"
 DeadLine="1"
>Kernel.MA.ModeProfile.CurrentMode() == Default.Mode.ModeProfile.LS</Expectation></Expectations>
</SubStep></SubSteps>
</Step></Steps>
</TestCase></TestCases>
</SubSequence><SubSequence
 D_LRBG=""
 Level=""
 Mode=""
 NID_LRBG=""
 Q_DIRLRBG=""
 Q_DIRTRAIN=""
 Q_DLRBG=""
 RBC_ID=""
 RBCPhone=""
 Name="The Mode Profile can request OS Mode"
>
<TestCases>
<TestCase
 Feature="0"
 Case="0"
 Implemented="TRUE"
 Name="OS Mode Profile received"
>
<ReqRef
 Id="cbef1165-fc33-4ac1-994e-5f8a83f5e225"
>
</ReqRef><ReqRef
 Id="2ef2992f-43ce-4f58-abf6-55560cf910bd"
>
</ReqRef><Steps>
<Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 TranslationRequired="FALSE"
 Name="Step1 - Setup"
>
<SubSteps>
<SubStep
 Name="Sub-step1"
>
<Actions>
<Action>Kernel.InitializeTestEnvironment()</Action></Actions>
</SubStep></SubSteps>
</Step><Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 TranslationRequired="FALSE"
 Name="Step2 - ModeSR"
>
<SubSteps>
<SubStep
 Name="Sub-step1"
>
<Actions>
<Action>Kernel.Mode &lt;- Default.Mode.SR</Action></Actions>
</SubStep></SubSteps>
</Step><Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 TranslationRequired="FALSE"
 Name="Step3 - BTM.Message ModeProfile OS + Level.L1"
>
<SubSteps>
<SubStep
 Name="Sub-step1"
>
<Actions>
<Action>BTM.Message &lt;- Messages.EUROBALISE.Message
{
    Q_UPDOWN=&gt; Messages.Q_UPDOWN.Up_link_telegram,
    M_VERSION=&gt;1,
    Q_MEDIA=&gt;Messages.Q_MEDIA.Balise,
    N_PIG=&gt;0,
    N_TOTAL=&gt;0,
    M_DUP=&gt;Messages.M_DUP.No_duplicates,
    M_MCOUNT=&gt;4,
    NID_C=&gt;140,
    NID_BG=&gt;2124,
    Q_LINK=&gt;Messages.Q_LINK.Linked,
    Sequence1=&gt;
    [ 
       Messages.EUROBALISE.SubStructure1
        {
            TRACK_TO_TRAIN=&gt;Messages.PACKET.TRACK_TO_TRAIN.Message
            {
                MODE_PROFILE=&gt;Messages.PACKET.TRACK_TO_TRAIN.MODE_PROFILE.Message
                {
                   D_MAMODE=&gt;0,
                   L_ACKMAMODE=&gt;500,
                   L_MAMODE=&gt;100,
                   L_PACKET=&gt;0,
                   M_MAMODE=&gt;Messages.M_MAMODE.On_Sight,               
                   N_ITER=&gt;0,
                   NID_PACKET=&gt;80,
                   Q_DIR=&gt; Messages.Q_DIR.Nominal,
                   Q_MAMODE=&gt; Messages.Q_MAMODE.as_both_the_EOA_and_SvL__instead_of_the_EOA_and_SvL_given_by_the_MA,
                   Q_SCALE=&gt;Messages.Q_SCALE._1_m_scaleC,
                   V_MAMODE=&gt;1,
                   Sequence1=&gt;[] 
                }
           }
               },
 Messages.EUROBALISE.SubStructure1
        {
            TRACK_TO_TRAIN=&gt;Messages.PACKET.TRACK_TO_TRAIN.Message
            {
                 LEVEL_1_MOVEMENT_AUTHORITY=&gt;Messages.PACKET.TRACK_TO_TRAIN.LEVEL_1_MOVEMENT_AUTHORITY.Message
                {
                    NID_PACKET=&gt;12,
                    Q_DIR=&gt;Messages.Q_DIR.Nominal,
                    L_PACKET=&gt;400,
                    Q_SCALE=&gt;Messages.Q_SCALE._1_m_scaleC,
                    V_MAIN=&gt;16,
                    V_LOA=&gt;8,
                    T_LOA=&gt;200,
                    N_ITER=&gt;0,
                    Sequence1=&gt;[],
                    L_ENDSECTION=&gt;1000,
                    Q_SECTIONTIMER=&gt;Messages.Q_SECTIONTIMER.No_Section_Timer_information,
                    T_SECTIONTIMER=&gt;0,
                    D_SECTIONTIMERSTOPLOC=&gt;0,
                    Q_ENDTIMER=&gt;Messages.Q_ENDTIMER.No_End_section_timer_information,
                    T_ENDTIMER=&gt;0,
                    D_ENDTIMERSTARTLOC=&gt;0,
                    Q_DANGERPOINT=&gt;Messages.Q_DANGERPOINT.Danger_point_information_to_follow,
                    D_DP=&gt;12000,
                    V_RELEASEDP=&gt;5,
                    Q_OVERLAP=&gt;Messages.Q_OVERLAP.No_overlap_information,
                    D_STARTOL=&gt;0,
                    T_OL=&gt;0,
                    D_OL=&gt;0,
                    V_RELEASEOL=&gt;0
                }
            }
         }
                           ]
}</Action><Action>Kernel.Level.DataState &lt;- Default.DataState.Valid</Action><Action>Kernel.Level.Value &lt;- Default.Level.L1</Action></Actions>
<Expectations>
<Expectation
 Kind="Instantaneous"
 DeadLine="1"
>Kernel.MA.ModeProfile.ModeProfileIsApplicable() == Boolean.True</Expectation></Expectations>
</SubStep></SubSteps>
</Step><Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 TranslationRequired="FALSE"
 Name="Step4 - Mode Check"
>
<SubSteps>
<SubStep
 Name="Sub-step1"
>
<Expectations>
<Expectation
 Kind="Instantaneous"
 DeadLine="1"
>Kernel.Mode == Default.Mode.OS</Expectation><Expectation
 Kind="Instantaneous"
 DeadLine="1"
>Kernel.MA.ModeProfile.CurrentMode() == Default.Mode.ModeProfile.OS</Expectation></Expectations>
</SubStep></SubSteps>
</Step></Steps>
</TestCase></TestCases>
</SubSequence><SubSequence
 D_LRBG=""
 Level=""
 Mode=""
 NID_LRBG=""
 Q_DIRLRBG=""
 Q_DIRTRAIN=""
 Q_DLRBG=""
 RBC_ID=""
 RBCPhone=""
 Name="A previous list of balise groups for SH area shall be deleted or replaced by a new list"
>
<TestCases>
<TestCase
 Feature="0"
 Case="0"
 Implemented="TRUE"
 Name="A previous list of balise groups for SH area shall be deleted or replaced by a new list"
>
<ReqRef
 Id="e543ef61-ec28-453c-9012-2aea6278273d"
>
</ReqRef><Steps>
<Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 TranslationRequired="FALSE"
 Name="Step1 - Setup"
>
<SubSteps>
<SubStep
 Name="Sub-step1"
>
<Actions>
<Action>Kernel.InitializeTestEnvironment()</Action></Actions>
</SubStep></SubSteps>
</Step><Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 TranslationRequired="FALSE"
 Name="Step2 - Mode SR + Level.L1"
>
<SubSteps>
<SubStep
 Name="Sub-step1"
>
<Actions>
<Action>Kernel.Mode &lt;- Default.Mode.SR</Action><Action>Kernel.Level.DataState &lt;- Default.DataState.Valid</Action><Action>Kernel.Level.Value &lt;- Default.Level.L1</Action></Actions>
</SubStep></SubSteps>
</Step><Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 TranslationRequired="FALSE"
 Name="Step3 - BTM.Message ModeProfileSH + List for SH 2124"
>
<SubSteps>
<SubStep
 Name="Sub-step1"
>
<Actions>
<Action>BTM.Message &lt;- Messages.EUROBALISE.Message
{
    Q_UPDOWN=&gt; Messages.Q_UPDOWN.Up_link_telegram,
    M_VERSION=&gt;1,
    Q_MEDIA=&gt;Messages.Q_MEDIA.Balise,
    N_PIG=&gt;0,
    N_TOTAL=&gt;0,
    M_DUP=&gt;Messages.M_DUP.No_duplicates,
    M_MCOUNT=&gt;4,
    NID_C=&gt;140,
    NID_BG=&gt;2020,
    Q_LINK=&gt;Messages.Q_LINK.Linked,
    Sequence1=&gt;
    [ 
     Messages.EUROBALISE.SubStructure1
        {
            TRACK_TO_TRAIN=&gt;Messages.PACKET.TRACK_TO_TRAIN.Message
            {
                 LEVEL_1_MOVEMENT_AUTHORITY=&gt;Messages.PACKET.TRACK_TO_TRAIN.LEVEL_1_MOVEMENT_AUTHORITY.Message
                {
                    NID_PACKET=&gt;12,
                    Q_DIR=&gt;Messages.Q_DIR.Nominal,
                    L_PACKET=&gt;400,
                    Q_SCALE=&gt;Messages.Q_SCALE._1_m_scaleC,
                    V_MAIN=&gt;16,
                    V_LOA=&gt;8,
                    T_LOA=&gt;200,
                    N_ITER=&gt;0,
                    Sequence1=&gt;[],
                    L_ENDSECTION=&gt;10000,
                    Q_SECTIONTIMER=&gt;Messages.Q_SECTIONTIMER.No_Section_Timer_information,
                    T_SECTIONTIMER=&gt;0,
                    D_SECTIONTIMERSTOPLOC=&gt;0,
                    Q_ENDTIMER=&gt;Messages.Q_ENDTIMER.No_End_section_timer_information,
                    T_ENDTIMER=&gt;0,
                    D_ENDTIMERSTARTLOC=&gt;0,
                    Q_DANGERPOINT=&gt;Messages.Q_DANGERPOINT.Danger_point_information_to_follow,
                    D_DP=&gt;12000,
                    V_RELEASEDP=&gt;5,
                    Q_OVERLAP=&gt;Messages.Q_OVERLAP.No_overlap_information,
                    D_STARTOL=&gt;0,
                    T_OL=&gt;0,
                    D_OL=&gt;0,
                    V_RELEASEOL=&gt;0
                }
            }
         },
       Messages.EUROBALISE.SubStructure1
        {
            TRACK_TO_TRAIN=&gt;Messages.PACKET.TRACK_TO_TRAIN.Message
            {
                MODE_PROFILE=&gt;Messages.PACKET.TRACK_TO_TRAIN.MODE_PROFILE.Message
                {
                   D_MAMODE=&gt;0,
                   L_ACKMAMODE=&gt;500,
                   L_MAMODE=&gt;100,
                   L_PACKET=&gt;0,
                   M_MAMODE=&gt;   Messages.M_MAMODE.Shunting,               
                   N_ITER=&gt;0,
                   NID_PACKET=&gt;80,
                   Q_DIR=&gt; Messages.Q_DIR.Nominal,
                   Q_MAMODE=&gt; Messages.Q_MAMODE.as_both_the_EOA_and_SvL__instead_of_the_EOA_and_SvL_given_by_the_MA,
                   Q_SCALE=&gt;Messages.Q_SCALE._1_m_scaleC,
                   V_MAMODE=&gt;1,
                   Sequence1=&gt;[] 
               }
          }
      },
      
           Messages.EUROBALISE.SubStructure1
        {
            TRACK_TO_TRAIN=&gt;Messages.PACKET.TRACK_TO_TRAIN.Message
            {
                               LIST_OF_BALISES_FOR_SH_AREA =&gt; Messages.PACKET.TRACK_TO_TRAIN.LIST_OF_BALISES_FOR_SH_AREA.Message
                  {
                      NID_PACKET =&gt; 49,
                      Q_DIR =&gt; Messages.Q_DIR.Nominal,
                      L_PACKET =&gt;8,
                      N_ITER =&gt; 1,
                      Sequence1 =&gt; 
                              [
                                 Messages.PACKET.TRACK_TO_TRAIN.LIST_OF_BALISES_FOR_SH_AREA.SubStructure1
                                  {
                                        NID_BG=&gt; 1212,
                                        NID_C=&gt;140,
                                        Q_NEWCOUNTRY=&gt;Messages.Q_NEWCOUNTRY.Same_country___railway_administration__no_NID_C_follows
                                    }
                              ]
                   } 
            }
         }
                ]
}</Action></Actions>
<Expectations>
<Expectation
 Kind="Instantaneous"
 DeadLine="1"
>Kernel.Shunting.BaliseGroupsForShArea ==
[Kernel.BaliseGroup
{
NewCountry =&gt; Boolean.False,
NID_C =&gt; 140,
NID_BG =&gt; 1212
}
]</Expectation></Expectations>
</SubStep></SubSteps>
</Step><Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 TranslationRequired="FALSE"
 Name="Step4 - BTM.Message ModeProfile SH + List for SH 2125"
>
<SubSteps>
<SubStep
 Name="Sub-step1"
>
<Actions>
<Action>BTM.Message &lt;- Messages.EUROBALISE.Message
{
    Q_UPDOWN=&gt; Messages.Q_UPDOWN.Up_link_telegram,
    M_VERSION=&gt;1,
    Q_MEDIA=&gt;Messages.Q_MEDIA.Balise,
    N_PIG=&gt;0,
    N_TOTAL=&gt;0,
    M_DUP=&gt;Messages.M_DUP.No_duplicates,
    M_MCOUNT=&gt;4,
    NID_C=&gt;140,
    NID_BG=&gt;2125,
    Q_LINK=&gt;Messages.Q_LINK.Linked,
    Sequence1=&gt;
    [ 
       Messages.EUROBALISE.SubStructure1
        {
            TRACK_TO_TRAIN=&gt;Messages.PACKET.TRACK_TO_TRAIN.Message
            {
                MODE_PROFILE=&gt;Messages.PACKET.TRACK_TO_TRAIN.MODE_PROFILE.Message
                {
                   D_MAMODE=&gt;100,
                   L_ACKMAMODE=&gt;400,
                   L_MAMODE=&gt;200,
                   L_PACKET=&gt;0,
                   M_MAMODE=&gt;   Messages.M_MAMODE.Shunting,               
                   N_ITER=&gt;0,
                   NID_PACKET=&gt;80,
                   Q_DIR=&gt; Messages.Q_DIR.Nominal,
                   Q_MAMODE=&gt; Messages.Q_MAMODE.as_both_the_EOA_and_SvL__instead_of_the_EOA_and_SvL_given_by_the_MA,
                   Q_SCALE=&gt;Messages.Q_SCALE._1_m_scaleC,
                   V_MAMODE=&gt;1,
                   Sequence1=&gt;[] 
               }
          }
      },
       Messages.EUROBALISE.SubStructure1
        {
            TRACK_TO_TRAIN=&gt;Messages.PACKET.TRACK_TO_TRAIN.Message
            {
                 LEVEL_1_MOVEMENT_AUTHORITY=&gt;Messages.PACKET.TRACK_TO_TRAIN.LEVEL_1_MOVEMENT_AUTHORITY.Message
                {
                    NID_PACKET=&gt;12,
                    Q_DIR=&gt;Messages.Q_DIR.Nominal,
                    L_PACKET=&gt;400,
                    Q_SCALE=&gt;Messages.Q_SCALE._1_m_scaleC,
                    V_MAIN=&gt;16,
                    V_LOA=&gt;8,
                    T_LOA=&gt;200,
                    N_ITER=&gt;0,
                    Sequence1=&gt;[],
                    L_ENDSECTION=&gt;10000,
                    Q_SECTIONTIMER=&gt;Messages.Q_SECTIONTIMER.No_Section_Timer_information,
                    T_SECTIONTIMER=&gt;0,
                    D_SECTIONTIMERSTOPLOC=&gt;0,
                    Q_ENDTIMER=&gt;Messages.Q_ENDTIMER.No_End_section_timer_information,
                    T_ENDTIMER=&gt;0,
                    D_ENDTIMERSTARTLOC=&gt;0,
                    Q_DANGERPOINT=&gt;Messages.Q_DANGERPOINT.Danger_point_information_to_follow,
                    D_DP=&gt;12000,
                    V_RELEASEDP=&gt;5,
                    Q_OVERLAP=&gt;Messages.Q_OVERLAP.No_overlap_information,
                    D_STARTOL=&gt;0,
                    T_OL=&gt;0,
                    D_OL=&gt;0,
                    V_RELEASEOL=&gt;0
                }
            }
         },
           Messages.EUROBALISE.SubStructure1
        {
            TRACK_TO_TRAIN=&gt;Messages.PACKET.TRACK_TO_TRAIN.Message
            {
                               LIST_OF_BALISES_FOR_SH_AREA =&gt; Messages.PACKET.TRACK_TO_TRAIN.LIST_OF_BALISES_FOR_SH_AREA.Message
                  {
                      NID_PACKET =&gt; 49,
                      Q_DIR =&gt; Messages.Q_DIR.Nominal,
                      L_PACKET =&gt; 10,
                      N_ITER =&gt; 1,
                      Sequence1 =&gt; 
                              [
                                 Messages.PACKET.TRACK_TO_TRAIN.LIST_OF_BALISES_FOR_SH_AREA.SubStructure1
                                  {
                                        NID_BG=&gt; 1313,
                                        NID_C=&gt;140,
                                        Q_NEWCOUNTRY=&gt;Messages.Q_NEWCOUNTRY.Same_country___railway_administration__no_NID_C_follows
                                    }
                              ]
                   } 
            }
         }
                ]
}</Action></Actions>
<Expectations>
<Expectation
 Kind="Instantaneous"
 DeadLine="1"
>Kernel.Shunting.BaliseGroupsForShArea ==
[Kernel.BaliseGroup
{
NewCountry =&gt; Boolean.False,
NID_C =&gt; 140,
NID_BG =&gt; 1313
}
]</Expectation></Expectations>
</SubStep></SubSteps>
</Step></Steps>
</TestCase></TestCases>
</SubSequence><SubSequence
 D_LRBG=""
 Level=""
 Mode=""
 NID_LRBG=""
 Q_DIRLRBG=""
 Q_DIRTRAIN=""
 Q_DLRBG=""
 RBC_ID=""
 RBCPhone=""
 Name="New MA by INFILL shall delete the current MP after the reference location of the INFILL"
>
<TestCases>
<TestCase
 Feature="0"
 Case="0"
 Implemented="TRUE"
 Name="New MA by INFILL shall delete the current MP after the reference location of the INFILL"
>
<ReqRef
 Id="2a495f6e-680c-4def-a6b5-d8bcd1f41a9d"
>
</ReqRef><Steps>
<Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 TranslationRequired="FALSE"
 Name="Step1 - Setup"
>
<SubSteps>
<SubStep
 Name="Sub-step1"
>
<Actions>
<Action>Kernel.InitializeTestEnvironment()</Action></Actions>
</SubStep></SubSteps>
</Step><Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 TranslationRequired="FALSE"
 Name="Step2 - Mode OS + Level 1"
>
<SubSteps>
<SubStep
 Name="Sub-step1"
>
<Actions>
<Action>Kernel.Mode &lt;- Default.Mode.OS</Action><Action>Kernel.Level.DataState &lt;- Default.DataState.Valid</Action><Action>Kernel.Level.Value &lt;- Default.Level.L1</Action></Actions>
</SubStep></SubSteps>
</Step><Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 TranslationRequired="FALSE"
 Name="Step3 BTM.LRBG + BTM.Linking"
>
<SubSteps>
<SubStep
 Name="Sub-step1"
>
<Actions>
<Action>INSERT BTM.Linking.LinkingData 
{
    NID_BG =&gt; 2126,
    Distance =&gt;700.0,
    Orientation =&gt; Orientation.Nominal,
    LocationAccuracy =&gt; 5.0
}
IN BTM.Linking.Linkings</Action><Action>BTM.LRBG &lt;- 
BTM.BaliseGroup {
    NID=&gt;2124,
    Orientation=&gt;Orientation.Nominal,
    Position=&gt;
        BTM.Position {
            OverReadingAmountOdo=&gt;2.0,
            Position=&gt;1000.0,
            UnderReadingAmountOdo=&gt;2.0
        }
}</Action><Action>Kernel.TrainPosition.Position &lt;- Kernel.TrainPosition.TrainPosition
{
    DirectionalPositionInformation =&gt; Kernel.TrainPosition.DirectionalTrainPositionInformation
{
        TrainFrontEndPosition =&gt; Orientation.Nominal,
        TrainOrientation =&gt; Orientation.Nominal,
        TrainRunningDirection =&gt; Orientation.Nominal
    },
    DataState =&gt; Default.DataState.Valid
}</Action><Action>Odometry.Accuracy.D_ora &lt;- 4.0</Action><Action>INSERT Kernel.MA.ModeProfile.ModeProfile 
{ 
    Distance=&gt;100.0,
    Length=&gt;1000.0,
    Mode=&gt;Default.Mode.ModeProfile.OS
}
IN Kernel.MA.ModeProfile.Profile</Action></Actions>
<Expectations>
<Expectation
 Kind="Instantaneous"
 DeadLine="1"
>(FIRST_IN Kernel.MA.ModeProfile.Profile).Length == 1000.0</Expectation><Expectation
 Kind="Instantaneous"
 DeadLine="1"
>(FIRST_IN Kernel.MA.ModeProfile.Profile).Mode == Mode.ModeProfile.OS</Expectation><Expectation
 Kind="Instantaneous"
 DeadLine="1"
>(FIRST_IN Kernel.MA.ModeProfile.Profile).Distance == 100.0</Expectation></Expectations>
</SubStep></SubSteps>
</Step><Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 TranslationRequired="FALSE"
 Name="Step4 - BTM.Message with MA, MP and INFILL"
>
<SubSteps>
<SubStep
 Name="Sub-step1"
>
<Actions>
<Action>BTM.Message &lt;- Messages.EUROBALISE.Message
{
    Q_UPDOWN=&gt; Messages.Q_UPDOWN.Up_link_telegram,
    M_VERSION=&gt;1,
    Q_MEDIA=&gt;Messages.Q_MEDIA.Balise,
    N_PIG=&gt;0,
    N_TOTAL=&gt;0,
    M_DUP=&gt;Messages.M_DUP.No_duplicates,
    M_MCOUNT=&gt;4,
    NID_C=&gt;140,
    NID_BG=&gt;2125,
    Q_LINK=&gt;Messages.Q_LINK.Unlinked,
    Sequence1=&gt;
    [ 
         Messages.EUROBALISE.SubStructure1
            {
              TRACK_TO_TRAIN =&gt; Messages.PACKET.TRACK_TO_TRAIN.Message
                {
                   INFILL_LOCATION_REFERENCE =&gt;Messages.PACKET.TRACK_TO_TRAIN.INFILL_LOCATION_REFERENCE.Message
                     {
                          L_PACKET=&gt;10,
                          NID_BG=&gt;2126,
                          NID_C=&gt;140,
                          NID_PACKET=&gt;136,
                          Q_DIR=&gt;Messages.Q_DIR.Nominal,
                          Q_NEWCOUNTRY=&gt;Messages.Q_NEWCOUNTRY.Same_country___railway_administration__no_NID_C_follows
                     }
                 }
             },
     Messages.EUROBALISE.SubStructure1
        {
            TRACK_TO_TRAIN=&gt;Messages.PACKET.TRACK_TO_TRAIN.Message
            {
                 LEVEL_1_MOVEMENT_AUTHORITY=&gt;Messages.PACKET.TRACK_TO_TRAIN.LEVEL_1_MOVEMENT_AUTHORITY.Message
                {
                    NID_PACKET=&gt;12,
                    Q_DIR=&gt;Messages.Q_DIR.Nominal,
                    L_PACKET=&gt;400,
                    Q_SCALE=&gt;Messages.Q_SCALE._1_m_scaleC,
                    V_MAIN=&gt;16,
                    V_LOA=&gt;8,
                    T_LOA=&gt;200,
                    N_ITER=&gt;0,
                    Sequence1=&gt;[],
                    L_ENDSECTION=&gt;1000,
                    Q_SECTIONTIMER=&gt;Messages.Q_SECTIONTIMER.No_Section_Timer_information,
                    T_SECTIONTIMER=&gt;0,
                    D_SECTIONTIMERSTOPLOC=&gt;0,
                    Q_ENDTIMER=&gt;Messages.Q_ENDTIMER.No_End_section_timer_information,
                    T_ENDTIMER=&gt;0,
                    D_ENDTIMERSTARTLOC=&gt;0,
                    Q_DANGERPOINT=&gt;Messages.Q_DANGERPOINT.Danger_point_information_to_follow,
                    D_DP=&gt;12000,
                    V_RELEASEDP=&gt;5,
                    Q_OVERLAP=&gt;Messages.Q_OVERLAP.No_overlap_information,
                    D_STARTOL=&gt;0,
                    T_OL=&gt;0,
                    D_OL=&gt;0,
                    V_RELEASEOL=&gt;0
                }
            }
         },
       Messages.EUROBALISE.SubStructure1
        {
            TRACK_TO_TRAIN=&gt;Messages.PACKET.TRACK_TO_TRAIN.Message
            {
                MODE_PROFILE=&gt;Messages.PACKET.TRACK_TO_TRAIN.MODE_PROFILE.Message
                {
                   D_MAMODE=&gt;50,
                   L_ACKMAMODE=&gt;10,
                   L_MAMODE=&gt;500,
                   L_PACKET=&gt;0,
                   M_MAMODE=&gt;   Messages.M_MAMODE.Limited_Supervision,               
                   N_ITER=&gt;0,
                   NID_PACKET=&gt;80,
                   Q_DIR=&gt; Messages.Q_DIR.Nominal,
                   Q_MAMODE=&gt; Messages.Q_MAMODE.as_both_the_EOA_and_SvL__instead_of_the_EOA_and_SvL_given_by_the_MA,
                   Q_SCALE=&gt;Messages.Q_SCALE._1_m_scaleC,
                   V_MAMODE=&gt;1,
                   Sequence1=&gt;[] 
             }
          }
               }
    
                ]
}</Action></Actions>
</SubStep></SubSteps>
</Step><Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 TranslationRequired="FALSE"
 Name="Step5 - Data check"
>
<SubSteps>
<SubStep
 Name="Sub-step1"
>
<Expectations>
<Expectation
 Kind="Instantaneous"
 DeadLine="1"
>(FIRST_IN Kernel.MA.ModeProfile.Profile).Length == 600.0</Expectation><Expectation
 Kind="Instantaneous"
 DeadLine="1"
>(FIRST_IN Kernel.MA.ModeProfile.Profile | X.Mode == Mode.ModeProfile.LS).Length == 500.0
 </Expectation><Expectation
 Kind="Instantaneous"
 DeadLine="1"
>(FIRST_IN Kernel.MA.ModeProfile.Profile).Mode == Mode.ModeProfile.OS</Expectation><Expectation
 Kind="Instantaneous"
 DeadLine="1"
>THERE_IS_IN Kernel.MA.ModeProfile.Profile | X.Mode == Mode.ModeProfile.LS</Expectation><Expectation
 Kind="Instantaneous"
 DeadLine="1"
>(FIRST_IN Kernel.MA.ModeProfile.Profile).Distance == 100.0</Expectation><Expectation
 Kind="Instantaneous"
 DeadLine="1"
>(FIRST_IN Kernel.MA.ModeProfile.Profile | X.Mode == Mode.ModeProfile.LS).Distance == 750.0
 </Expectation></Expectations>
</SubStep></SubSteps>
</Step></Steps>
</TestCase></TestCases>
</SubSequence></SubSequences>
</Frame>
