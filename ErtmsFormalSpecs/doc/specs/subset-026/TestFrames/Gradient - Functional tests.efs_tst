<Frame
 CycleDuration="Kernel.CycleDuration"
 Name="Gradient - Functional tests"
>
<SubSequences>
<SubSequence
 D_LRBG=""
 Level=""
 Mode=""
 NID_LRBG=""
 Q_DIRLRBG=""
 Q_DIRTRAIN=""
 Q_DLRBG=""
 RBC_ID=""
 RBCPhone=""
 Name="Receive gradient profile info"
>
<TestCases>
<TestCase
 Feature="0"
 Case="0"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Compute gradient according to gradient profile message"
>
<ReqRef
 Id="3.11.12.1"
>
</ReqRef><ReqRef
 Id="3.11.12.2"
>
</ReqRef><ReqRef
 Id="3.11.12.3"
>
</ReqRef><ReqRef
 Id="3.11.12.4"
>
</ReqRef><ReqRef
 Id="3.13.4.1.1"
>
</ReqRef><ReqRef
 Id="3.13.4.2.1"
>
</ReqRef><ReqRef
 Id="3.13.4.3.1"
>
</ReqRef><ReqRef
 Id="3.13.4.3.2"
>
</ReqRef><ReqRef
 Id="3.13.4.1.3"
>
</ReqRef><ReqRef
 Id="3.13.4.1.2"
>
</ReqRef><ReqRef
 Id="7.5.1.37.0"
>
</ReqRef><Steps>
<Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 Name="Step1 - Initialize train data"
>
<SubSteps>
<SubStep
 Name="Sub-step1"
>
<Actions>
<Action>Kernel.InitializeTestEnvironment()</Action></Actions>
</SubStep></SubSteps>
</Step><Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 Name="Step2 - Setup"
>
<SubSteps>
<SubStep
 Name="Sub-step1"
>
<Actions>
<Action>Kernel.TrackDescription.Gradient.DefaultGradientForTSR &lt;- EMPTY</Action><Action>Kernel.TrackDescription.Gradient.Gradients &lt;- []</Action><Action>Kernel.TrainData.TrainData.Value.M_rotating_nom &lt;- 5.0</Action><Action>BTM.LRBG&lt;- BTM.BaliseGroup{
  NID=&gt;9616,
  Orientation=&gt;Orientation.Nominal,
  Position=&gt;BTM.Position{
    OverReadingAmountOdo=&gt; 2.0,
    Position=&gt;4000.0,
    UnderReadingAmountOdo=&gt;7.0
  }
}</Action><Action>Kernel.TrainData.TrainData.Value.TrainLength &lt;- 100.0</Action><Action>Kernel.TrainData.TrainData.DataState &lt;- DataState.Valid</Action></Actions>
</SubStep></SubSteps>
</Step><Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 Name="Step3 - Receive gradient profile"
>
<SubSteps>
<SubStep
 Name="Sub-step1"
>
<Actions>
<Action>BTM.Message &lt;- Messages.EUROBALISE.Message
{
    Q_UPDOWN=&gt; Messages.Q_UPDOWN.Up_link_telegram,
    M_VERSION=&gt;1,
    Q_MEDIA=&gt;Messages.Q_MEDIA.Balise,
    N_PIG=&gt;1,
    N_TOTAL=&gt;0,
    M_DUP=&gt;Messages.M_DUP.No_duplicates,
    M_MCOUNT=&gt;4,
    NID_C=&gt;140,
    NID_BG=&gt;2124,
    Q_LINK=&gt;Messages.Q_LINK.Unlinked,
    Sequence1=&gt;
    [
        Messages.EUROBALISE.SubStructure1
        {
            TRACK_TO_TRAIN=&gt;Messages.PACKET.TRACK_TO_TRAIN.Message
            {
                GRADIENT_PROFILE =&gt; Messages.PACKET.TRACK_TO_TRAIN.GRADIENT_PROFILE.Message
                {
                    NID_PACKET=&gt;21,
                    Q_DIR=&gt;Messages.Q_DIR.Nominal,
                    L_PACKET=&gt;400,
                    Q_SCALE=&gt;Messages.Q_SCALE._1_m_scaleC,
                    D_GRADIENT =&gt; 4000,
                    Q_GDIR =&gt; Messages.Q_GDIR.uphill,
                    G_A =&gt; 2,
                    N_ITER =&gt; 3,
                    Sequence1 =&gt; [
                      Messages.PACKET.TRACK_TO_TRAIN.GRADIENT_PROFILE.SubStructure1 {
                        D_GRADIENT =&gt; 2000,
                        Q_GDIR =&gt; Messages.Q_GDIR.downhill,
                        G_A =&gt; 1
                      },
                      Messages.PACKET.TRACK_TO_TRAIN.GRADIENT_PROFILE.SubStructure1 {
                        D_GRADIENT =&gt; 1000,
                        Q_GDIR =&gt; Messages.Q_GDIR.downhill,
                        G_A =&gt; 4
                      },
                      Messages.PACKET.TRACK_TO_TRAIN.GRADIENT_PROFILE.SubStructure1 {
                        D_GRADIENT =&gt; 5000,
                        Q_GDIR =&gt; Messages.Q_GDIR.uphill,
                        G_A =&gt; 255
                      }
                    ]
                }
            }
        }
    ]
}</Action></Actions>
<Expectations>
<Expectation
 Kind="Instantaneous"
 DeadLine="1"
>( THERE_IS_IN Kernel.TrackDescription.Gradient.Gradients | X.Location == 4000.0 )</Expectation></Expectations>
</SubStep></SubSteps>
</Step><Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 Name="Step4 - Check first element in the gradient structure"
>
<SubSteps>
<SubStep
 Name="Sub-step1"
>
<Expectations>
<Expectation
 Kind="Instantaneous"
>Kernel.TrackDescription.Gradient.GradientEnd ( 
  Current =&gt; FIRST_IN Kernel.TrackDescription.Gradient.Gradients | X.Location == 4000.0 
) == 6000.0</Expectation><Expectation
 Kind="Instantaneous"
>Kernel.TrackDescription.Gradient.GradientInfoProfile (
  GradientInfo =&gt;  FIRST_IN Kernel.TrackDescription.Gradient.Gradients | X.Location == 4000.0,
  Distance =&gt; 7000.0, 
  TrainLength =&gt; 100.0
) == BaseTypes.Gradient.Indefinite </Expectation><Expectation
 Kind="Instantaneous"
>Kernel.TrackDescription.Gradient.GradientInfoProfile (
  GradientInfo =&gt;  FIRST_IN Kernel.TrackDescription.Gradient.Gradients | X.Location == 4000.0,
  Distance =&gt; 5000.0, 
  TrainLength =&gt; 100.0
) &lt; 0.002 
AND
Kernel.TrackDescription.Gradient.GradientInfoProfile (
  GradientInfo =&gt;  FIRST_IN Kernel.TrackDescription.Gradient.Gradients | X.Location == 4000.0,
  Distance =&gt; 5000.0, 
  TrainLength =&gt; 100.0
) &gt; 0.0018</Expectation><Expectation
 Kind="Instantaneous"
>Kernel.TrackDescription.Gradient.GradientInfoProfile (
  GradientInfo =&gt;  FIRST_IN Kernel.TrackDescription.Gradient.Gradients | X.Location == 4000.0,
  Distance =&gt; 3000.0, 
  TrainLength =&gt; 100.0
) == BaseTypes.Gradient.Indefinite </Expectation></Expectations>
</SubStep></SubSteps>
</Step><Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 Name="Step5 - Check last element in the gradient structure"
>
<SubSteps>
<SubStep
 Name="Sub-step1"
>
<Expectations>
<Expectation
 Kind="Instantaneous"
>Kernel.TrackDescription.Gradient.GradientInfoProfile (
  GradientInfo =&gt;  FIRST_IN Kernel.TrackDescription.Gradient.Gradients | X.Location == 12000.0,
  Distance =&gt; 20000.0, 
  TrainLength =&gt; 100.0
) == 0.0</Expectation><Expectation
 Kind="Instantaneous"
>Kernel.TrackDescription.Gradient.GradientInfoProfile (
  GradientInfo =&gt;  FIRST_IN Kernel.TrackDescription.Gradient.Gradients | X.Location == 12000.0,
  Distance =&gt; 12000.0, 
  TrainLength =&gt; 100.0
) == 0.0</Expectation><Expectation
 Kind="Instantaneous"
>Kernel.TrackDescription.Gradient.GradientInfoProfile (
  GradientInfo =&gt;  FIRST_IN Kernel.TrackDescription.Gradient.Gradients | X.Location == 12000.0,
  Distance =&gt; 11000.0, 
  TrainLength =&gt; 100.0
) == BaseTypes.Gradient.Indefinite </Expectation><Expectation
 Kind="Instantaneous"
>Kernel.TrackDescription.Gradient.GradientEnd ( 
  Current =&gt; FIRST_IN Kernel.TrackDescription.Gradient.Gradients | X.Location == 12000.0 
) == 12000.0 + Kernel.TrackDescription.Gradient.MaxGradientLength</Expectation></Expectations>
</SubStep></SubSteps>
</Step><Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 Name="Step6 - Check gradient profile function"
>
<SubSteps>
<SubStep
 Name="Sub-step1"
>
<Expectations>
<Expectation
 Kind="Instantaneous"
>Kernel.TrackDescription.Gradient.GradientProfile ( Distance =&gt; 3999.0 ) == 0.0 </Expectation><Expectation
 Kind="Instantaneous"
>( Kernel.TrackDescription.Gradient.GradientProfile ( Distance =&gt; 4000.0 ) &lt; 0.002 ) AND
( Kernel.TrackDescription.Gradient.GradientProfile ( Distance =&gt; 4000.0 ) &gt; 0.0018 )</Expectation><Expectation
 Kind="Instantaneous"
>( Kernel.TrackDescription.Gradient.GradientProfile ( Distance =&gt; 5999.0 ) &lt; 0.002 ) AND
( Kernel.TrackDescription.Gradient.GradientProfile ( Distance =&gt; 5999.0 ) &gt; 0.0018 )</Expectation><Expectation
 Kind="Instantaneous"
>( Kernel.TrackDescription.Gradient.GradientProfile ( Distance =&gt; 6000.0 ) &gt; -0.001 ) AND
( Kernel.TrackDescription.Gradient.GradientProfile ( Distance =&gt; 6000.0 ) &lt; -0.0009 )</Expectation><Expectation
 Kind="Instantaneous"
>( Kernel.TrackDescription.Gradient.GradientProfile ( Distance =&gt; 6999.0 ) &gt; -0.001 ) AND 
( Kernel.TrackDescription.Gradient.GradientProfile ( Distance =&gt; 6999.0 ) &lt; -0.0009 )</Expectation><Expectation
 Kind="Instantaneous"
>( Kernel.TrackDescription.Gradient.GradientProfile ( Distance =&gt; 7000.0 ) &gt; -0.004 ) AND
( Kernel.TrackDescription.Gradient.GradientProfile ( Distance =&gt; 7000.0 ) &lt; -0.0036 )</Expectation><Expectation
 Kind="Instantaneous"
>( Kernel.TrackDescription.Gradient.GradientProfile ( Distance =&gt; 12099.0 ) &gt; -0.004 ) AND
( Kernel.TrackDescription.Gradient.GradientProfile ( Distance =&gt; 12099.0 ) &lt; -0.0036 )</Expectation><Expectation
 Kind="Instantaneous"
>( Kernel.TrackDescription.Gradient.GradientProfile ( Distance =&gt; 12100.0 ) ) == 0.0</Expectation><Expectation
 Kind="Instantaneous"
>( Kernel.TrackDescription.Gradient.GradientProfile ( Distance =&gt; 16000.0 ) ) == 0.0</Expectation></Expectations>
</SubStep></SubSteps>
</Step><Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 Name="Step7 - Receive new gradient profile"
>
<SubSteps>
<SubStep
 Name="Sub-step1"
>
<Actions>
<Action>BTM.Message &lt;- Messages.EUROBALISE.Message
{
    Q_UPDOWN=&gt; Messages.Q_UPDOWN.Up_link_telegram,
    M_VERSION=&gt;1,
    Q_MEDIA=&gt;Messages.Q_MEDIA.Balise,
    N_PIG=&gt;1,
    N_TOTAL=&gt;0,
    M_DUP=&gt;Messages.M_DUP.No_duplicates,
    M_MCOUNT=&gt;4,
    NID_C=&gt;140,
    NID_BG=&gt;2126,
    Q_LINK=&gt;Messages.Q_LINK.Unlinked,
    Sequence1=&gt;
    [
        Messages.EUROBALISE.SubStructure1
        {
            TRACK_TO_TRAIN=&gt;Messages.PACKET.TRACK_TO_TRAIN.Message
            {
                GRADIENT_PROFILE =&gt; Messages.PACKET.TRACK_TO_TRAIN.GRADIENT_PROFILE.Message
                {
                    NID_PACKET=&gt;21,
                    Q_DIR=&gt;Messages.Q_DIR.Nominal,
                    L_PACKET=&gt;400,
                    Q_SCALE=&gt;Messages.Q_SCALE._1_m_scaleC,
                    D_GRADIENT =&gt; 5000,
                    Q_GDIR =&gt; Messages.Q_GDIR.uphill,
                    G_A =&gt; 3,
                    N_ITER =&gt; 2,
                    Sequence1 =&gt; [
                      Messages.PACKET.TRACK_TO_TRAIN.GRADIENT_PROFILE.SubStructure1 {
                        D_GRADIENT =&gt; 4000,
                        Q_GDIR =&gt; Messages.Q_GDIR.downhill,
                        G_A =&gt; 2
                      },
                      Messages.PACKET.TRACK_TO_TRAIN.GRADIENT_PROFILE.SubStructure1 {
                        D_GRADIENT =&gt; 2000,
                        Q_GDIR =&gt; Messages.Q_GDIR.downhill,
                        G_A =&gt; 255
                      }
                    ]
                }
            }
        }
    ]
}</Action></Actions>
</SubStep></SubSteps>
</Step><Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 Name="Step8 - Check gradient profile function"
>
<SubSteps>
<SubStep
 Name="Sub-step1"
>
<Expectations>
<Expectation
 Kind="Instantaneous"
>( Kernel.TrackDescription.Gradient.GradientProfile ( Distance =&gt; 5100.0 ) &lt; 0.003 ) AND 
( Kernel.TrackDescription.Gradient.GradientProfile ( Distance =&gt; 5100.0 ) &gt; 0.0027 )</Expectation><Expectation
 Kind="Instantaneous"
>( Kernel.TrackDescription.Gradient.GradientProfile ( Distance =&gt; 5099.0 ) &lt; 0.002 ) AND 
( Kernel.TrackDescription.Gradient.GradientProfile ( Distance =&gt; 5099.0 ) &gt; 0.0018 )</Expectation><Expectation
 Kind="Instantaneous"
>( Kernel.TrackDescription.Gradient.GradientProfile ( Distance =&gt; 4000.0 ) &lt; 0.002 ) AND 
( Kernel.TrackDescription.Gradient.GradientProfile ( Distance =&gt; 4000.0 ) &gt; 0.0018 )</Expectation><Expectation
 Kind="Instantaneous"
>Kernel.TrackDescription.Gradient.GradientProfile ( Distance =&gt; 3999.0 ) == 0.0 </Expectation><Expectation
 Kind="Instantaneous"
>( Kernel.TrackDescription.Gradient.GradientProfile ( Distance =&gt; 8999.0 ) &lt; 0.003 ) AND 
( Kernel.TrackDescription.Gradient.GradientProfile ( Distance =&gt; 8999.0 ) &gt; 0.0027 )</Expectation><Expectation
 Kind="Instantaneous"
>( Kernel.TrackDescription.Gradient.GradientProfile ( Distance =&gt; 9000.0 ) &gt; -0.002 ) AND 
( Kernel.TrackDescription.Gradient.GradientProfile ( Distance =&gt; 9000.0 ) &lt; -0.0018 )</Expectation><Expectation
 Kind="Instantaneous"
>( Kernel.TrackDescription.Gradient.GradientProfile ( Distance =&gt; 11099.0 ) &gt; -0.002 ) AND 
( Kernel.TrackDescription.Gradient.GradientProfile ( Distance =&gt; 11099.0 ) &lt; -0.0018 )</Expectation><Expectation
 Kind="Instantaneous"
>Kernel.TrackDescription.Gradient.GradientProfile ( Distance =&gt; 16000.0 ) == 0.0</Expectation></Expectations>
</SubStep></SubSteps>
</Step></Steps>
</TestCase></TestCases>
</SubSequence><SubSequence
 D_LRBG=""
 Level=""
 Mode=""
 NID_LRBG=""
 Q_DIRLRBG=""
 Q_DIRTRAIN=""
 Q_DLRBG=""
 RBC_ID=""
 RBCPhone=""
 Name="Receive TSR gradient information"
>
<TestCases>
<TestCase
 Feature="0"
 Case="0"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Setup"
>
<ReqRef
 Id="3.11.12.5"
>
</ReqRef><Steps>
<Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 Name="Step1 - Initialize train data"
>
<SubSteps>
<SubStep
 Name="Sub-step1"
>
<Actions>
<Action>Kernel.InitializeTestEnvironment()</Action></Actions>
</SubStep></SubSteps>
</Step><Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 Name="Step2 - Setup train data"
>
<SubSteps>
<SubStep
 Name="Sub-step1"
>
<Actions>
<Action>BTM.LRBG&lt;- BTM.BaliseGroup{
  NID=&gt;2123,
  Orientation=&gt;Orientation.Nominal,
  Position=&gt;BTM.Position{
    OverReadingAmountOdo=&gt;19.0,
    Position=&gt;17000.0,
    UnderReadingAmountOdo=&gt;18.0
  }
}</Action><Action>BTM.Message &lt;- Messages.EUROBALISE.Message
{
    Q_UPDOWN=&gt; Messages.Q_UPDOWN.Up_link_telegram,
    M_VERSION=&gt;1,
    Q_MEDIA=&gt;Messages.Q_MEDIA.Balise,
    N_PIG=&gt;1,
    N_TOTAL=&gt;1,
    M_DUP=&gt;Messages.M_DUP.No_duplicates,
    M_MCOUNT=&gt;4,
    NID_C=&gt;140,
    NID_BG=&gt;2124,
    Q_LINK=&gt;Messages.Q_LINK.Linked
}</Action><Action>Odometry.NominalDistance &lt;- 20000.0</Action><Action>Kernel.TSR.TSRs &lt;- []</Action><Action>Kernel.TrainData.TrainData.Value.M_rotating_nom &lt;- 5.0</Action><Action>Kernel.TrackDescription.Gradient.Gradients &lt;- []</Action><Action>Kernel.TrackDescription.Gradient.DefaultGradientForTSR &lt;- EMPTY</Action><Action>Odometry.Accuracy &lt;- Odometry.OdometerAccuracy
{
    D_ura =&gt; 28.0,
    D_ora =&gt; 21.0,
    V_ora =&gt; 0.0,
    V_ura =&gt; 0.0
}</Action><Action>Kernel.TrainData.TrainData.Value.TrainLength &lt;- 100.0 </Action></Actions>
</SubStep></SubSteps>
</Step><Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 Name="Step3 - Receive gradient profile for temporary speed restriction"
>
<SubSteps>
<SubStep
 Name="Sub-step1"
>
<Actions>
<Action>BTM.Message &lt;- Messages.EUROBALISE.Message
{
    Q_UPDOWN=&gt; Messages.Q_UPDOWN.Up_link_telegram,
    M_VERSION=&gt;1,
    Q_MEDIA=&gt;Messages.Q_MEDIA.Balise,
    N_PIG=&gt;2,
    N_TOTAL=&gt;1,
    M_DUP=&gt;Messages.M_DUP.No_duplicates,
    M_MCOUNT=&gt;4,
    NID_C=&gt;140,
    NID_BG=&gt;2124,
    Q_LINK=&gt;Messages.Q_LINK.Unlinked,
    Sequence1=&gt;
    [
        Messages.EUROBALISE.SubStructure1
        {
            TRACK_TO_TRAIN=&gt;Messages.PACKET.TRACK_TO_TRAIN.Message
            {
                DEFAULT_GRADIENT_FOR_TEMPORARY_SPEED_RESTRICTION =&gt; Messages.PACKET.TRACK_TO_TRAIN.DEFAULT_GRADIENT_FOR_TEMPORARY_SPEED_RESTRICTION.Message
                {
                    NID_PACKET=&gt;141,
                    Q_DIR=&gt;Messages.Q_DIR.Nominal,
                    L_PACKET=&gt;400,
                    Q_GDIR =&gt; Messages.Q_GDIR.downhill,
                    G_TSR =&gt; 30
               }
            }
        }
    ]
}</Action></Actions>
<Expectations>
<Expectation
 Kind="Instantaneous"
>Available ( Kernel.TrackDescription.Gradient.DefaultGradientForTSR )</Expectation><Expectation
 Kind="Instantaneous"
>Kernel.TrackDescription.Gradient.DefaultGradientForTSR.Gradient == -30.0</Expectation></Expectations>
</SubStep></SubSteps>
</Step><Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 Name="Step4 - Check gradient profile function"
>
<SubSteps>
<SubStep
 Name="Sub-step1"
>
<Expectations>
<Expectation
 Kind="Instantaneous"
>Kernel.TrackDescription.Gradient.GradientProfile ( Distance =&gt; 1000.0 ) == 0.0 </Expectation></Expectations>
</SubStep></SubSteps>
</Step></Steps>
</TestCase><TestCase
 Feature="0"
 Case="0"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Provide a TSR"
>
<ReqRef
 Id="3.13.4.1.3"
>
</ReqRef><Steps>
<Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 Name="Step1 - Keep the train orientation without linking"
>
<SubSteps>
<SubStep
 Name="Sub-step1"
>
<Actions>
<Action>BTM.Message &lt;- Messages.EUROBALISE.Message
{
    Q_UPDOWN=&gt; Messages.Q_UPDOWN.Up_link_telegram,
    M_VERSION=&gt;1,
    Q_MEDIA=&gt;Messages.Q_MEDIA.Balise,
    N_PIG=&gt;1,
    N_TOTAL=&gt;1,
    M_DUP=&gt;Messages.M_DUP.No_duplicates,
    M_MCOUNT=&gt;4,
    NID_C=&gt;140,
    NID_BG=&gt;2125,
    Q_LINK=&gt;Messages.Q_LINK.Linked
}</Action></Actions>
</SubStep></SubSteps>
</Step><Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 Name="Step2 - provide a TSR"
>
<SubSteps>
<SubStep
 Name="Sub-step1"
>
<Actions>
<Action>BTM.Message &lt;- Messages.EUROBALISE.Message
{
    Q_UPDOWN=&gt; Messages.Q_UPDOWN.Up_link_telegram,
    M_VERSION=&gt;1,
    Q_MEDIA=&gt;Messages.Q_MEDIA.Balise,
    N_PIG=&gt;2,
    N_TOTAL=&gt;1,
    M_DUP=&gt;Messages.M_DUP.No_duplicates,
    M_MCOUNT=&gt;4,
    NID_C=&gt;140,
    NID_BG=&gt;2125,
    Q_LINK=&gt;Messages.Q_LINK.Unlinked,
    Sequence1=&gt;
    [
        Messages.EUROBALISE.SubStructure1
        {
            TRACK_TO_TRAIN=&gt;Messages.PACKET.TRACK_TO_TRAIN.Message
            {
                TEMPORARY_SPEED_RESTRICTION =&gt; Messages.PACKET.TRACK_TO_TRAIN.TEMPORARY_SPEED_RESTRICTION.Message
                {
                    NID_PACKET=&gt;8,
                    Q_DIR=&gt;Messages.Q_DIR.Nominal,
                    L_PACKET=&gt;400,
                    Q_SCALE=&gt;Messages.Q_SCALE._1_m_scaleC,
                    D_TSR =&gt; 4000,
                    L_TSR =&gt; 1500,
                    NID_TSR =&gt; 1515,
                    Q_FRONT =&gt; Messages.Q_FRONT.No_train_length_delay_on_validity_end_point_of_profile_element ,
                    V_TSR =&gt; 5
                }
            }
        }
    ]
}</Action></Actions>
<Expectations>
<Expectation
 Kind="Instantaneous"
>Kernel.TSR.CurrentTargetDueToTSR()</Expectation><Expectation
 Kind="Instantaneous"
>Kernel.TrackDescription.Gradient.GradientProfile ( Distance =&gt; 1000.0 ) == -30.0</Expectation></Expectations>
</SubStep></SubSteps>
</Step></Steps>
</TestCase><TestCase
 Feature="0"
 Case="0"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Provide a new TSR gradient information"
>
<ReqRef
 Id="3.11.12.6"
>
</ReqRef><Steps>
<Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 Name="Step1 - Setup gradient profile for temporary speed restriction"
>
<SubSteps>
<SubStep
 Name="Sub-step1"
>
<Actions>
<Action>BTM.Message &lt;- Messages.EUROBALISE.Message
{
    Q_UPDOWN=&gt; Messages.Q_UPDOWN.Up_link_telegram,
    M_VERSION=&gt;1,
    Q_MEDIA=&gt;Messages.Q_MEDIA.Balise,
    N_PIG=&gt;1,
    N_TOTAL=&gt;0,
    M_DUP=&gt;Messages.M_DUP.No_duplicates,
    M_MCOUNT=&gt;4,
    NID_C=&gt;140,
    NID_BG=&gt;2126,
    Q_LINK=&gt;Messages.Q_LINK.Unlinked,
    Sequence1=&gt;
    [
        Messages.EUROBALISE.SubStructure1
        {
            TRACK_TO_TRAIN=&gt;Messages.PACKET.TRACK_TO_TRAIN.Message
            {
                DEFAULT_GRADIENT_FOR_TEMPORARY_SPEED_RESTRICTION =&gt; Messages.PACKET.TRACK_TO_TRAIN.DEFAULT_GRADIENT_FOR_TEMPORARY_SPEED_RESTRICTION.Message
                {
                    NID_PACKET=&gt;141,
                    Q_DIR=&gt;Messages.Q_DIR.Nominal,
                    L_PACKET=&gt;400,
                    Q_GDIR =&gt; Messages.Q_GDIR.downhill,
                    G_TSR =&gt; 40
               }
            }
        }
    ]
}</Action></Actions>
<Expectations>
<Expectation
 Kind="Instantaneous"
>Kernel.TrackDescription.Gradient.DefaultGradientForTSR.Gradient == -40.0</Expectation><Expectation
 Kind="Instantaneous"
>Kernel.TrackDescription.Gradient.GradientProfile ( Distance =&gt; 1000.0 ) == -40.0</Expectation></Expectations>
</SubStep></SubSteps>
</Step></Steps>
</TestCase></TestCases>
</SubSequence><SubSequence
 D_LRBG=""
 Level=""
 Mode=""
 NID_LRBG=""
 Q_DIRLRBG=""
 Q_DIRTRAIN=""
 Q_DLRBG=""
 RBC_ID=""
 RBCPhone=""
 Name="Replace existing gradient information"
>
<TestCases>
<TestCase
 Feature="0"
 Case="0"
 Implemented="TRUE"
 Name="Test case1 - Partial replacement"
>
<ReqRef
 Id="3.7.3.1.b"
>
</ReqRef><ReqRef
 Id="3.11.12"
>
</ReqRef><Comment></Comment>
<Steps>
<Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 Name="Step1 - Initialize train data"
>
<SubSteps>
<SubStep
 Name="Sub-step1"
>
<Actions>
<Action>Kernel.InitializeTestEnvironment()</Action></Actions>
</SubStep></SubSteps>
</Step><Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 Name="Step2 - Setup"
>
<SubSteps>
<SubStep
 Name="Sub-step1"
>
<Actions>
<Action>Kernel.TrackDescription.Gradient.Gradients &lt;- []</Action><Action>BTM.LRBG&lt;- BTM.BaliseGroup{
  NID=&gt;9616,
  Orientation=&gt;Orientation.Nominal,
  Position=&gt;BTM.Position{
    OverReadingAmountOdo=&gt; 2.0,
    Position=&gt;4000.0,
    UnderReadingAmountOdo=&gt;7.0
  }
}</Action></Actions>
</SubStep></SubSteps>
</Step><Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 Name="Step3 - Receive gradient profile"
>
<Comment></Comment>
<SubSteps>
<SubStep
 Name="Sub-step1"
>
<Actions>
<Action>BTM.Message &lt;- Messages.EUROBALISE.Message
{
    Q_UPDOWN=&gt; Messages.Q_UPDOWN.Up_link_telegram,
    M_VERSION=&gt;1,
    Q_MEDIA=&gt;Messages.Q_MEDIA.Balise,
    N_PIG=&gt;1,
    N_TOTAL=&gt;0,
    M_DUP=&gt;Messages.M_DUP.No_duplicates,
    M_MCOUNT=&gt;4,
    NID_C=&gt;140,
    NID_BG=&gt;2124,
    Q_LINK=&gt;Messages.Q_LINK.Unlinked,
    Sequence1=&gt;
    [
        Messages.EUROBALISE.SubStructure1
        {
            TRACK_TO_TRAIN=&gt;Messages.PACKET.TRACK_TO_TRAIN.Message
            {
                GRADIENT_PROFILE =&gt; Messages.PACKET.TRACK_TO_TRAIN.GRADIENT_PROFILE.Message
                {
                    NID_PACKET=&gt;21,
                    Q_DIR=&gt;Messages.Q_DIR.Nominal,
                    L_PACKET=&gt;400,
                    Q_SCALE=&gt;Messages.Q_SCALE._1_m_scaleC,
                    D_GRADIENT =&gt; 4000,
                    Q_GDIR =&gt; Messages.Q_GDIR.uphill,
                    G_A =&gt; 2,
                    N_ITER =&gt; 3,
                    Sequence1 =&gt; [
                      Messages.PACKET.TRACK_TO_TRAIN.GRADIENT_PROFILE.SubStructure1 {
                        D_GRADIENT =&gt; 2000,
                        Q_GDIR =&gt; Messages.Q_GDIR.downhill,
                        G_A =&gt; 1
                      },
                      Messages.PACKET.TRACK_TO_TRAIN.GRADIENT_PROFILE.SubStructure1 {
                        D_GRADIENT =&gt; 1000,
                        Q_GDIR =&gt; Messages.Q_GDIR.downhill,
                        G_A =&gt; 4
                      },
                      Messages.PACKET.TRACK_TO_TRAIN.GRADIENT_PROFILE.SubStructure1 {
                        D_GRADIENT =&gt; 5000,
                        Q_GDIR =&gt; Messages.Q_GDIR.uphill,
                        G_A =&gt; 255
                      }
                    ]
                }
            }
        }
    ]
}</Action></Actions>
<Expectations>
<Expectation
 Kind="Instantaneous"
>(FIRST_IN Kernel.TrackDescription.Gradient.Gradients).Location == 4000.0</Expectation><Expectation
 Kind="Instantaneous"
 DeadLine="1"
>(COUNT Kernel.TrackDescription.Gradient.Gradients) == 4</Expectation><Expectation
 Kind="Instantaneous"
 DeadLine="1"
>(LAST_IN Kernel.TrackDescription.Gradient.Gradients).Location == 12000.0</Expectation></Expectations>
</SubStep></SubSteps>
</Step><Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 TranslationRequired="FALSE"
 Name="Step4 - Receive new gradient profile with partial overwriting"
>
<Comment>Keep in mind: D_Gradient is an incemental value -- but Kernel.TrackDescription.Gradient.GradientInfo.Location holds an absolute value.</Comment>
<SubSteps>
<SubStep
 Name="Sub-step1"
>
<Actions>
<Action>BTM.Message &lt;- Messages.EUROBALISE.Message
{
    Q_UPDOWN=&gt; Messages.Q_UPDOWN.Up_link_telegram,
    M_VERSION=&gt;1,
    Q_MEDIA=&gt;Messages.Q_MEDIA.Balise,
    N_PIG=&gt;1,
    N_TOTAL=&gt;0,
    M_DUP=&gt;Messages.M_DUP.No_duplicates,
    M_MCOUNT=&gt;4,
    NID_C=&gt;140,
    NID_BG=&gt;2124,
    Q_LINK=&gt;Messages.Q_LINK.Unlinked,
    Sequence1=&gt;
    [
        Messages.EUROBALISE.SubStructure1
        {
            TRACK_TO_TRAIN=&gt;Messages.PACKET.TRACK_TO_TRAIN.Message
            {
                GRADIENT_PROFILE =&gt; Messages.PACKET.TRACK_TO_TRAIN.GRADIENT_PROFILE.Message
                {
                    NID_PACKET=&gt;21,
                    Q_DIR=&gt;Messages.Q_DIR.Nominal,
                    L_PACKET=&gt;400,
                    Q_SCALE=&gt;Messages.Q_SCALE._1_m_scaleC,
                    D_GRADIENT =&gt; 6000,
                    Q_GDIR =&gt; Messages.Q_GDIR.uphill,
                    G_A =&gt; 3,
                    N_ITER =&gt; 1,
                    Sequence1 =&gt; [
                      Messages.PACKET.TRACK_TO_TRAIN.GRADIENT_PROFILE.SubStructure1 {
                        D_GRADIENT =&gt; 1000,
                        Q_GDIR =&gt; Messages.Q_GDIR.downhill,
                        G_A =&gt; 2
                      }
                    ]
                }
            }
        }
    ]
}</Action></Actions>
<Expectations>
<Expectation
 Kind="Instantaneous"
 DeadLine="1"
>(COUNT Kernel.TrackDescription.Gradient.Gradients) == 3</Expectation><Expectation
 Kind="Instantaneous"
 DeadLine="1"
>(LAST_IN Kernel.TrackDescription.Gradient.Gradients).Location == 7000.0</Expectation><Expectation
 Kind="Instantaneous"
 DeadLine="1"
>( FIRST_IN Kernel.TrackDescription.Gradient.Gradients).Location == 4000.0</Expectation></Expectations>
</SubStep></SubSteps>
</Step></Steps>
</TestCase><TestCase
 Feature="0"
 Case="0"
 Implemented="TRUE"
 Name="Test case2 - Complete replacement"
>
<ReqRef
 Id="3.7.3.1.b"
>
</ReqRef><ReqRef
 Id="3.11.12"
>
</ReqRef><Steps>
<Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 Name="Step1 - Initialize train data"
>
<SubSteps>
<SubStep
 Name="Sub-step1"
>
<Actions>
<Action>Kernel.InitializeTestEnvironment()</Action></Actions>
</SubStep></SubSteps>
</Step><Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 Name="Step2 - Setup"
>
<SubSteps>
<SubStep
 Name="Sub-step1"
>
<Actions>
<Action>Kernel.TrackDescription.Gradient.Gradients &lt;- []</Action><Action>BTM.LRBG&lt;- BTM.BaliseGroup{
  NID=&gt;9616,
  Orientation=&gt;Orientation.Nominal,
  Position=&gt;BTM.Position{
    OverReadingAmountOdo=&gt; 2.0,
    Position=&gt;4000.0,
    UnderReadingAmountOdo=&gt;7.0
  }
}</Action></Actions>
</SubStep></SubSteps>
</Step><Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 Name="Step3 - Receive gradient profile"
>
<Comment></Comment>
<SubSteps>
<SubStep
 Name="Sub-step1"
>
<Actions>
<Action>BTM.Message &lt;- Messages.EUROBALISE.Message
{
    Q_UPDOWN=&gt; Messages.Q_UPDOWN.Up_link_telegram,
    M_VERSION=&gt;1,
    Q_MEDIA=&gt;Messages.Q_MEDIA.Balise,
    N_PIG=&gt;1,
    N_TOTAL=&gt;0,
    M_DUP=&gt;Messages.M_DUP.No_duplicates,
    M_MCOUNT=&gt;4,
    NID_C=&gt;140,
    NID_BG=&gt;2124,
    Q_LINK=&gt;Messages.Q_LINK.Unlinked,
    Sequence1=&gt;
    [
        Messages.EUROBALISE.SubStructure1
        {
            TRACK_TO_TRAIN=&gt;Messages.PACKET.TRACK_TO_TRAIN.Message
            {
                GRADIENT_PROFILE =&gt; Messages.PACKET.TRACK_TO_TRAIN.GRADIENT_PROFILE.Message
                {
                    NID_PACKET=&gt;21,
                    Q_DIR=&gt;Messages.Q_DIR.Nominal,
                    L_PACKET=&gt;400,
                    Q_SCALE=&gt;Messages.Q_SCALE._1_m_scaleC,
                    D_GRADIENT =&gt; 4000,
                    Q_GDIR =&gt; Messages.Q_GDIR.uphill,
                    G_A =&gt; 2,
                    N_ITER =&gt; 3,
                    Sequence1 =&gt; [
                      Messages.PACKET.TRACK_TO_TRAIN.GRADIENT_PROFILE.SubStructure1 {
                        D_GRADIENT =&gt; 2000,
                        Q_GDIR =&gt; Messages.Q_GDIR.downhill,
                        G_A =&gt; 1
                      },
                      Messages.PACKET.TRACK_TO_TRAIN.GRADIENT_PROFILE.SubStructure1 {
                        D_GRADIENT =&gt; 1000,
                        Q_GDIR =&gt; Messages.Q_GDIR.downhill,
                        G_A =&gt; 4
                      },
                      Messages.PACKET.TRACK_TO_TRAIN.GRADIENT_PROFILE.SubStructure1 {
                        D_GRADIENT =&gt; 5000,
                        Q_GDIR =&gt; Messages.Q_GDIR.uphill,
                        G_A =&gt; 255
                      }
                    ]
                }
            }
        }
    ]
}</Action></Actions>
<Expectations>
<Expectation
 Kind="Instantaneous"
>(FIRST_IN Kernel.TrackDescription.Gradient.Gradients).Location == 4000.0</Expectation><Expectation
 Kind="Instantaneous"
 DeadLine="1"
>(COUNT Kernel.TrackDescription.Gradient.Gradients) == 4</Expectation><Expectation
 Kind="Instantaneous"
 DeadLine="1"
>(LAST_IN Kernel.TrackDescription.Gradient.Gradients).Location == 12000.0</Expectation></Expectations>
</SubStep></SubSteps>
</Step><Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 TranslationRequired="FALSE"
 Name="Step4 - Receive new gradient profile with complete overwriting"
>
<Comment>Keep in mind: D_Gradient is an incemental value -- but Kernel.TrackDescription.Gradient.GradientInfo.Location holds an absolute value.</Comment>
<SubSteps>
<SubStep
 Name="Sub-step1"
>
<Actions>
<Action>BTM.Message &lt;- Messages.EUROBALISE.Message
{
    Q_UPDOWN=&gt; Messages.Q_UPDOWN.Up_link_telegram,
    M_VERSION=&gt;1,
    Q_MEDIA=&gt;Messages.Q_MEDIA.Balise,
    N_PIG=&gt;1,
    N_TOTAL=&gt;0,
    M_DUP=&gt;Messages.M_DUP.No_duplicates,
    M_MCOUNT=&gt;4,
    NID_C=&gt;140,
    NID_BG=&gt;2124,
    Q_LINK=&gt;Messages.Q_LINK.Unlinked,
    Sequence1=&gt;
    [
        Messages.EUROBALISE.SubStructure1
        {
            TRACK_TO_TRAIN=&gt;Messages.PACKET.TRACK_TO_TRAIN.Message
            {
                GRADIENT_PROFILE =&gt; Messages.PACKET.TRACK_TO_TRAIN.GRADIENT_PROFILE.Message
                {
                    NID_PACKET=&gt;21,
                    Q_DIR=&gt;Messages.Q_DIR.Nominal,
                    L_PACKET=&gt;400,
                    Q_SCALE=&gt;Messages.Q_SCALE._1_m_scaleC,
                    D_GRADIENT =&gt; 3000,
                    Q_GDIR =&gt; Messages.Q_GDIR.uphill,
                    G_A =&gt; 3,
                    N_ITER =&gt; 1,
                    Sequence1 =&gt; [
                      Messages.PACKET.TRACK_TO_TRAIN.GRADIENT_PROFILE.SubStructure1 {
                        D_GRADIENT =&gt; 1000,
                        Q_GDIR =&gt; Messages.Q_GDIR.downhill,
                        G_A =&gt; 2
                      }
                    ]
                }
            }
        }
    ]
}</Action></Actions>
<Expectations>
<Expectation
 Kind="Instantaneous"
 DeadLine="1"
>(COUNT Kernel.TrackDescription.Gradient.Gradients) == 2</Expectation><Expectation
 Kind="Instantaneous"
 DeadLine="1"
>(LAST_IN Kernel.TrackDescription.Gradient.Gradients).Location == 4000.0</Expectation><Expectation
 Kind="Instantaneous"
 DeadLine="1"
>( FIRST_IN Kernel.TrackDescription.Gradient.Gradients).Location == 3000.0</Expectation></Expectations>
</SubStep></SubSteps>
</Step></Steps>
</TestCase><TestCase
 Feature="0"
 Case="0"
 Implemented="TRUE"
 Name="Test case3 - No replacement"
>
<ReqRef
 Id="3.7.3.1.b"
>
</ReqRef><ReqRef
 Id="3.11.12"
>
</ReqRef><Comment></Comment>
<Steps>
<Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 Name="Step1 - Initialize train data"
>
<SubSteps>
<SubStep
 Name="Sub-step1"
>
<Actions>
<Action>Kernel.InitializeTestEnvironment()</Action></Actions>
</SubStep></SubSteps>
</Step><Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 Name="Step2 - Setup"
>
<SubSteps>
<SubStep
 Name="Sub-step1"
>
<Actions>
<Action>Kernel.TrackDescription.Gradient.Gradients &lt;- []</Action><Action>BTM.LRBG&lt;- BTM.BaliseGroup{
  NID=&gt;9616,
  Orientation=&gt;Orientation.Nominal,
  Position=&gt;BTM.Position{
    OverReadingAmountOdo=&gt; 2.0,
    Position=&gt;4000.0,
    UnderReadingAmountOdo=&gt;7.0
  }
}</Action></Actions>
</SubStep></SubSteps>
</Step><Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 Name="Step3 - Receive gradient profile"
>
<Comment></Comment>
<SubSteps>
<SubStep
 Name="Sub-step1"
>
<Actions>
<Action>BTM.Message &lt;- Messages.EUROBALISE.Message
{
    Q_UPDOWN=&gt; Messages.Q_UPDOWN.Up_link_telegram,
    M_VERSION=&gt;1,
    Q_MEDIA=&gt;Messages.Q_MEDIA.Balise,
    N_PIG=&gt;1,
    N_TOTAL=&gt;0,
    M_DUP=&gt;Messages.M_DUP.No_duplicates,
    M_MCOUNT=&gt;4,
    NID_C=&gt;140,
    NID_BG=&gt;2124,
    Q_LINK=&gt;Messages.Q_LINK.Unlinked,
    Sequence1=&gt;
    [
        Messages.EUROBALISE.SubStructure1
        {
            TRACK_TO_TRAIN=&gt;Messages.PACKET.TRACK_TO_TRAIN.Message
            {
                GRADIENT_PROFILE =&gt; Messages.PACKET.TRACK_TO_TRAIN.GRADIENT_PROFILE.Message
                {
                    NID_PACKET=&gt;21,
                    Q_DIR=&gt;Messages.Q_DIR.Nominal,
                    L_PACKET=&gt;400,
                    Q_SCALE=&gt;Messages.Q_SCALE._1_m_scaleC,
                    D_GRADIENT =&gt; 4000,
                    Q_GDIR =&gt; Messages.Q_GDIR.uphill,
                    G_A =&gt; 2,
                    N_ITER =&gt; 3,
                    Sequence1 =&gt; [
                      Messages.PACKET.TRACK_TO_TRAIN.GRADIENT_PROFILE.SubStructure1 {
                        D_GRADIENT =&gt; 2000,
                        Q_GDIR =&gt; Messages.Q_GDIR.downhill,
                        G_A =&gt; 1
                      },
                      Messages.PACKET.TRACK_TO_TRAIN.GRADIENT_PROFILE.SubStructure1 {
                        D_GRADIENT =&gt; 1000,
                        Q_GDIR =&gt; Messages.Q_GDIR.downhill,
                        G_A =&gt; 4
                      },
                      Messages.PACKET.TRACK_TO_TRAIN.GRADIENT_PROFILE.SubStructure1 {
                        D_GRADIENT =&gt; 5000,
                        Q_GDIR =&gt; Messages.Q_GDIR.uphill,
                        G_A =&gt; 255
                      }
                    ]
                }
            }
        }
    ]
}</Action></Actions>
<Expectations>
<Expectation
 Kind="Instantaneous"
>(FIRST_IN Kernel.TrackDescription.Gradient.Gradients).Location == 4000.0</Expectation><Expectation
 Kind="Instantaneous"
 DeadLine="1"
>(COUNT Kernel.TrackDescription.Gradient.Gradients) == 4</Expectation><Expectation
 Kind="Instantaneous"
 DeadLine="1"
>(LAST_IN Kernel.TrackDescription.Gradient.Gradients).Location == 12000.0</Expectation></Expectations>
</SubStep></SubSteps>
</Step><Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 TranslationRequired="FALSE"
 Name="Step4 - Receive new gradient profile with no overwriting"
>
<Comment>Keep in mind: D_Gradient is an incemental value -- but Kernel.TrackDescription.Gradient.GradientInfo.Location holds an absolute value.</Comment>
<SubSteps>
<SubStep
 Name="Sub-step1"
>
<Actions>
<Action>BTM.Message &lt;- Messages.EUROBALISE.Message
{
    Q_UPDOWN=&gt; Messages.Q_UPDOWN.Up_link_telegram,
    M_VERSION=&gt;1,
    Q_MEDIA=&gt;Messages.Q_MEDIA.Balise,
    N_PIG=&gt;1,
    N_TOTAL=&gt;0,
    M_DUP=&gt;Messages.M_DUP.No_duplicates,
    M_MCOUNT=&gt;4,
    NID_C=&gt;140,
    NID_BG=&gt;2124,
    Q_LINK=&gt;Messages.Q_LINK.Unlinked,
    Sequence1=&gt;
    [
        Messages.EUROBALISE.SubStructure1
        {
            TRACK_TO_TRAIN=&gt;Messages.PACKET.TRACK_TO_TRAIN.Message
            {
                GRADIENT_PROFILE =&gt; Messages.PACKET.TRACK_TO_TRAIN.GRADIENT_PROFILE.Message
                {
                    NID_PACKET=&gt;21,
                    Q_DIR=&gt;Messages.Q_DIR.Nominal,
                    L_PACKET=&gt;400,
                    Q_SCALE=&gt;Messages.Q_SCALE._1_m_scaleC,
                    D_GRADIENT =&gt; 13000,
                    Q_GDIR =&gt; Messages.Q_GDIR.uphill,
                    G_A =&gt; 3,
                    N_ITER =&gt; 1,
                    Sequence1 =&gt; [
                      Messages.PACKET.TRACK_TO_TRAIN.GRADIENT_PROFILE.SubStructure1 {
                        D_GRADIENT =&gt; 1000,
                        Q_GDIR =&gt; Messages.Q_GDIR.downhill,
                        G_A =&gt; 2
                      }
                    ]
                }
            }
        }
    ]
}</Action></Actions>
</SubStep></SubSteps>
</Step><Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 TranslationRequired="FALSE"
 Name="Step5 - Check that no overwriting has occured"
>
<SubSteps>
<SubStep
 Name="Sub-step1"
>
<Expectations>
<Expectation
 Kind="Instantaneous"
 DeadLine="1"
>( FIRST_IN Kernel.TrackDescription.Gradient.Gradients).Location == 4000.0</Expectation><Expectation
 Kind="Instantaneous"
 DeadLine="1"
>(COUNT Kernel.TrackDescription.Gradient.Gradients) == 6</Expectation><Expectation
 Kind="Instantaneous"
 DeadLine="1"
>(LAST_IN Kernel.TrackDescription.Gradient.Gradients).Location == 14000.0</Expectation></Expectations>
</SubStep></SubSteps>
</Step></Steps>
</TestCase></TestCases>
</SubSequence></SubSequences>
</Frame>
