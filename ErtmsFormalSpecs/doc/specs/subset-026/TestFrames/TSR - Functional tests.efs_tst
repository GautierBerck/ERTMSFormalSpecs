<Frame
 CycleDuration="Kernel.CycleDuration"
 Name="TSR - Functional tests"
>
<SubSequences>
<SubSequence
 D_LRBG=""
 Level=""
 Mode=""
 NID_LRBG=""
 Q_DIRLRBG=""
 Q_DIRTRAIN=""
 Q_DLRBG=""
 RBC_ID=""
 RBCPhone=""
 Name="Handle several TSRs"
>
<TestCases>
<TestCase
 Feature="0"
 Case="0"
 NeedsRequirement="FALSE"
 Name="Setup"
>
<Steps>
<Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 Name="Step1 - Setup"
>
<SubSteps>
<SubStep
 Name="Sub-step1"
>
<Actions>
<Action>Kernel.InitializeTestEnvironment()</Action></Actions>
</SubStep></SubSteps>
</Step></Steps>
</TestCase><TestCase
 Feature="0"
 Case="0"
 Implemented="TRUE"
 Name="Provide several TSRs"
>
<ReqRef
 Id="3b4583a1-b075-4b17-875f-25dea9123397"
>
</ReqRef><ReqRef
 Id="92457ea4-c640-4322-bf2c-027115a572b4"
>
</ReqRef><Steps>
<Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 Name="Step1 - Provide the first TSR"
>
<SubSteps>
<SubStep
 Name="Sub-step1"
>
<Actions>
<Action>BTM.Message &lt;- Messages.EUROBALISE.Message
{
    Q_UPDOWN=&gt; Messages.Q_UPDOWN.Up_link_telegram,
    M_VERSION=&gt;1,
    Q_MEDIA=&gt;Messages.Q_MEDIA.Balise,
    N_PIG=&gt;8,
    N_TOTAL=&gt;0,
    M_DUP=&gt;Messages.M_DUP.No_duplicates,
    M_MCOUNT=&gt;4,
    NID_C=&gt;140,
    NID_BG=&gt;2124,
    Q_LINK=&gt;Messages.Q_LINK.Linked,
    Sequence1=&gt;
    [
        Messages.EUROBALISE.SubStructure1
        {
            TRACK_TO_TRAIN=&gt;Messages.PACKET.TRACK_TO_TRAIN.Message
            {
                TEMPORARY_SPEED_RESTRICTION =&gt; Messages.PACKET.TRACK_TO_TRAIN.TEMPORARY_SPEED_RESTRICTION.Message
                {
                    NID_PACKET=&gt;65,
                    Q_DIR=&gt;Messages.Q_DIR.Nominal,
                    L_PACKET=&gt;400,
                    Q_SCALE=&gt;Messages.Q_SCALE._1_m_scaleC,
                    D_TSR =&gt; 4000,
                    L_TSR =&gt; 1500,
                    NID_TSR =&gt; 1515,
                    Q_FRONT =&gt; Messages.Q_FRONT.No_train_length_delay_on_validity_end_point_of_profile_element ,
                    V_TSR =&gt; 5
                }
            }
        }
    ]
}</Action><Action>Odometry.NominalDistance &lt;- 3050.0</Action><Action>BTM.LRBG&lt;- BTM.BaliseGroup
{
    NID=&gt;9616,
    Orientation=&gt;Orientation.Nominal,
    Position=&gt;BTM.Position
    {
        OverReadingAmountOdo=&gt;2.0,
        Position=&gt;3000.0,
        UnderReadingAmountOdo=&gt;3.0
    }
}</Action><Action>Kernel.TSR.TSRs &lt;- []</Action><Action>Kernel.TrainPosition.Position.DirectionalPositionInformation.TrainOrientation &lt;- Default.Orientation.Nominal</Action></Actions>
</SubStep></SubSteps>
</Step><Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 Name="Step2 - Check the first TSR"
>
<SubSteps>
<SubStep
 Name="Sub-step1"
>
<Expectations>
<Expectation
 Kind="Instantaneous"
>Kernel.TSR.SpeedRestrictions ( 3000.0 ) == BaseTypes.Speed.MaxSpeed</Expectation><Expectation
 Kind="Instantaneous"
>Kernel.TSR.SpeedRestrictions ( 4000.0 ) == 25.0</Expectation><Expectation
 Kind="Instantaneous"
>Kernel.TSR.SpeedRestrictions ( 5500.0 ) == BaseTypes.Speed.MaxSpeed</Expectation><Expectation
 Kind="Instantaneous"
>Kernel.TSR.SpeedRestrictions ( 5499.0 ) == 25.0</Expectation></Expectations>
</SubStep></SubSteps>
</Step><Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 Name="Step3 - Provide the second TSR"
>
<SubSteps>
<SubStep
 Name="Sub-step1"
>
<Actions>
<Action>BTM.Message &lt;- Messages.EUROBALISE.Message
{
    Q_UPDOWN=&gt; Messages.Q_UPDOWN.Up_link_telegram,
    M_VERSION=&gt;1,
    Q_MEDIA=&gt;Messages.Q_MEDIA.Balise,
    N_PIG=&gt;8,
    N_TOTAL=&gt;0,
    M_DUP=&gt;Messages.M_DUP.No_duplicates,
    M_MCOUNT=&gt;4,
    NID_C=&gt;140,
    NID_BG=&gt;2124,
    Q_LINK=&gt;Messages.Q_LINK.Linked,
    Sequence1=&gt;
    [
        Messages.EUROBALISE.SubStructure1
        {
            TRACK_TO_TRAIN=&gt;Messages.PACKET.TRACK_TO_TRAIN.Message
            {
                TEMPORARY_SPEED_RESTRICTION =&gt; Messages.PACKET.TRACK_TO_TRAIN.TEMPORARY_SPEED_RESTRICTION.Message
                {
                    NID_PACKET=&gt;65,
                    Q_DIR=&gt;Messages.Q_DIR.Nominal,
                    L_PACKET=&gt;400,
                    Q_SCALE=&gt;Messages.Q_SCALE._1_m_scaleC,
                    D_TSR =&gt; 3000,
                    L_TSR =&gt; 3000,
                    NID_TSR =&gt; 1516,
                    Q_FRONT =&gt; Messages.Q_FRONT.No_train_length_delay_on_validity_end_point_of_profile_element ,
                    V_TSR =&gt; 10
                }
            }
        }
    ]
}</Action></Actions>
</SubStep></SubSteps>
</Step><Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 Name="Step4 - Check the second TSR"
>
<SubSteps>
<SubStep
 Name="Sub-step1"
>
<Expectations>
<Expectation
 Kind="Instantaneous"
>Kernel.TSR.SpeedRestrictions ( 2000.0 ) == BaseTypes.Speed.MaxSpeed</Expectation><Expectation
 Kind="Instantaneous"
>Kernel.TSR.SpeedRestrictions ( 3000.0 ) == 50.0</Expectation><Expectation
 Kind="Instantaneous"
>Kernel.TSR.SpeedRestrictions ( 4000.0 ) == 25.0</Expectation><Expectation
 Kind="Instantaneous"
>Kernel.TSR.SpeedRestrictions ( 5500.0 ) == 50.0</Expectation><Expectation
 Kind="Instantaneous"
>Kernel.TSR.SpeedRestrictions ( 6000.0 ) == BaseTypes.Speed.MaxSpeed</Expectation></Expectations>
</SubStep></SubSteps>
</Step></Steps>
</TestCase><TestCase
 Feature="0"
 Case="0"
 Name="Revoke a TSR"
>
<ReqRef
 Id="1c1c2dc5-c171-456d-9a54-a4480effe5a4"
>
</ReqRef><ReqRef
 Id="609c3b11-43bc-4419-aaad-ec6b332308ba"
>
</ReqRef><ReqRef
 Id="55013479-ab89-4e12-969f-5efd86c44e17"
>
</ReqRef><Steps>
<Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 Name="Step1 - Provide revocation of the first TSR"
>
<SubSteps>
<SubStep
 Name="Sub-step1"
>
<Actions>
<Action>BTM.Message &lt;- Messages.EUROBALISE.Message
{
    Q_UPDOWN=&gt; Messages.Q_UPDOWN.Up_link_telegram,
    M_VERSION=&gt;1,
    Q_MEDIA=&gt;Messages.Q_MEDIA.Balise,
    N_PIG=&gt;8,
    N_TOTAL=&gt;0,
    M_DUP=&gt;Messages.M_DUP.No_duplicates,
    M_MCOUNT=&gt;4,
    NID_C=&gt;140,
    NID_BG=&gt;2124,
    Q_LINK=&gt;Messages.Q_LINK.Linked,
    Sequence1=&gt;
    [
        Messages.EUROBALISE.SubStructure1
        {
            TRACK_TO_TRAIN=&gt;Messages.PACKET.TRACK_TO_TRAIN.Message
            {
                TEMPORARY_SPEED_RESTRICTION_REVOCATION =&gt; Messages.PACKET.TRACK_TO_TRAIN.TEMPORARY_SPEED_RESTRICTION_REVOCATION.Message
                {
                    NID_PACKET=&gt;66,
                    Q_DIR=&gt;Messages.Q_DIR.Nominal,
                    L_PACKET=&gt;400,
                    NID_TSR =&gt; 1515
                }
            }
        }
    ]
}</Action></Actions>
</SubStep></SubSteps>
</Step><Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 Name="Step2 - Check TSR revoked"
>
<SubSteps>
<SubStep
 Name="Sub-step1"
>
<Expectations>
<Expectation
 Kind="Instantaneous"
>Kernel.TSR.SpeedRestrictions ( 4000.0 ) == 50.0</Expectation><Expectation
 Kind="Instantaneous"
>Kernel.TSR.SpeedRestrictions ( 5000.0 ) == 50.0</Expectation><Expectation
 Kind="Instantaneous"
>Kernel.TSR.SpeedRestrictions ( 6000.0 ) == BaseTypes.Speed.MaxSpeed</Expectation><Expectation
 Kind="Instantaneous"
>Kernel.TSR.SpeedRestrictions ( 3000.0 ) == 50.0</Expectation></Expectations>
</SubStep></SubSteps>
</Step></Steps>
</TestCase><TestCase
 Feature="0"
 Case="0"
 Name="Train passes the TSR"
>
<ReqRef
 Id="55013479-ab89-4e12-969f-5efd86c44e17"
>
</ReqRef><Steps>
<Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 Name="Step1 - Train passed the TSR"
>
<SubSteps>
<SubStep
 Name="Sub-step1"
>
<Actions>
<Action>Odometry.NominalDistance &lt;- (FIRST_IN Kernel.TSR.TSRs).Location + BaseTypes.LengthToDistance (Kernel.TSR.TSRLength(FIRST_IN Kernel.TSR.TSRs)) + BTM.LRBG.Position.Position</Action></Actions>
</SubStep></SubSteps>
</Step><Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 Name="Step2 - Check TSR is revoked"
>
<SubSteps>
<SubStep
 Name="Sub-step1"
>
<Expectations>
<Expectation
 Kind="Instantaneous"
>Kernel.TSR.SpeedRestrictions ( 3000.0 ) == BaseTypes.Speed.MaxSpeed</Expectation><Expectation
 Kind="Instantaneous"
>Kernel.TSR.SpeedRestrictions ( 6000.0 ) == BaseTypes.Speed.MaxSpeed</Expectation><Expectation
 Kind="Instantaneous"
>Kernel.TSR.SpeedRestrictions ( 4000.0 ) == BaseTypes.Speed.MaxSpeed</Expectation><Expectation
 Kind="Instantaneous"
>Kernel.TSR.SpeedRestrictions ( 5000.0 ) == BaseTypes.Speed.MaxSpeed</Expectation></Expectations>
</SubStep></SubSteps>
</Step></Steps>
</TestCase></TestCases>
</SubSequence><SubSequence
 D_LRBG=""
 Level=""
 Mode=""
 NID_LRBG=""
 Q_DIRLRBG=""
 Q_DIRTRAIN=""
 Q_DLRBG=""
 RBC_ID=""
 RBCPhone=""
 Name="Handle single TSR"
>
<TestCases>
<TestCase
 Feature="0"
 Case="0"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Setup"
>
<Steps>
<Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 Name="Step1 - Setup"
>
<SubSteps>
<SubStep
 Name="Sub-step1"
>
<Actions>
<Action>Kernel.InitializeTestEnvironment()</Action></Actions>
</SubStep></SubSteps>
</Step><Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 Name="Step2 - Provide TSR"
>
<SubSteps>
<SubStep
 Name="Sub-step1"
>
<Actions>
<Action>BTM.Message &lt;- Messages.EUROBALISE.Message
{
    Q_UPDOWN=&gt; Messages.Q_UPDOWN.Up_link_telegram,
    M_VERSION=&gt;1,
    Q_MEDIA=&gt;Messages.Q_MEDIA.Balise,
    N_PIG=&gt;8,
    N_TOTAL=&gt;0,
    M_DUP=&gt;Messages.M_DUP.No_duplicates,
    M_MCOUNT=&gt;4,
    NID_C=&gt;140,
    NID_BG=&gt;2124,
    Q_LINK=&gt;Messages.Q_LINK.Linked,
    Sequence1=&gt;
    [
        Messages.EUROBALISE.SubStructure1
        {
            TRACK_TO_TRAIN=&gt;Messages.PACKET.TRACK_TO_TRAIN.Message
            {
                TEMPORARY_SPEED_RESTRICTION =&gt; Messages.PACKET.TRACK_TO_TRAIN.TEMPORARY_SPEED_RESTRICTION.Message
                {
                    NID_PACKET=&gt;8,
                    Q_DIR=&gt;Messages.Q_DIR.Nominal,
                    L_PACKET=&gt;400,
                    Q_SCALE=&gt;Messages.Q_SCALE._1_m_scaleC,
                    D_TSR =&gt; 4000,
                    L_TSR =&gt; 1500,
                    NID_TSR =&gt; 255,
                    Q_FRONT =&gt; Messages.Q_FRONT.No_train_length_delay_on_validity_end_point_of_profile_element ,
                    V_TSR =&gt; 5
                }
            }
        }
    ]
}</Action><Action>Odometry.NominalDistance &lt;- 2000.0</Action><Action>BTM.LRBG&lt;- BTM.BaliseGroup
{
    NID=&gt;9616,
    Orientation=&gt;Orientation.Nominal,
    Position=&gt;BTM.Position
    {
        OverReadingAmountOdo=&gt;3.0,
        Position=&gt;1080.0,
        UnderReadingAmountOdo=&gt;3.0
    }
}</Action><Action>Kernel.TSR.TSRs &lt;- []</Action><Action>Kernel.TrainPosition.Position.DirectionalPositionInformation.TrainOrientation &lt;- Default.Orientation.Nominal</Action></Actions>
</SubStep></SubSteps>
</Step></Steps>
</TestCase><TestCase
 Feature="0"
 Case="0"
 Implemented="TRUE"
 Name="Ensure TSR is active"
>
<ReqRef
 Id="0ef0898e-cf23-489a-a1ec-efefda2bff98"
>
</ReqRef><Steps>
<Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 Name="Step1"
>
<SubSteps>
<SubStep
 Name="Sub-step1"
>
<Expectations>
<Expectation
 Kind="Instantaneous"
>Kernel.TSR.SpeedRestrictions ( 5499.9 ) == 25.0</Expectation><Expectation
 Kind="Instantaneous"
>Kernel.TSR.SpeedRestrictions ( 4000.0 ) == 25.0</Expectation><Expectation
 Kind="Instantaneous"
>Kernel.TSR.SpeedRestrictions ( 2920.0 ) == BaseTypes.Speed.MaxSpeed</Expectation><Expectation
 Kind="Instantaneous"
>Kernel.TSR.SpeedRestrictions ( 5500.0 ) == BaseTypes.Speed.MaxSpeed</Expectation><Expectation
 Kind="Instantaneous"
>Kernel.TSR.SpeedRestrictions ( 3999.9 ) == BaseTypes.Speed.MaxSpeed</Expectation></Expectations>
</SubStep></SubSteps>
</Step></Steps>
</TestCase></TestCases>
</SubSequence><SubSequence
 D_LRBG=""
 Level=""
 Mode=""
 NID_LRBG=""
 Q_DIRLRBG=""
 Q_DIRTRAIN=""
 Q_DLRBG=""
 RBC_ID=""
 RBCPhone=""
 Name="TSR depending on train length"
>
<TestCases>
<TestCase
 Feature="0"
 Case="0"
 Implemented="TRUE"
 Name="TSR depending on train length"
>
<ReqRef
 Id="3dd078b7-9ad0-407d-a57a-510c8a7213ad"
>
</ReqRef><ReqRef
 Id="49595724-3359-4536-a90e-542bc90ffc8e"
>
</ReqRef><Steps>
<Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 Name="Step1 - Setup"
>
<SubSteps>
<SubStep
 Name="Sub-step1"
>
<Actions>
<Action>Kernel.InitializeTestEnvironment()</Action></Actions>
</SubStep></SubSteps>
</Step><Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 Name="Step2 - Provide TSR"
>
<SubSteps>
<SubStep
 Name="Sub-step1"
>
<Actions>
<Action>BTM.Message &lt;- Messages.EUROBALISE.Message
{
    Q_UPDOWN=&gt; Messages.Q_UPDOWN.Up_link_telegram,
    M_VERSION=&gt;1,
    Q_MEDIA=&gt;Messages.Q_MEDIA.Balise,
    N_PIG=&gt;8,
    N_TOTAL=&gt;0,
    M_DUP=&gt;Messages.M_DUP.No_duplicates,
    M_MCOUNT=&gt;4,
    NID_C=&gt;140,
    NID_BG=&gt;2124,
    Q_LINK=&gt;Messages.Q_LINK.Linked,
    Sequence1=&gt;
    [
        Messages.EUROBALISE.SubStructure1
        {
            TRACK_TO_TRAIN=&gt;Messages.PACKET.TRACK_TO_TRAIN.Message
            {
                TEMPORARY_SPEED_RESTRICTION =&gt; Messages.PACKET.TRACK_TO_TRAIN.TEMPORARY_SPEED_RESTRICTION.Message
                {
                    NID_PACKET=&gt;8,
                    Q_DIR=&gt;Messages.Q_DIR.Nominal,
                    L_PACKET=&gt;400,
                    Q_SCALE=&gt;Messages.Q_SCALE._1_m_scaleC,
                    D_TSR =&gt; 4000,
                    L_TSR =&gt; 1500,
                    NID_TSR =&gt; 1515,
                    Q_FRONT =&gt;Messages.Q_FRONT.Train_length_delay_on_validity_end_point_of_profile_element ,
                    V_TSR =&gt; 5
                }
            }
        }
    ]
}</Action><Action>Odometry.NominalDistance &lt;- 2700.0</Action><Action>BTM.LRBG&lt;- BTM.BaliseGroup
{
    NID=&gt;9616,
    Orientation=&gt;Orientation.Nominal,
    Position=&gt;BTM.Position
    {
        OverReadingAmountOdo =&gt; 2.0,
        Position =&gt; 2000.0,
        UnderReadingAmountOdo =&gt; 1.0
    }
}</Action><Action>Kernel.TrainData.TrainData.Value.TrainLength &lt;- 150.0</Action><Action>Kernel.TSR.TSRs &lt;- []</Action><Action>Kernel.TrainPosition.Position.DirectionalPositionInformation.TrainOrientation &lt;- Default.Orientation.Nominal</Action></Actions>
</SubStep></SubSteps>
</Step><Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 Name="Step3 - Check TSR length"
>
<SubSteps>
<SubStep
 Name="Sub-step1"
>
<Expectations>
<Expectation
 Kind="Instantaneous"
>Kernel.TSR.SpeedRestrictions ( 3000.0 ) == BaseTypes.Speed.MaxSpeed</Expectation><Expectation
 Kind="Instantaneous"
>Kernel.TSR.SpeedRestrictions ( 4000.0 ) == 25.0</Expectation><Expectation
 Kind="Instantaneous"
>Kernel.TSR.SpeedRestrictions ( 5499.9 + 150.0 ) == 25.0</Expectation><Expectation
 Kind="Instantaneous"
>Kernel.TSR.SpeedRestrictions ( 5500.0 + 150.0 ) == BaseTypes.Speed.MaxSpeed</Expectation></Expectations>
</SubStep></SubSteps>
</Step></Steps>
</TestCase></TestCases>
</SubSequence><SubSequence
 D_LRBG=""
 Level=""
 Mode=""
 NID_LRBG=""
 Q_DIRLRBG=""
 Q_DIRTRAIN=""
 Q_DLRBG=""
 RBC_ID=""
 RBCPhone=""
 Name="Delete TSR when Orientation is changed"
>
<TestCases>
<TestCase
 Feature="0"
 Case="0"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Delete TSR when orientation is changed"
>
<ReqRef
 Id="291bf774-5d2e-4264-861b-84afd9fb4185"
>
</ReqRef><Steps>
<Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 Name="Step1 - Setup"
>
<SubSteps>
<SubStep
 Name="Sub-step1"
>
<Actions>
<Action>Kernel.InitializeTestEnvironment()</Action></Actions>
</SubStep></SubSteps>
</Step><Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 Name="Step2 - Provide TSR"
>
<SubSteps>
<SubStep
 Name="Sub-step1"
>
<Actions>
<Action>BTM.Message &lt;- Messages.EUROBALISE.Message
{
    Q_UPDOWN=&gt; Messages.Q_UPDOWN.Up_link_telegram,
    M_VERSION=&gt;1,
    Q_MEDIA=&gt;Messages.Q_MEDIA.Balise,
    N_PIG=&gt;8,
    N_TOTAL=&gt;0,
    M_DUP=&gt;Messages.M_DUP.No_duplicates,
    M_MCOUNT=&gt;4,
    NID_C=&gt;140,
    NID_BG=&gt;2124,
    Q_LINK=&gt;Messages.Q_LINK.Linked,
    Sequence1=&gt;
    [
        Messages.EUROBALISE.SubStructure1
        {
            TRACK_TO_TRAIN=&gt;Messages.PACKET.TRACK_TO_TRAIN.Message
            {
                TEMPORARY_SPEED_RESTRICTION =&gt; Messages.PACKET.TRACK_TO_TRAIN.TEMPORARY_SPEED_RESTRICTION.Message
                {
                    NID_PACKET=&gt;8,
                    Q_DIR=&gt;Messages.Q_DIR.Nominal,
                    L_PACKET=&gt;400,
                    Q_SCALE=&gt;Messages.Q_SCALE._1_m_scaleC,
                    D_TSR =&gt; 4000,
                    L_TSR =&gt; 1500,
                    NID_TSR =&gt; 1515,
                    Q_FRONT =&gt; Messages.Q_FRONT.No_train_length_delay_on_validity_end_point_of_profile_element ,
                    V_TSR =&gt; 5
                }
            }
        }
    ]
}</Action></Actions>
</SubStep></SubSteps>
</Step><Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 TranslationRequired="FALSE"
 Name="Step3 - Data check"
>
<SubSteps>
<SubStep
 Name="Sub-step1"
>
<Expectations>
<Expectation
 Kind="Instantaneous"
 DeadLine="1"
>Kernel.TSR.TSRs != []</Expectation><Expectation
 Kind="Instantaneous"
 DeadLine="1"
>THERE_IS_IN Kernel.TSR.TSRs | X.Id == 1515</Expectation></Expectations>
</SubStep></SubSteps>
</Step><Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 TranslationRequired="FALSE"
 Name="Step4 Change Orientation -&gt; Mode RV"
>
<SubSteps>
<SubStep
 Name="Sub-step1"
>
<Actions>
<Action>Kernel.Mode &lt;- Default.Mode.RV </Action></Actions>
</SubStep></SubSteps>
</Step><Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 TranslationRequired="FALSE"
 Name="Step5 Data check"
>
<SubSteps>
<SubStep
 Name="Sub-step1"
>
<Expectations>
<Expectation
 Kind="Instantaneous"
 DeadLine="1"
>Kernel.TSR.TSRs == []</Expectation></Expectations>
</SubStep></SubSteps>
</Step></Steps>
</TestCase></TestCases>
</SubSequence><SubSequence
 D_LRBG=""
 Level=""
 Mode=""
 NID_LRBG=""
 Q_DIRLRBG=""
 Q_DIRTRAIN=""
 Q_DLRBG=""
 RBC_ID=""
 RBCPhone=""
 Name="TSR shall not replace another with same identity"
>
<TestCases>
<TestCase
 Feature="0"
 Case="0"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="TSR shall not replace another with same identity"
>
<ReqRef
 Id="f7e20aa8-abb8-4da2-bb20-5ff57e4a56b9"
>
</ReqRef><Steps>
<Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 Name="Step1 - Setup"
>
<SubSteps>
<SubStep
 Name="Sub-step1"
>
<Actions>
<Action>Kernel.InitializeTestEnvironment()</Action></Actions>
</SubStep></SubSteps>
</Step><Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 Name="Step2 - Provide TSR"
>
<SubSteps>
<SubStep
 Name="Sub-step1"
>
<Actions>
<Action>BTM.Message &lt;- Messages.EUROBALISE.Message
{
    Q_UPDOWN=&gt; Messages.Q_UPDOWN.Up_link_telegram,
    M_VERSION=&gt;1,
    Q_MEDIA=&gt;Messages.Q_MEDIA.Balise,
    N_PIG=&gt;8,
    N_TOTAL=&gt;0,
    M_DUP=&gt;Messages.M_DUP.No_duplicates,
    M_MCOUNT=&gt;4,
    NID_C=&gt;140,
    NID_BG=&gt;2124,
    Q_LINK=&gt;Messages.Q_LINK.Linked,
    Sequence1=&gt;
    [
        Messages.EUROBALISE.SubStructure1
        {
            TRACK_TO_TRAIN=&gt;Messages.PACKET.TRACK_TO_TRAIN.Message
            {
                TEMPORARY_SPEED_RESTRICTION =&gt; Messages.PACKET.TRACK_TO_TRAIN.TEMPORARY_SPEED_RESTRICTION.Message
                {
                    NID_PACKET=&gt;8,
                    Q_DIR=&gt;Messages.Q_DIR.Nominal,
                    L_PACKET=&gt;400,
                    Q_SCALE=&gt;Messages.Q_SCALE._1_m_scaleC,
                    D_TSR =&gt; 4000,
                    L_TSR =&gt; 1500,
                    NID_TSR =&gt; 1515,
                    Q_FRONT =&gt; Messages.Q_FRONT.No_train_length_delay_on_validity_end_point_of_profile_element ,
                    V_TSR =&gt; 5
                }
            }
        }
    ]
}</Action></Actions>
<Expectations>
<Expectation
 Kind="Instantaneous"
 DeadLine="1"
>Kernel.TSR.TSRs != []</Expectation></Expectations>
</SubStep></SubSteps>
</Step><Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 TranslationRequired="FALSE"
 Name="Step3 - Provide a New TSR with different identity"
>
<SubSteps>
<SubStep
 Name="Sub-step1"
>
<Actions>
<Action>BTM.Message &lt;- Messages.EUROBALISE.Message
{
    Q_UPDOWN=&gt; Messages.Q_UPDOWN.Up_link_telegram,
    M_VERSION=&gt;1,
    Q_MEDIA=&gt;Messages.Q_MEDIA.Balise,
    N_PIG=&gt;8,
    N_TOTAL=&gt;0,
    M_DUP=&gt;Messages.M_DUP.No_duplicates,
    M_MCOUNT=&gt;4,
    NID_C=&gt;140,
    NID_BG=&gt;2124,
    Q_LINK=&gt;Messages.Q_LINK.Linked,
    Sequence1=&gt;
    [
        Messages.EUROBALISE.SubStructure1
        {
            TRACK_TO_TRAIN=&gt;Messages.PACKET.TRACK_TO_TRAIN.Message
            {
                TEMPORARY_SPEED_RESTRICTION =&gt; Messages.PACKET.TRACK_TO_TRAIN.TEMPORARY_SPEED_RESTRICTION.Message
                {
                    NID_PACKET=&gt;8,
                    Q_DIR=&gt;Messages.Q_DIR.Nominal,
                    L_PACKET=&gt;400,
                    Q_SCALE=&gt;Messages.Q_SCALE._1_m_scaleC,
                    D_TSR =&gt; 3000,
                    L_TSR =&gt; 1000,
                    NID_TSR =&gt; 1516,
                    Q_FRONT =&gt; Messages.Q_FRONT.No_train_length_delay_on_validity_end_point_of_profile_element ,
                    V_TSR =&gt; 5
                }
            }
        }
    ]
}</Action></Actions>
</SubStep></SubSteps>
</Step><Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 TranslationRequired="FALSE"
 Name="Step4 - Data check"
>
<SubSteps>
<SubStep
 Name="Sub-step1"
>
<Expectations>
<Expectation
 Kind="Instantaneous"
 DeadLine="1"
>Kernel.TSR.TSRs != []</Expectation><Expectation
 Kind="Instantaneous"
 DeadLine="1"
>THERE_IS_IN Kernel.TSR.TSRs | X.Id == 1515</Expectation><Expectation
 Kind="Instantaneous"
 DeadLine="1"
>THERE_IS_IN Kernel.TSR.TSRs | X.Id == 1516</Expectation></Expectations>
</SubStep></SubSteps>
</Step></Steps>
</TestCase></TestCases>
</SubSequence><SubSequence
 D_LRBG=""
 Level=""
 Mode=""
 NID_LRBG=""
 Q_DIRLRBG=""
 Q_DIRTRAIN=""
 Q_DLRBG=""
 RBC_ID=""
 RBCPhone=""
 Name="New TSR shall replaced old TSR except if non revocable"
>
<TestCases>
<TestCase
 Feature="0"
 Case="0"
 Implemented="TRUE"
 Name="New TSR shall replaced old TSR except if non revocable"
>
<ReqRef
 Id="0b1bccdc-d6e1-4297-8b07-8f17f74db4cd"
>
</ReqRef><ReqRef
 Id="1c03e6a2-328c-4a04-83b6-be1892d19f38"
>
</ReqRef><Steps>
<Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 Name="Step1 - Setup"
>
<SubSteps>
<SubStep
 Name="Sub-step1"
>
<Actions>
<Action>Kernel.InitializeTestEnvironment()</Action></Actions>
</SubStep></SubSteps>
</Step><Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 Name="Step2 - Provide TSR"
>
<SubSteps>
<SubStep
 Name="Sub-step1"
>
<Actions>
<Action>BTM.Message &lt;- Messages.EUROBALISE.Message
{
    Q_UPDOWN=&gt; Messages.Q_UPDOWN.Up_link_telegram,
    M_VERSION=&gt;1,
    Q_MEDIA=&gt;Messages.Q_MEDIA.Balise,
    N_PIG=&gt;8,
    N_TOTAL=&gt;0,
    M_DUP=&gt;Messages.M_DUP.No_duplicates,
    M_MCOUNT=&gt;4,
    NID_C=&gt;140,
    NID_BG=&gt;2124,
    Q_LINK=&gt;Messages.Q_LINK.Linked,
    Sequence1=&gt;
    [
        Messages.EUROBALISE.SubStructure1
        {
            TRACK_TO_TRAIN=&gt;Messages.PACKET.TRACK_TO_TRAIN.Message
            {
                TEMPORARY_SPEED_RESTRICTION =&gt; Messages.PACKET.TRACK_TO_TRAIN.TEMPORARY_SPEED_RESTRICTION.Message
                {
                    NID_PACKET=&gt;8,
                    Q_DIR=&gt;Messages.Q_DIR.Nominal,
                    L_PACKET=&gt;400,
                    Q_SCALE=&gt;Messages.Q_SCALE._1_m_scaleC,
                    D_TSR =&gt; 4000,
                    L_TSR =&gt; 1500,
                    NID_TSR =&gt; 150,
                    Q_FRONT =&gt; Messages.Q_FRONT.No_train_length_delay_on_validity_end_point_of_profile_element ,
                    V_TSR =&gt; 5
                }
            }
        }
    ]
}</Action></Actions>
<Expectations>
<Expectation
 Kind="Instantaneous"
 DeadLine="1"
>THERE_IS_IN Kernel.TSR.TSRs |  ( X.Id == 150 AND X.Length == 1500.0 AND X.Location == 4000.0) </Expectation><Expectation
 Kind="Instantaneous"
 DeadLine="1"
>(COUNT Kernel.TSR.TSRs) == 1</Expectation></Expectations>
</SubStep></SubSteps>
</Step><Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 TranslationRequired="FALSE"
 Name="Step3 - New TSR with same Id"
>
<SubSteps>
<SubStep
 Name="Sub-step1"
>
<Actions>
<Action>BTM.Message &lt;- Messages.EUROBALISE.Message
{
    Q_UPDOWN=&gt; Messages.Q_UPDOWN.Up_link_telegram,
    M_VERSION=&gt;1,
    Q_MEDIA=&gt;Messages.Q_MEDIA.Balise,
    N_PIG=&gt;8,
    N_TOTAL=&gt;0,
    M_DUP=&gt;Messages.M_DUP.No_duplicates,
    M_MCOUNT=&gt;4,
    NID_C=&gt;140,
    NID_BG=&gt;2125,
    Q_LINK=&gt;Messages.Q_LINK.Linked,
    Sequence1=&gt;
    [
        Messages.EUROBALISE.SubStructure1
        {
            TRACK_TO_TRAIN=&gt;Messages.PACKET.TRACK_TO_TRAIN.Message
            {
                TEMPORARY_SPEED_RESTRICTION =&gt; Messages.PACKET.TRACK_TO_TRAIN.TEMPORARY_SPEED_RESTRICTION.Message
                {
                    NID_PACKET=&gt;8,
                    Q_DIR=&gt;Messages.Q_DIR.Nominal,
                    L_PACKET=&gt;400,
                    Q_SCALE=&gt;Messages.Q_SCALE._1_m_scaleC,
                    D_TSR =&gt; 3000,
                    L_TSR =&gt; 1000,
                    NID_TSR =&gt; 150,
                    Q_FRONT =&gt; Messages.Q_FRONT.No_train_length_delay_on_validity_end_point_of_profile_element ,
                    V_TSR =&gt; 5
                }
            }
        }
    ]
}</Action></Actions>
<Expectations>
<Expectation
 Kind="Instantaneous"
 DeadLine="1"
>THERE_IS_IN Kernel.TSR.TSRs |  ( X.Id == 150 AND X.Length == 1000.0 AND X.Location == 3000.0)</Expectation><Expectation
 Kind="Instantaneous"
 DeadLine="1"
>(COUNT Kernel.TSR.TSRs) == 1</Expectation></Expectations>
</SubStep></SubSteps>
</Step><Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 TranslationRequired="FALSE"
 Name="Step4 - New TSR with Non Revocable TSR"
>
<SubSteps>
<SubStep
 Name="Sub-step1"
>
<Actions>
<Action>BTM.Message &lt;- Messages.EUROBALISE.Message
{
    Q_UPDOWN=&gt; Messages.Q_UPDOWN.Up_link_telegram,
    M_VERSION=&gt;1,
    Q_MEDIA=&gt;Messages.Q_MEDIA.Balise,
    N_PIG=&gt;8,
    N_TOTAL=&gt;0,
    M_DUP=&gt;Messages.M_DUP.No_duplicates,
    M_MCOUNT=&gt;4,
    NID_C=&gt;140,
    NID_BG=&gt;2125,
    Q_LINK=&gt;Messages.Q_LINK.Linked,
    Sequence1=&gt;
    [
        Messages.EUROBALISE.SubStructure1
        {
            TRACK_TO_TRAIN=&gt;Messages.PACKET.TRACK_TO_TRAIN.Message
            {
                TEMPORARY_SPEED_RESTRICTION =&gt; Messages.PACKET.TRACK_TO_TRAIN.TEMPORARY_SPEED_RESTRICTION.Message
                {
                    NID_PACKET=&gt;8,
                    Q_DIR=&gt;Messages.Q_DIR.Nominal,
                    L_PACKET=&gt;400,
                    Q_SCALE=&gt;Messages.Q_SCALE._1_m_scaleC,
                    D_TSR =&gt; 3300,
                    L_TSR =&gt; 1300,
                    NID_TSR =&gt; 255,
                    Q_FRONT =&gt; Messages.Q_FRONT.No_train_length_delay_on_validity_end_point_of_profile_element ,
                    V_TSR =&gt; 5
                }
            }
        }
    ]
}</Action></Actions>
<Expectations>
<Expectation
 Kind="Instantaneous"
 DeadLine="1"
>THERE_IS_IN Kernel.TSR.TSRs |  ( X.Id == 255 AND X.Length == 1300.0 AND X.Location == 3300.0)</Expectation><Expectation
 Kind="Instantaneous"
 DeadLine="1"
>(COUNT Kernel.TSR.TSRs) == 2</Expectation></Expectations>
</SubStep></SubSteps>
</Step><Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 TranslationRequired="FALSE"
 Name="Step5 - New Non Revocable TSR"
>
<SubSteps>
<SubStep
 Name="SubStep1"
>
<Actions>
<Action>BTM.Message &lt;- Messages.EUROBALISE.Message
{
    Q_UPDOWN=&gt; Messages.Q_UPDOWN.Up_link_telegram,
    M_VERSION=&gt;1,
    Q_MEDIA=&gt;Messages.Q_MEDIA.Balise,
    N_PIG=&gt;8,
    N_TOTAL=&gt;0,
    M_DUP=&gt;Messages.M_DUP.No_duplicates,
    M_MCOUNT=&gt;4,
    NID_C=&gt;140,
    NID_BG=&gt;2125,
    Q_LINK=&gt;Messages.Q_LINK.Linked,
    Sequence1=&gt;
    [
        Messages.EUROBALISE.SubStructure1
        {
            TRACK_TO_TRAIN=&gt;Messages.PACKET.TRACK_TO_TRAIN.Message
            {
                TEMPORARY_SPEED_RESTRICTION =&gt; Messages.PACKET.TRACK_TO_TRAIN.TEMPORARY_SPEED_RESTRICTION.Message
                {
                    NID_PACKET=&gt;8,
                    Q_DIR=&gt;Messages.Q_DIR.Nominal,
                    L_PACKET=&gt;400,
                    Q_SCALE=&gt;Messages.Q_SCALE._1_m_scaleC,
                    D_TSR =&gt; 3500,
                    L_TSR =&gt; 2000,
                    NID_TSR =&gt; 255,
                    Q_FRONT =&gt; Messages.Q_FRONT.No_train_length_delay_on_validity_end_point_of_profile_element ,
                    V_TSR =&gt; 5
                }
            }
        }
    ]
}</Action></Actions>
<Expectations>
<Expectation
 Kind="Instantaneous"
 DeadLine="1"
>THERE_IS_IN Kernel.TSR.TSRs |  ( X.Id == 255 AND X.Length == 2000.0 AND X.Location == 3500.0)</Expectation><Expectation
 Kind="Instantaneous"
 DeadLine="1"
>(COUNT Kernel.TSR.TSRs) == 3</Expectation></Expectations>
</SubStep></SubSteps>
</Step></Steps>
</TestCase></TestCases>
</SubSequence></SubSequences>
</Frame>
