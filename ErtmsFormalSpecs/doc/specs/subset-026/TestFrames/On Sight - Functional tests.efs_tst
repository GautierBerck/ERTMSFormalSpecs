<Frame
 CycleDuration="0.1"
 Name="On Sight - Functional tests"
>
<SubSequences>
<SubSequence
 D_LRBG=""
 Level=""
 Mode=""
 NID_LRBG=""
 Q_DIRLRBG=""
 Q_DIRTRAIN=""
 Q_DLRBG=""
 RBC_ID=""
 RBCPhone=""
 Name="On Sight Mode Profile"
>
<TestCases>
<TestCase
 Feature="0"
 Case="0"
 Implemented="TRUE"
 Name="OS Mode Profile received"
>
<ReqRef
 Id="5.9.2.1"
>
</ReqRef>
<ReqRef
 Id="5.9.1.1"
>
</ReqRef>
<Steps>
<Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 TranslationRequired="FALSE"
 Name="Step1 - Setup"
>
<SubSteps>
<SubStep
 Name="Sub-step1"
>
<Actions>
<Action>Kernel.InitializeTestEnvironment()</Action>
</Actions>
</SubStep></SubSteps>
</Step><Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 TranslationRequired="FALSE"
 Name="Step2 - Mode SR + Level 1"
>
<Comment>Actions needed for enter OS mode</Comment>
<SubSteps>
<SubStep
 Name="Sub-step1"
>
<Actions>
<Action>Kernel.Level.DataState &lt;- Default.DataState.Valid</Action>
<Action>Kernel.Level.Value &lt;- Default.Level.L1</Action>
<Action>Kernel.Mode &lt;- Default.Mode.SR</Action>
</Actions>
</SubStep></SubSteps>
</Step><Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 TranslationRequired="FALSE"
 Name="Step3 - BTM.Message ModeProfile OS + Train far from OS Mode area"
>
<Comment>Odometry.Nominalposition == 180 to be before the OS area. In this case the OS area is at 200 ( Default Odometry.NominalPosition == 150 + 50 of ModeProfile ) </Comment>
<SubSteps>
<SubStep
 Name="Sub-step1"
>
<Actions>
<Action>BTM.Message &lt;- Messages.EUROBALISE.Message
{
    Q_UPDOWN=&gt; Messages.Q_UPDOWN.Up_link_telegram,
    M_VERSION=&gt;1,
    Q_MEDIA=&gt;Messages.Q_MEDIA.Balise,
    N_PIG=&gt;0,
    N_TOTAL=&gt;0,
    M_DUP=&gt;Messages.M_DUP.No_duplicates,
    M_MCOUNT=&gt;4,
    NID_C=&gt;140,
    NID_BG=&gt;2124,
    Q_LINK=&gt;Messages.Q_LINK.Linked,
    Sequence1=&gt;
    [ 
       
 Messages.EUROBALISE.SubStructure1
        {
            TRACK_TO_TRAIN=&gt;Messages.PACKET.TRACK_TO_TRAIN.Message
            {
                 LEVEL_1_MOVEMENT_AUTHORITY=&gt;Messages.PACKET.TRACK_TO_TRAIN.LEVEL_1_MOVEMENT_AUTHORITY.Message
                {
                    NID_PACKET=&gt;12,
                    Q_DIR=&gt;Messages.Q_DIR.Nominal,
                    L_PACKET=&gt;400,
                    Q_SCALE=&gt;Messages.Q_SCALE._1_m_scaleC,
                    V_MAIN=&gt;16,
                    V_LOA=&gt;8,
                    T_LOA=&gt;200,
                    N_ITER=&gt;0,
                    Sequence1=&gt;[],
                    L_ENDSECTION=&gt;1000,
                    Q_SECTIONTIMER=&gt;Messages.Q_SECTIONTIMER.No_Section_Timer_information,
                    T_SECTIONTIMER=&gt;0,
                    D_SECTIONTIMERSTOPLOC=&gt;0,
                    Q_ENDTIMER=&gt;Messages.Q_ENDTIMER.No_End_section_timer_information,
                    T_ENDTIMER=&gt;0,
                    D_ENDTIMERSTARTLOC=&gt;0,
                    Q_DANGERPOINT=&gt;Messages.Q_DANGERPOINT.Danger_point_information_to_follow,
                    D_DP=&gt;12000,
                    V_RELEASEDP=&gt;5,
                    Q_OVERLAP=&gt;Messages.Q_OVERLAP.No_overlap_information,
                    D_STARTOL=&gt;0,
                    T_OL=&gt;0,
                    D_OL=&gt;0,
                    V_RELEASEOL=&gt;0
                }
            }
         },
Messages.EUROBALISE.SubStructure1
        {
            TRACK_TO_TRAIN=&gt;Messages.PACKET.TRACK_TO_TRAIN.Message
            {
                MODE_PROFILE=&gt;Messages.PACKET.TRACK_TO_TRAIN.MODE_PROFILE.Message
                {
                   D_MAMODE=&gt;50,
                   L_ACKMAMODE=&gt;500,
                   L_MAMODE=&gt;100,
                   L_PACKET=&gt;0,
                   M_MAMODE=&gt;Messages.M_MAMODE.On_Sight,               
                   N_ITER=&gt;0,
                   NID_PACKET=&gt;80,
                   Q_DIR=&gt; Messages.Q_DIR.Nominal,
                   Q_MAMODE=&gt; Messages.Q_MAMODE.as_both_the_EOA_and_SvL__instead_of_the_EOA_and_SvL_given_by_the_MA,
                   Q_SCALE=&gt;Messages.Q_SCALE._1_m_scaleC,
                   V_MAMODE=&gt;1,
                   Sequence1=&gt;[] 
                }
           }
               }
                           ]
}</Action>
<Action>Odometry.NominalDistance &lt;- 180.0</Action>
</Actions>
</SubStep><SubStep
 Name="Sub-step2"
>
<Expectations>
<Expectation
 Kind="Instantaneous"
 DeadLine="1"
>Kernel.Mode != Default.Mode.OS</Expectation></Expectations>
</SubStep></SubSteps>
</Step><Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 TranslationRequired="FALSE"
 Name="Step4 - BTM.Message ModeProfile OS + train near OS Mode area"
>
<Comment>Odometry.NominalPosition == 190 to be near the OS area. In this case the OS area is at 200 ( Default Odometry.NominalPosition == 150 + 50 of ModeProfile ) </Comment>
<SubSteps>
<SubStep
 Name="SubStep1"
>
<Actions>
<Action>Odometry.NominalDistance &lt;- 190.0</Action>
</Actions>
<Expectations>
<Expectation
 Kind="Instantaneous"
 DeadLine="1"
>Kernel.Mode == Default.Mode.OS</Expectation></Expectations>
</SubStep></SubSteps>
</Step><Step
 IO="NA"
 LevelIN="NA"
 LevelOUT="NA"
 ModeIN="NA"
 ModeOUT="NA"
 TranslationRequired="FALSE"
 Name="Step5 - BTM.Message ModeProfile OS + OS mode area"
>
<Comment>Odomety.NominalPosition == 200 to be in OS area. OS area is at 200. ( Default Odometry.NominalPosition == 150 + 50 of ModeProfile ) </Comment>
<SubSteps>
<SubStep
 Name="SubStep1"
>
<Actions>
<Action>Odometry.NominalDistance &lt;- 200.0</Action>
</Actions>
<Expectations>
<Expectation
 Kind="Instantaneous"
 DeadLine="1"
>Kernel.Mode == Default.Mode.OS</Expectation></Expectations>
</SubStep></SubSteps>
</Step></Steps>
</TestCase></TestCases>
</SubSequence></SubSequences>
</Frame>
