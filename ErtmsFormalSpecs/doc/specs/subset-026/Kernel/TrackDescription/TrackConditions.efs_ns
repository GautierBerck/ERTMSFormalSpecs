<NameSpace
 Name="TrackConditions"
>
<NameSpaces>
</NameSpaces>
<Structures>
<Structure
 Implemented="TRUE"
 Name="TrackConditionInformation"
>
<ReqRef
 Id="dfc71e5b-2d0d-4dce-9a5c-f6e69ea53363"
>
</ReqRef><ReqRef
 Id="0be2ea06-0c8b-4622-9a32-bd8954c01555"
>
</ReqRef><StructureElement
 TypeName="Default.BaseTypes.Distance"
 Default=""
 Mode="Internal"
 Implemented="TRUE"
 Name="Distance"
>
<ReqRef
 Id="c514bd3c-cce6-498e-97b5-6418e2ac6fcf"
>
</ReqRef></StructureElement><StructureElement
 TypeName="Default.BaseTypes.Length"
 Default=""
 Mode="Internal"
 Implemented="TRUE"
 Name="Length"
>
<ReqRef
 Id="d93685bd-18ea-422e-8641-3e9ed6427e66"
>
</ReqRef></StructureElement><StructureElement
 TypeName="TrackCondition"
 Default=""
 Mode="Internal"
 Implemented="TRUE"
 Name="Value"
>
<ReqRef
 Id="b95a22fb-0a06-4d2a-b9f8-73a082712d4c"
>
</ReqRef></StructureElement><StructureElement
 TypeName="Boolean"
 Default="Boolean.False"
 Mode="Internal"
 NeedsRequirement="FALSE"
 Name="Applied"
>
</StructureElement></Structure><Structure
 Implemented="TRUE"
 Name="TrackCondition"
>
<ReqRef
 Id="b95a22fb-0a06-4d2a-b9f8-73a082712d4c"
>
</ReqRef><StructureElement
 TypeName="Boolean"
 Default="Boolean.False"
 Mode="Internal"
 Implemented="TRUE"
 Name="NonStoppingArea"
>
<ReqRef
 Id="4fa2b4ab-63de-48d0-8aab-49412bba6dbd"
>
</ReqRef></StructureElement><StructureElement
 TypeName="Boolean"
 Default="Boolean.False"
 Mode="Internal"
 Implemented="TRUE"
 Name="TunnelStoppingArea"
>
<ReqRef
 Id="e99e7257-597e-43d5-a002-54bb45f5028c"
>
</ReqRef></StructureElement><StructureElement
 TypeName="Boolean"
 Default="Boolean.False"
 Mode="Internal"
 Implemented="TRUE"
 Name="SoundHorn"
>
<ReqRef
 Id="55f1d2d0-00ef-4dfe-82a4-6a5f97d8f297"
>
</ReqRef></StructureElement><StructureElement
 TypeName="Boolean"
 Default="Boolean.False"
 Mode="Internal"
 Implemented="TRUE"
 Name="PowerlessSection_LowerPantograph"
>
<ReqRef
 Id="7fb81a1f-d79e-4219-b000-e6ca80f0fad5"
>
</ReqRef></StructureElement><StructureElement
 TypeName="Boolean"
 Default="Boolean.False"
 Mode="Internal"
 Implemented="TRUE"
 Name="RadioHole"
>
<ReqRef
 Id="ce600cdf-eced-43b6-addb-8f9bb1416880"
>
</ReqRef></StructureElement><StructureElement
 TypeName="Boolean"
 Default="Boolean.False"
 Mode="Internal"
 Implemented="TRUE"
 Name="AirTightness"
>
<ReqRef
 Id="a01c8799-5739-48a1-a667-753dbdb30d26"
>
</ReqRef></StructureElement><StructureElement
 TypeName="Boolean"
 Default="Boolean.False"
 Mode="Internal"
 Implemented="TRUE"
 Name="SwitchOffRegenerativeBrake"
>
<ReqRef
 Id="f15d27d3-b5ee-451f-8207-28272d95b5e3"
>
</ReqRef></StructureElement><StructureElement
 TypeName="Boolean"
 Default="Boolean.False"
 Mode="Internal"
 Implemented="TRUE"
 Name="SwitchOffEddyCurrentBrakeForSB"
>
<ReqRef
 Id="6eac506c-d1f4-4981-81f7-4f88b90d86a9"
>
</ReqRef></StructureElement><StructureElement
 TypeName="Boolean"
 Default="Boolean.False"
 Mode="Internal"
 Implemented="TRUE"
 Name="SwitchOffMagneticShoeBrake"
>
<ReqRef
 Id="fc19b494-1816-4d9e-b9a9-6452f06d0582"
>
</ReqRef></StructureElement><StructureElement
 TypeName="Boolean"
 Default="Boolean.False"
 Mode="Internal"
 Implemented="TRUE"
 Name="PowerlessSection_SwitchOffTheMainPowerSwitch"
>
<ReqRef
 Id="ef395ab0-84e3-439a-9e7e-7ef8bb61984c"
>
</ReqRef></StructureElement><StructureElement
 TypeName="Boolean"
 Default="Boolean.False"
 Mode="Internal"
 Implemented="TRUE"
 Name="SwitchOffEddyCurrentBrakeForEB"
>
<ReqRef
 Id="caccfa50-6817-419a-bde5-f5880f4e795e"
>
</ReqRef></StructureElement></Structure><Structure
 Implemented="TRUE"
 Name="TrackConditionProfile"
>
<ReqRef
 Id="444d11ee-84f0-4837-8c17-f111d045857d"
>
</ReqRef><Comment></Comment>
<StructureElement
 TypeName="TrackConditions"
 Default=""
 Mode="Internal"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Conditions"
>
</StructureElement><StructureElement
 TypeName="Default.BaseTypes.Distance"
 Default=""
 Mode="Internal"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="EmptyProfileDistance"
>
<ReqRef
 Id="35ef498a-1c12-4203-b283-26436d281f11"
>
</ReqRef></StructureElement><StructureElement
 TypeName="Messages.Q_TRACKINIT"
 Default=""
 Mode="Internal"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="InitialState"
>
<ReqRef
 Id="13a5ea24-0fd2-4281-99df-f3585e1e8e67"
>
</ReqRef></StructureElement></Structure></Structures>
<Collections>
<Collection
 TypeName="TrackConditionInformation"
 MaxSize="20"
 Default="[]"
 Implemented="TRUE"
 Name="TrackConditions"
>
<ReqRef
 Id="dfc71e5b-2d0d-4dce-9a5c-f6e69ea53363"
>
</ReqRef><ReqRef
 Id="7dc8d485-8ec6-42c9-8941-24c0652f1455"
>
</ReqRef></Collection></Collections>
<Functions>
<Function
 Type="Default.BaseTypes.Length"
 Name="ConditionLength"
>
<ReqRef
 Id="dfc71e5b-2d0d-4dce-9a5c-f6e69ea53363"
>
</ReqRef><Parameters>
<Parameter
 Type="TrackConditionInformation"
 Name="aCondition"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="Value"
>
<Expression>aCondition.Length + TrainData.TrainData.Value.TrainLength</Expression>
</Case></Cases>
</Function><Function
 Type="TrackCondition"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="CreateTCValue"
>
<Comment>Creates a TrackCondition structure from the value received from the trackside.</Comment>
<Parameters>
<Parameter
 Type="Messages.M_TRACKCOND"
 Name="TCType"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="AirTightness"
>
<PreConditions>
<PreCondition>TCType == Messages.M_TRACKCOND.Air_tightness__Initial_state__no_request_for_air_tightness</PreCondition></PreConditions>
<Expression>TrackCondition
{
    AirTightness =&gt; True
}</Expression>
</Case><Case
 Name="NonStoppingArea"
>
<PreConditions>
<PreCondition>TCType == Messages.M_TRACKCOND.Non_stopping_area___tunnel__Initial_state__stopping_permitted</PreCondition></PreConditions>
<Expression>TrackCondition
{
    NonStoppingArea =&gt; True
}</Expression>
</Case><Case
 Name="PowerlessSection_LowerPantograph"
>
<PreConditions>
<PreCondition>TCType == Messages.M_TRACKCOND.Powerless_section___lower_pantograph__Initial_state__not_powerless_section</PreCondition></PreConditions>
<Expression>TrackCondition
{
    PowerlessSection_LowerPantograph =&gt; True
}</Expression>
</Case><Case
 Name="PowerlessSection_SwitchOffTheMainPowerSwitch"
>
<PreConditions>
<PreCondition>TCType == Messages.M_TRACKCOND.Powerless_section___switch_off_the_main_power_switch__Initial_state__not_powerless_section</PreCondition></PreConditions>
<Expression>TrackCondition
{
    PowerlessSection_SwitchOffTheMainPowerSwitch =&gt; True
}</Expression>
</Case><Case
 Name="RadioHole"
>
<PreConditions>
<PreCondition>TCType == Messages.M_TRACKCOND.Radio_hole__stop_supervising_T_NVCONTACT___Initial_state__supervise_T_NVCONTACT</PreCondition></PreConditions>
<Expression>TrackCondition
{
    RadioHole =&gt; True
}</Expression>
</Case><Case
 Name="SoundHorn"
>
<PreConditions>
<PreCondition>TCType == Messages.M_TRACKCOND.Sound_horn__Initial_state__no_request_for_sound_horn</PreCondition></PreConditions>
<Expression>TrackCondition
{
    SoundHorn =&gt; True
}</Expression>
</Case><Case
 Name="SwitchOffEddyCurrentBrakeForEB"
>
<PreConditions>
<PreCondition>TCType == Messages.M_TRACKCOND.Switch_off_eddy_current_brake_for_emergency_brake__Initial_state__eddy_current_brake_for_emergency_brake_on</PreCondition></PreConditions>
<Expression>TrackCondition
{
    SwitchOffEddyCurrentBrakeForEB =&gt; True
}</Expression>
</Case><Case
 Name="SwitchOffEddyCurrentBrakeForSB"
>
<PreConditions>
<PreCondition>TCType == Messages.M_TRACKCOND.Switch_off_eddy_current_brake_for_service_brake__Initial_state__eddy_current_brake_for_service_brake_on</PreCondition></PreConditions>
<Expression>TrackCondition
{
    SwitchOffEddyCurrentBrakeForSB=&gt; True
}</Expression>
</Case><Case
 Name="SwitchOffMagneticShoeBrake"
>
<PreConditions>
<PreCondition>TCType == Messages.M_TRACKCOND.Switch_off_magnetic_shoe_brake__Initial_state__magnetic_shoe_brake_on</PreCondition></PreConditions>
<Expression>TrackCondition
{
    SwitchOffMagneticShoeBrake=&gt; True
}</Expression>
</Case><Case
 Name="SwitchOffRegenerativeBrake"
>
<PreConditions>
<PreCondition>TCType == Messages.M_TRACKCOND.Switch_off_regenerative_brake__Initial_state__regenerative_brake_on</PreCondition></PreConditions>
<Expression>TrackCondition
{
    SwitchOffRegenerativeBrake =&gt; True
}</Expression>
</Case><Case
 Name="TunnelStoppingArea"
>
<PreConditions>
<PreCondition>TCType == Messages.M_TRACKCOND.Tunnel_stopping_area__Initial_state__no_tunnel_stopping_area</PreCondition></PreConditions>
<Expression>TrackCondition
{
    TunnelStoppingArea =&gt; True
}</Expression>
</Case></Cases>
</Function><Function
 Type="Boolean"
 NeedsRequirement="FALSE"
 Name="ConditionEntersApplicabilityNow"
>
<ReqRef
 Id="00dfa999-7dd3-4fe9-a2d0-8fab1506a7d9"
>
</ReqRef><Parameters>
<Parameter
 Type="TrackConditionInformation"
 Name="aTrackCondition"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="True"
>
<PreConditions>
<PreCondition>TrainPosition.FrontEndPosition(Default.DistanceInterval.Max) &gt; aTrackCondition.Distance</PreCondition></PreConditions>
<Expression>True</Expression>
</Case><Case
 Name="False"
>
<Expression>False</Expression>
</Case></Cases>
</Function><Function
 Type="Boolean"
 NeedsRequirement="FALSE"
 Name="ConditionExitsApplicability"
>
<Parameters>
<Parameter
 Type="TrackConditionInformation"
 Name="aCondition"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="RearEndPosition after TrackCond"
>
<Expression>TrainPosition.RearEndPosition(Default.DistanceInterval.Min) &gt; (aCondition.Distance + BaseTypes.LengthToDistance(aCondition.Length))</Expression>
</Case></Cases>
</Function><Function
 Type="Boolean"
 Implemented="TRUE"
 Name="IsInsideRadioHole"
>
<ReqRef
 Id="558b2068-001d-4f9f-902b-2cd23fb269d9"
>
</ReqRef><Comment>Indicates if there is an applicable track condition for radio hole</Comment>
<Cases>
<Case
 Name="Value"
>
<Expression>THERE_IS_IN TCProfile.Conditions | ( X.Applied AND X.Value.RadioHole == True )</Expression>
</Case></Cases>
</Function><Function
 Type="TrackConditionInformation"
 Implemented="TRUE"
 Name="HandleTCPwhenEnteringGivenMode1"
>
<ReqRef
 Id="c1c2e72d-abfa-40cc-ab4e-10dd67d304e9"
>
</ReqRef><Parameters>
<Parameter
 Type="TrackConditionInformation"
 Name="TCPacket"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="HandleTCPwhenEnteringGivenMode1"
>
<Expression>TrackConditionInformation
{
    Distance =&gt; TCPacket.Distance,
    Length =&gt; TCPacket.Length,
    Value =&gt; TrackCondition
{ 
    NonStoppingArea =&gt; TCPacket.Value.NonStoppingArea ,
    TunnelStoppingArea =&gt; TCPacket.Value.TunnelStoppingArea ,
    SoundHorn =&gt; TCPacket.Value.SoundHorn ,
    PowerlessSection_LowerPantograph =&gt; False,
    RadioHole =&gt; False,
    AirTightness =&gt; False,
    SwitchOffRegenerativeBrake =&gt; False,
    SwitchOffEddyCurrentBrakeForSB =&gt; False,
    SwitchOffMagneticShoeBrake =&gt; False,
    PowerlessSection_SwitchOffTheMainPowerSwitch =&gt; False,
    SwitchOffEddyCurrentBrakeForEB =&gt; False
},
    Applied =&gt; TCPacket.Applied

}</Expression>
</Case></Cases>
</Function><Function
 Type="TrackConditionInformation"
 Implemented="TRUE"
 Name="HandleTCPwhenEnteringGivenMode2"
>
<ReqRef
 Id="81e057d0-016b-449f-8994-c2a6d7b34729"
>
</ReqRef><Parameters>
<Parameter
 Type="TrackConditionInformation"
 Name="TCPacket"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="HandleTCPwhenEnteringGivenMode2"
>
<Expression>TrackConditionInformation
{
    Distance =&gt; TCPacket.Distance,
    Length =&gt; TCPacket.Length,
    Value =&gt; TrackCondition
{ 
    NonStoppingArea =&gt; False,
    TunnelStoppingArea =&gt; False,
    SoundHorn =&gt; False,
    PowerlessSection_LowerPantograph =&gt; TCPacket.Value.PowerlessSection_LowerPantograph,
    RadioHole =&gt;TCPacket.Value.RadioHole ,
    AirTightness =&gt; TCPacket.Value.AirTightness ,
    SwitchOffRegenerativeBrake =&gt;TCPacket.Value.SwitchOffRegenerativeBrake ,
    SwitchOffEddyCurrentBrakeForSB =&gt; TCPacket.Value.SwitchOffEddyCurrentBrakeForSB ,
    SwitchOffMagneticShoeBrake =&gt; TCPacket.Value.SwitchOffMagneticShoeBrake ,
    PowerlessSection_SwitchOffTheMainPowerSwitch =&gt; TCPacket.Value.PowerlessSection_SwitchOffTheMainPowerSwitch,
    SwitchOffEddyCurrentBrakeForEB =&gt; TCPacket.Value.SwitchOffEddyCurrentBrakeForSB
},
    Applied =&gt; TCPacket.Applied

}</Expression>
</Case></Cases>
</Function></Functions>
<Procedures>
<Procedure
 Implemented="TRUE"
 Name="TrackConditionReceived"
>
<ReqRef
 Id="dde16995-5fb1-4c80-8c2c-c9294aa46944"
>
</ReqRef><ReqRef
 Id="ee609856-411d-4bb2-ab88-76b574aa3013"
>
</ReqRef><Comment>This procedure is called when a new axle load profile is received. There are two cases:
  - If the initial states have to be resumed, the distance to where they have to be resumed is saved
  - If no initial states have to be resumed, the axle load profile is updated (done by the HandleNewAxleLoadProfile procedure)</Comment>
<Parameters>
<Parameter
 Type="Messages.PACKET.TRACK_TO_TRAIN.TRACK_CONDITION.Message"
 Name="Packet"
>
</Parameter></Parameters>
<Rules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="UpdateTrackConditions"
>
<Comment></Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="InitialStatesToBeResumed"
>
<Comment></Comment>
<PreConditions>
<PreCondition>Packet.Q_TRACKINIT == Messages.Q_TRACKINIT.Empty_profile__initial_states_to_be_resumed</PreCondition></PreConditions>
<Actions>
<Action>TCProfile.InitialState &lt;- Packet.Q_TRACKINIT</Action><Action>TCProfile.EmptyProfileDistance &lt;- Default.MessageTypes.QScaleDistance ( distance =&gt; Packet.D_TRACKINIT, scale =&gt; Packet.Q_SCALE )</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="NoInitialStatesToBeResumed"
>
<Comment></Comment>
<PreConditions>
<PreCondition>Packet.Q_TRACKINIT == Messages.Q_TRACKINIT.No_initial_states_to_be_resumed__profile_to_follow</PreCondition></PreConditions>
<Actions>
<Action>HandleNewTrackCondition ( Packet )</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</Procedure><Procedure
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="HandleNewTrackCondition"
>
<Comment>Updates the track conditions according to the values of the packet received as parameter.</Comment>
<Parameters>
<Parameter
 Type="Messages.PACKET.TRACK_TO_TRAIN.TRACK_CONDITION.Message"
 Name="Packet"
>
</Parameter></Parameters>
<Rules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="RemoveOldTrackConditions"
>
<ReqRef
 Id="07495681-fe6b-45c8-b0b9-9768f78e0985"
>
</ReqRef><Comment></Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="RemoveOldATrackConditions"
>
<ReqRef
 Id="c514bd3c-cce6-498e-97b5-6418e2ac6fcf"
>
</ReqRef><PreConditions>
</PreConditions>
<Actions>
<Action>REMOVE ALL X.Distance &gt;= Default.MessageTypes.QScaleDistance ( distance =&gt; Packet.D_TRACKCOND, scale =&gt; Packet.Q_SCALE) IN TCProfile.Conditions</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="InsertNewTrackCondition"
>
<Comment></Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="InsertFirstAxleLoad"
>
<ReqRef
 Id="13a5ea24-0fd2-4281-99df-f3585e1e8e67"
>
</ReqRef><ReqRef
 Id="c514bd3c-cce6-498e-97b5-6418e2ac6fcf"
>
</ReqRef><ReqRef
 Id="d93685bd-18ea-422e-8641-3e9ed6427e66"
>
</ReqRef><ReqRef
 Id="b95a22fb-0a06-4d2a-b9f8-73a082712d4c"
>
</ReqRef><PreConditions>
</PreConditions>
<Actions>
<Action>INSERT
    TrackConditionInformation
    {
        Distance =&gt; MessageTypes.QScaleDistance ( distance =&gt; Packet.D_TRACKCOND, scale =&gt; Packet.Q_SCALE ),
        Length =&gt; MessageTypes.QScaleLength ( length =&gt; Packet.L_TRACKCOND, scale =&gt; Packet.Q_SCALE ),
        Value =&gt; CreateTCValue ( Packet.M_TRACKCOND )
    }
IN
    TCProfile.Conditions</Action><Action>TCProfile.InitialState &lt;- Packet.Q_TRACKINIT</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</Procedure><Procedure
 NeedsRequirement="FALSE"
 Name="ApplyWhenEntersApplicability"
>
<Parameters>
<Parameter
 Type="TrackConditionInformation"
 Name="aTrackCondition"
>
</Parameter></Parameters>
<Rules>
<Rule
 Priority="Processing"
 NeedsRequirement="FALSE"
 Name="Apply when enters applicability"
>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 NeedsRequirement="FALSE"
 Name="Apply when enters applicability"
>
<PreConditions>
<PreCondition>ConditionEntersApplicabilityNow(aTrackCondition)</PreCondition><PreCondition>NOT aTrackCondition.Applied</PreCondition></PreConditions>
<Actions>
<Action>aTrackCondition.Applied &lt;- True</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</Procedure></Procedures>
<Variables>
<Variable
 Type="TrackConditions.TrackConditionProfile"
 DefaultValue=""
 VariableMode="Internal"
 Implemented="TRUE"
 Name="TCProfile"
>
<ReqRef
 Id="dfc71e5b-2d0d-4dce-9a5c-f6e69ea53363"
>
</ReqRef><ReqRef
 Id="8306ee07-3124-4992-96a3-0cf3c84e47b7"
>
</ReqRef><ReqRef
 Id="0d1804a4-9b7c-406f-bb28-e8e42df86344"
>
</ReqRef><ReqRef
 Id="c9386a51-4e30-4b1e-915c-aad5f1f5488f"
>
</ReqRef><ReqRef
 Id="a2d32abf-08a0-4bc5-b97e-117e6a4fd998"
>
</ReqRef><ReqRef
 Id="444d11ee-84f0-4837-8c17-f111d045857d"
>
</ReqRef><ReqRef
 Id="ee609856-411d-4bb2-ab88-76b574aa3013"
>
</ReqRef><ReqRef
 Id="46ff0663-ed84-4dea-af46-b87941a77c51"
>
</ReqRef><Comment>The list of track conditions received from the trackside.</Comment>
</Variable></Variables>
<Rules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="TrackConditionMonitor"
>
<ReqRef
 Id="e36dd5fc-81ea-4253-8535-4e5b4afd1b54"
>
</ReqRef><Comment></Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 NeedsRequirement="FALSE"
 Name="TrackConditionMonitor"
>
<PreConditions>
<PreCondition>TCProfile != EMPTY</PreCondition></PreConditions>
<Actions>
<Action>APPLY ApplyWhenEntersApplicability(aTrackCondition =&gt; X) ON TCProfile.Conditions</Action><Action>REMOVE ALL ConditionExitsApplicability ( X ) IN TCProfile.Conditions</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</NameSpace>
