<NameSpace
 Name="TrackConditions"
>
<NameSpaces>
</NameSpaces>
<Structures>
<Structure
 Implemented="TRUE"
 Name="TrackConditionInformation"
>
<ReqRef
 Id="3.13.5.1"
>
</ReqRef><ReqRef
 Id="7.4.2.20.1"
>
</ReqRef><StructureElement
 TypeName="Default.BaseTypes.Distance"
 Default=""
 Mode="Internal"
 Implemented="TRUE"
 Name="Distance"
>
<ReqRef
 Id="7.5.1.33"
>
</ReqRef></StructureElement><StructureElement
 TypeName="Default.BaseTypes.Length"
 Default=""
 Mode="Internal"
 Implemented="TRUE"
 Name="Length"
>
<ReqRef
 Id="7.5.1.55"
>
</ReqRef></StructureElement><StructureElement
 TypeName="TrackCondition"
 Default=""
 Mode="Internal"
 Implemented="TRUE"
 Name="Value"
>
<ReqRef
 Id="7.5.1.77"
>
</ReqRef></StructureElement><StructureElement
 TypeName="Boolean"
 Default="Boolean.False"
 Mode="Internal"
 NeedsRequirement="FALSE"
 Name="Applied"
>
</StructureElement></Structure><Structure
 Implemented="TRUE"
 Name="TrackCondition"
>
<ReqRef
 Id="7.5.1.77"
>
</ReqRef><StructureElement
 TypeName="Boolean"
 Default="Boolean.False"
 Mode="Internal"
 Implemented="TRUE"
 Name="NonStoppingArea"
>
<ReqRef
 Id="3.12.1.3.d"
>
</ReqRef></StructureElement><StructureElement
 TypeName="Boolean"
 Default="Boolean.False"
 Mode="Internal"
 Implemented="TRUE"
 Name="TunnelStoppingArea"
>
<ReqRef
 Id="3.12.1.3.e"
>
</ReqRef></StructureElement><StructureElement
 TypeName="Boolean"
 Default="Boolean.False"
 Mode="Internal"
 Implemented="TRUE"
 Name="SoundHorn"
>
<ReqRef
 Id="3.12.1.3.c"
>
</ReqRef></StructureElement><StructureElement
 TypeName="Boolean"
 Default="Boolean.False"
 Mode="Internal"
 Implemented="TRUE"
 Name="PowerlessSection_LowerPantograph"
>
<ReqRef
 Id="3.12.1.3.a"
>
</ReqRef></StructureElement><StructureElement
 TypeName="Boolean"
 Default="Boolean.False"
 Mode="Internal"
 Implemented="TRUE"
 Name="RadioHole"
>
<ReqRef
 Id="3.12.1.3.i"
>
</ReqRef></StructureElement><StructureElement
 TypeName="Boolean"
 Default="Boolean.False"
 Mode="Internal"
 Implemented="TRUE"
 Name="AirTightness"
>
<ReqRef
 Id="3.12.1.3.b"
>
</ReqRef></StructureElement><StructureElement
 TypeName="Boolean"
 Default="Boolean.False"
 Mode="Internal"
 Implemented="TRUE"
 Name="SwitchOffRegenerativeBrake"
>
<ReqRef
 Id="3.12.1.3.j"
>
</ReqRef></StructureElement><StructureElement
 TypeName="Boolean"
 Default="Boolean.False"
 Mode="Internal"
 Implemented="TRUE"
 Name="SwitchOffEddyCurrentBrakeForSB"
>
<ReqRef
 Id="3.12.1.3.k"
>
</ReqRef></StructureElement><StructureElement
 TypeName="Boolean"
 Default="Boolean.False"
 Mode="Internal"
 Implemented="TRUE"
 Name="SwitchOffMagneticShoeBrake"
>
<ReqRef
 Id="3.12.1.3.m"
>
</ReqRef></StructureElement><StructureElement
 TypeName="Boolean"
 Default="Boolean.False"
 Mode="Internal"
 Implemented="TRUE"
 Name="PowerlessSection_SwitchOffTheMainPowerSwitch"
>
<ReqRef
 Id="3.12.1.3.a"
>
</ReqRef></StructureElement><StructureElement
 TypeName="Boolean"
 Default="Boolean.False"
 Mode="Internal"
 Implemented="TRUE"
 Name="SwitchOffEddyCurrentBrakeForEB"
>
<ReqRef
 Id="3.12.1.3.l"
>
</ReqRef></StructureElement></Structure><Structure
 Implemented="TRUE"
 Name="TrackConditionProfile"
>
<ReqRef
 Id="3.13.2.3.1.1.c"
>
</ReqRef><Comment></Comment>
<StructureElement
 TypeName="TrackConditions"
 Default=""
 Mode="Internal"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Conditions"
>
</StructureElement><StructureElement
 TypeName="Default.BaseTypes.Distance"
 Default=""
 Mode="Internal"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="EmptyProfileDistance"
>
<ReqRef
 Id="7.5.1.32"
>
</ReqRef></StructureElement><StructureElement
 TypeName="Messages.Q_TRACKINIT"
 Default=""
 Mode="Internal"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="InitialState"
>
<ReqRef
 Id="7.5.1.141"
>
</ReqRef></StructureElement></Structure></Structures>
<Collections>
<Collection
 TypeName="TrackConditionInformation"
 MaxSize="20"
 Default="[]"
 Implemented="TRUE"
 Name="TrackConditions"
>
<ReqRef
 Id="3.13.5.1"
>
</ReqRef><ReqRef
 Id="A1.1.11.9"
>
</ReqRef></Collection></Collections>
<Functions>
<Function
 Type="Boolean"
 Implemented="TRUE"
 Name="UseBrakeFor_A_brake_emergency_FromSelectedCondition"
>
<ReqRef
 Id="3.13.5.1"
>
</ReqRef><Parameters>
<Parameter
 Type="TrackConditionInformation"
 Name="aCondition"
>
</Parameter><Parameter
 Type="TrainData.BrakingParameters.SpecialBrakeName"
 Name="aBrake"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="Regenerative"
>
<PreConditions>
<PreCondition>aBrake == TrainData.BrakingParameters.SpecialBrakeName.Regenerative</PreCondition></PreConditions>
<Expression>aCondition.Value.SwitchOffRegenerativeBrake == False</Expression>
</Case><Case
 Name="EddyCurrent"
>
<PreConditions>
<PreCondition>aBrake == TrainData.BrakingParameters.SpecialBrakeName.EddyCurrent</PreCondition></PreConditions>
<Expression>aCondition.Value.SwitchOffEddyCurrentBrakeForEB == False</Expression>
</Case><Case
 Name="MagneticShoe"
>
<PreConditions>
<PreCondition>aBrake == TrainData.BrakingParameters.SpecialBrakeName.MagneticShoe</PreCondition></PreConditions>
<Expression>aCondition.Value.SwitchOffMagneticShoeBrake == False</Expression>
</Case></Cases>
</Function><Function
 Type="Boolean"
 Implemented="TRUE"
 Name="UseBrakeFor_A_brake_service_FromSelectedCondition"
>
<ReqRef
 Id="3.13.5.1"
>
</ReqRef><Parameters>
<Parameter
 Type="TrackConditionInformation"
 Name="aCondition"
>
</Parameter><Parameter
 Type="TrainData.BrakingParameters.SpecialBrakeName"
 Name="aBrake"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="Regenerative"
>
<PreConditions>
<PreCondition>aBrake == TrainData.BrakingParameters.SpecialBrakeName.Regenerative</PreCondition></PreConditions>
<Expression>aCondition.Value.SwitchOffRegenerativeBrake == False</Expression>
</Case><Case
 Name="EddyCurrent"
>
<PreConditions>
<PreCondition>aBrake == TrainData.BrakingParameters.SpecialBrakeName.EddyCurrent</PreCondition></PreConditions>
<Expression>aCondition.Value.SwitchOffEddyCurrentBrakeForSB == False</Expression>
</Case></Cases>
</Function><Function
 Type="Boolean"
 Implemented="TRUE"
 Name="UseBrakeFor_A_brake_emergency"
>
<ReqRef
 Id="3.13.5.1"
>
</ReqRef><ReqRef
 Id="3.13.6.2.1.2.e"
>
</ReqRef><ReqRef
 Id="3.13.2.3.1.1.c"
>
</ReqRef><ReqRef
 Id="3.13.2.3.4.1"
>
</ReqRef><Parameters>
<Parameter
 Type="TrainData.BrakingParameters.SpecialBrakeName"
 Name="aBrake"
>
</Parameter><Parameter
 Type="Default.BaseTypes.Distance"
 Name="aDistance"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="Value"
>
<Expression>REDUCE
    TCProfile.Conditions | X.Distance &lt;= aDistance AND aDistance &lt; X.Distance + BaseTypes.LengthToDistance ( ConditionLength ( X ) )
USING
    UseBrakeFor_A_brake_emergency_FromSelectedCondition ( X, aBrake ) AND RESULT
INITIAL_VALUE
    True</Expression>
</Case></Cases>
</Function><Function
 Type="Default.BaseTypes.Length"
 Implemented="TRUE"
 Name="ConditionLength"
>
<ReqRef
 Id="3.13.5.1"
>
</ReqRef><Parameters>
<Parameter
 Type="TrackConditionInformation"
 Name="aCondition"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="Value"
>
<Expression>aCondition.Length + TrainData.TrainData.Value.TrainLength</Expression>
</Case></Cases>
</Function><Function
 Type="Boolean"
 Implemented="TRUE"
 Name="UseBrakeFor_A_brake_service"
>
<ReqRef
 Id="3.13.5.1"
>
</ReqRef><ReqRef
 Id="3.13.6.3.1.2.c"
>
</ReqRef><ReqRef
 Id="3.13.2.3.1.1.c"
>
</ReqRef><ReqRef
 Id="3.13.2.3.4.1"
>
</ReqRef><Parameters>
<Parameter
 Type="TrainData.BrakingParameters.SpecialBrakeName"
 Name="aBrake"
>
</Parameter><Parameter
 Type="Default.BaseTypes.Distance"
 Name="aDistance"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="Value"
>
<Expression>REDUCE
    TCProfile.Conditions | X.Distance &lt;= aDistance AND aDistance &lt; X.Distance + BaseTypes.LengthToDistance ( ConditionLength ( X ) )
USING
    UseBrakeFor_A_brake_service_FromSelectedCondition ( X, aBrake ) AND RESULT
INITIAL_VALUE
    True</Expression>
</Case></Cases>
</Function><Function
 Type="TrackCondition"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="CreateTCValue"
>
<Comment>Creates a TrackCondition structure from the value received from the trackside.</Comment>
<Parameters>
<Parameter
 Type="Messages.M_TRACKCOND"
 Name="TCType"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="AirTightness"
>
<PreConditions>
<PreCondition>TCType == Messages.M_TRACKCOND.Air_tightness__Initial_state__no_request_for_air_tightness</PreCondition></PreConditions>
<Expression>TrackCondition
{
    AirTightness =&gt; True
}</Expression>
</Case><Case
 Name="NonStoppingArea"
>
<PreConditions>
<PreCondition>TCType == Messages.M_TRACKCOND.Non_stopping_area___tunnel__Initial_state__stopping_permitted__no_tunnel</PreCondition></PreConditions>
<Expression>TrackCondition
{
    NonStoppingArea =&gt; True
}</Expression>
</Case><Case
 Name="PowerlessSection_LowerPantograph"
>
<PreConditions>
<PreCondition>TCType == Messages.M_TRACKCOND.Powerless_section___lower_pantograph__Initial_state__not_powerless_section</PreCondition></PreConditions>
<Expression>TrackCondition
{
    PowerlessSection_LowerPantograph =&gt; True
}</Expression>
</Case><Case
 Name="PowerlessSection_SwitchOffTheMainPowerSwitch"
>
<PreConditions>
<PreCondition>TCType == Messages.M_TRACKCOND.Powerless_section___switch_off_the_main_power_switch__Initial_state__not_powerless_section</PreCondition></PreConditions>
<Expression>TrackCondition
{
    PowerlessSection_SwitchOffTheMainPowerSwitch =&gt; True
}</Expression>
</Case><Case
 Name="RadioHole"
>
<PreConditions>
<PreCondition>TCType == Messages.M_TRACKCOND.Radio_hole__stop_supervising_T_NVCONTACT___Initial_state__supervise_T_NVCONTACT</PreCondition></PreConditions>
<Expression>TrackCondition
{
    RadioHole =&gt; True
}</Expression>
</Case><Case
 Name="SoundHorn"
>
<PreConditions>
<PreCondition>TCType == Messages.M_TRACKCOND.Sound_horn__Initial_state__no_request_for_sound_horn</PreCondition></PreConditions>
<Expression>TrackCondition
{
    SoundHorn =&gt; True
}</Expression>
</Case><Case
 Name="SwitchOffEddyCurrentBrakeForEB"
>
<PreConditions>
<PreCondition>TCType == Messages.M_TRACKCOND.Switch_off_eddy_current_brake_for_emergency_brake__Initial_state__eddy_current_brake_for_emergency_brake_on</PreCondition></PreConditions>
<Expression>TrackCondition
{
    SwitchOffEddyCurrentBrakeForEB =&gt; True
}</Expression>
</Case><Case
 Name="SwitchOffEddyCurrentBrakeForSB"
>
<PreConditions>
<PreCondition>TCType == Messages.M_TRACKCOND.Switch_off_eddy_current_brake_for_service_brake__Initial_state__eddy_current_brake_for_service_brake_on</PreCondition></PreConditions>
<Expression>TrackCondition
{
    SwitchOffEddyCurrentBrakeForSB=&gt; True
}</Expression>
</Case><Case
 Name="SwitchOffMagneticShoeBrake"
>
<PreConditions>
<PreCondition>TCType == Messages.M_TRACKCOND.Switch_off_magnetic_shoe_brake__Initial_state__magnetic_shoe_brake_on</PreCondition></PreConditions>
<Expression>TrackCondition
{
    SwitchOffMagneticShoeBrake=&gt; True
}</Expression>
</Case><Case
 Name="SwitchOffRegenerativeBrake"
>
<PreConditions>
<PreCondition>TCType == Messages.M_TRACKCOND.Switch_off_regenerative_brake__Initial_state__regenerative_brake_on</PreCondition></PreConditions>
<Expression>TrackCondition
{
    SwitchOffRegenerativeBrake =&gt; True
}</Expression>
</Case><Case
 Name="TunnelStoppingArea"
>
<PreConditions>
<PreCondition>TCType == Messages.M_TRACKCOND.Tunnel_stopping_area__Initial_state__no_tunnel_stopping_area</PreCondition></PreConditions>
<Expression>TrackCondition
{
    TunnelStoppingArea =&gt; True
}</Expression>
</Case></Cases>
</Function><Function
 Type="Boolean"
 NeedsRequirement="FALSE"
 Name="ConditionEntersApplicabilityNow"
>
<ReqRef
 Id="3.12.1.2.1"
>
</ReqRef><Parameters>
<Parameter
 Type="TrackConditionInformation"
 Name="aTrackCondition"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="True"
>
<PreConditions>
<PreCondition>TrainPosition.FrontEndPosition(Default.DistanceInterval.Max) &gt; aTrackCondition.Distance</PreCondition></PreConditions>
<Expression>True</Expression>
</Case><Case
 Name="False"
>
<Expression>False</Expression>
</Case></Cases>
</Function><Function
 Type="Boolean"
 NeedsRequirement="FALSE"
 Name="ConditionIsObsolete"
>
<Cases>
<Case
 Name="Default"
>
<Expression>False</Expression>
</Case></Cases>
</Function><Function
 Type="Boolean"
 NeedsRequirement="FALSE"
 Name="ConditionExitsApplicability"
>
<Parameters>
<Parameter
 Type="TrackConditionInformation"
 Name="aCondition"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="RearEndPosition after TrackCond"
>
<Expression>TrainPosition.RearEndPosition(Default.DistanceInterval.Min) &gt; (aCondition.Distance + BaseTypes.LengthToDistance(aCondition.Length))</Expression>
</Case></Cases>
</Function></Functions>
<Procedures>
<Procedure
 Implemented="TRUE"
 Name="TrackConditionReceived"
>
<ReqRef
 Id="3.12.1.2"
>
</ReqRef><ReqRef
 Id="3.7.1.1.c.5"
>
</ReqRef><Comment>This procedure is called when a new axle load profile is received. There are two cases:
  - If the initial states have to be resumed, the distance to where they have to be resumed is saved
  - If no initial states have to be resumed, the axle load profile is updated (done by the HandleNewAxleLoadProfile procedure)</Comment>
<Parameters>
<Parameter
 Type="Messages.PACKET.TRACK_TO_TRAIN.TRACK_CONDITION.Message"
 Name="Packet"
>
</Parameter></Parameters>
<Rules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="UpdateTrackConditions"
>
<Comment></Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="InitialStatesToBeResumed"
>
<Comment></Comment>
<PreConditions>
<PreCondition>Packet.Q_TRACKINIT == Messages.Q_TRACKINIT.Empty_profile__initial_states_to_be_resumed</PreCondition></PreConditions>
<Actions>
<Action>TCProfile.InitialState &lt;- Packet.Q_TRACKINIT</Action><Action>TCProfile.EmptyProfileDistance &lt;- Default.MessageTypes.QScaleDistance ( distance =&gt; Packet.D_TRACKINIT, scale =&gt; Packet.Q_SCALE )</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="NoInitialStatesToBeResumed"
>
<Comment></Comment>
<PreConditions>
<PreCondition>Packet.Q_TRACKINIT == Messages.Q_TRACKINIT.No_initial_states_to_be_resumed__profile_to_follow</PreCondition></PreConditions>
<Actions>
<Action>HandleNewTrackCondition ( Packet )</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</Procedure><Procedure
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="HandleNewTrackCondition"
>
<Comment>Updates the track conditions according to the values of the packet received as parameter.</Comment>
<Parameters>
<Parameter
 Type="Messages.PACKET.TRACK_TO_TRAIN.TRACK_CONDITION.Message"
 Name="Packet"
>
</Parameter></Parameters>
<Rules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="RemoveOldTrackConditions"
>
<ReqRef
 Id="3.7.3.1.g"
>
</ReqRef><Comment></Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="RemoveOldATrackConditions"
>
<ReqRef
 Id="7.5.1.33"
>
</ReqRef><PreConditions>
</PreConditions>
<Actions>
<Action>REMOVE ALL X.Distance &gt;= Default.MessageTypes.QScaleDistance ( distance =&gt; Packet.D_TRACKCOND, scale =&gt; Packet.Q_SCALE) IN TCProfile.Conditions</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="InsertNewTrackCondition"
>
<Comment></Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="InsertFirstAxleLoad"
>
<ReqRef
 Id="7.5.1.141"
>
</ReqRef><ReqRef
 Id="7.5.1.33"
>
</ReqRef><ReqRef
 Id="7.5.1.55"
>
</ReqRef><ReqRef
 Id="7.5.1.77"
>
</ReqRef><PreConditions>
</PreConditions>
<Actions>
<Action>INSERT
    TrackConditionInformation
    {
        Distance =&gt; MessageTypes.QScaleDistance ( distance =&gt; Packet.D_TRACKCOND, scale =&gt; Packet.Q_SCALE ),
        Length =&gt; MessageTypes.QScaleLength ( length =&gt; Packet.L_TRACKCOND, scale =&gt; Packet.Q_SCALE ),
        Value =&gt; CreateTCValue ( Packet.M_TRACKCOND )
    }
IN
    TCProfile.Conditions</Action><Action>TCProfile.InitialState &lt;- Packet.Q_TRACKINIT</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</Procedure><Procedure
 NeedsRequirement="FALSE"
 Name="ApplyTrackCondition"
>
<Comment></Comment>
<Parameters>
<Parameter
 Type="TrackConditionInformation"
 Name="aTrackCondition"
>
</Parameter></Parameters>
<Rules>
<Rule
 Priority="Processing"
 NeedsRequirement="FALSE"
 Name="&lt;Rule1&gt;"
>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 NeedsRequirement="FALSE"
 Name="&lt;RuleCondition1&gt;"
>
<ReqRef
 Id="3.5.4.4"
>
</ReqRef><PreConditions>
<PreCondition>aTrackCondition.Value.RadioHole</PreCondition></PreConditions>
<Actions>
<Action>InsideRadioHole &lt;- True</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</Procedure><Procedure
 NeedsRequirement="FALSE"
 Name="RevokeTrackCondition"
>
<Parameters>
<Parameter
 Type="TrackConditionInformation"
 Name="aTrackCondition"
>
</Parameter></Parameters>
<Rules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="RadioHole"
>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="RadioHoleCase"
>
<ReqRef
 Id="3.5.3.4.e"
>
</ReqRef><ReqRef
 Id="3.5.4.4"
>
</ReqRef><PreConditions>
<PreCondition>aTrackCondition.Value.RadioHole</PreCondition></PreConditions>
<Actions>
<Action>InsideRadioHole &lt;- False</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</Procedure><Procedure
 NeedsRequirement="FALSE"
 Name="ApplyWhenEntersApplicability"
>
<Parameters>
<Parameter
 Type="TrackConditionInformation"
 Name="aTrackCondition"
>
</Parameter></Parameters>
<Rules>
<Rule
 Priority="Processing"
 NeedsRequirement="FALSE"
 Name="&lt;Rule1&gt;"
>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 NeedsRequirement="FALSE"
 Name="&lt;RuleCondition1&gt;"
>
<PreConditions>
<PreCondition>ConditionEntersApplicabilityNow(aTrackCondition)</PreCondition><PreCondition>NOT aTrackCondition.Applied</PreCondition></PreConditions>
<Actions>
<Action>ApplyTrackCondition(aTrackCondition)</Action><Action>aTrackCondition.Applied &lt;- True</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</Procedure><Procedure
 NeedsRequirement="FALSE"
 Name="RevokeWhenExitApplicability"
>
<Parameters>
<Parameter
 Type="TrackConditionInformation"
 Name="aTrackCondition"
>
</Parameter></Parameters>
<Rules>
<Rule
 Priority="Processing"
 NeedsRequirement="FALSE"
 Name="RevokeWhenExitApplicability"
>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 NeedsRequirement="FALSE"
 Name="RevokeWhenExitApplicability"
>
<PreConditions>
<PreCondition>ConditionExitsApplicability ( aTrackCondition )</PreCondition></PreConditions>
<Actions>
<Action>RevokeTrackCondition ( aTrackCondition )</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</Procedure></Procedures>
<Variables>
<Variable
 Type="TrackConditions.TrackConditionProfile"
 DefaultValue=""
 VariableMode="Internal"
 Implemented="TRUE"
 Name="TCProfile"
>
<ReqRef
 Id="3.13.5.1"
>
</ReqRef><ReqRef
 Id="3.13.6.2.1.2.e"
>
</ReqRef><ReqRef
 Id="3.13.6.3.1.2.c"
>
</ReqRef><ReqRef
 Id="3.13.6.4.2.f"
>
</ReqRef><ReqRef
 Id="3.13.2.3.4.1"
>
</ReqRef><ReqRef
 Id="3.13.2.3.1.1.c"
>
</ReqRef><ReqRef
 Id="3.7.1.1.c.5"
>
</ReqRef><Comment>The list of track conditions received from the trackside.</Comment>
</Variable><Variable
 Type="Boolean"
 VariableMode="Internal"
 NeedsRequirement="FALSE"
 Name="InsideRadioHole"
>
<Comment></Comment>
</Variable></Variables>
<Rules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="TrackConditionMonitor"
>
<ReqRef
 Id="3.5.3.4.e"
>
</ReqRef><Comment></Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 NeedsRequirement="FALSE"
 Name="TrackConditionMonitor"
>
<PreConditions>
<PreCondition>TCProfile != EMPTY</PreCondition></PreConditions>
<Actions>
<Action>APPLY ApplyWhenEntersApplicability(aTrackCondition =&gt; X) ON TCProfile.Conditions</Action><Action>APPLY RevokeWhenExitApplicability(X) ON TCProfile.Conditions</Action><Action>TCProfile.Conditions &lt;- MAP TCProfile.Conditions | (NOT ConditionIsObsolete(X)) USING X</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</NameSpace>
