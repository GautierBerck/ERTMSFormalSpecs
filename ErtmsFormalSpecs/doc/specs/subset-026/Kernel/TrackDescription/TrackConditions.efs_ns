<NameSpace
 X="480"
 Y="650"
 Width="100"
 Height="50"
 Name="TrackConditions"
 Guid="ff6d9fd6-4e1f-4410-b064-97200bf8fb65"
>
<NameSpaces>
</NameSpaces>
<Structures>
<Structure
 Implemented="TRUE"
 Name="TrackConditionInformation"
 Guid="b131c7c4-48fb-4898-b13b-188aab27e08c"
>
<ReqRef
 Id="dfc71e5b-2d0d-4dce-9a5c-f6e69ea53363"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="18c99035-99e3-42cf-9048-8bdafcea014e"
>
</ReqRef><ReqRef
 Id="0be2ea06-0c8b-4622-9a32-bd8954c01555"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="e52e99aa-931d-49a1-82f6-9348f9138f19"
>
</ReqRef><Comment>Structure holding the information needed to create a section in which a track condition applies</Comment>
<StructureElement
 TypeName="Default.BaseTypes.Distance"
 Default=""
 Mode="Internal"
 Implemented="TRUE"
 Name="Distance"
 Guid="01907eb8-5281-475e-99e9-b01b9ff48ab3"
>
<ReqRef
 Id="c514bd3c-cce6-498e-97b5-6418e2ac6fcf"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="ec871a23-1a9c-48f4-8adc-da607bcf6cba"
>
</ReqRef><Comment>Start location of the track condition</Comment>
</StructureElement><StructureElement
 TypeName="TrackCondition"
 Default=""
 Mode="Internal"
 Implemented="TRUE"
 Name="Value"
 Guid="4d07defa-ff4a-4deb-bee7-fb7676afdf6e"
>
<ReqRef
 Id="b95a22fb-0a06-4d2a-b9f8-73a082712d4c"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="cb0a3a0e-53ac-46c5-8da4-fd9b78778a80"
>
</ReqRef><Comment>Which track conditions are in effect</Comment>
</StructureElement></Structure><Structure
 Implemented="TRUE"
 Name="TrackCondition"
 Guid="9551ddbd-7e41-4f3e-9604-48e640b42f6f"
>
<ReqRef
 Id="b95a22fb-0a06-4d2a-b9f8-73a082712d4c"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="590f237b-904e-4cbb-ab57-8ee1ee6c0560"
>
</ReqRef><Comment>Contains the 11 standard track conditions and says whether they are active</Comment>
<StructureElement
 TypeName="Boolean"
 Default="Boolean.False"
 Mode="Internal"
 Implemented="TRUE"
 Name="NonStoppingArea"
 Guid="1cd8a95c-7b69-4c16-8052-5a5579512286"
>
<ReqRef
 Id="4fa2b4ab-63de-48d0-8aab-49412bba6dbd"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="5d0d9a32-4391-4279-8e64-bde266f80297"
>
</ReqRef><Comment>Are where the train is not permitted to stop</Comment>
</StructureElement><StructureElement
 TypeName="Boolean"
 Default="Boolean.False"
 Mode="Internal"
 Implemented="TRUE"
 Name="TunnelStoppingArea"
 Guid="218f58fb-b378-4b4b-8cbd-47fcda70251c"
>
<ReqRef
 Id="e99e7257-597e-43d5-a002-54bb45f5028c"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="21a3f7b5-ef12-4e95-91b9-4fc09a285e11"
>
</ReqRef><Comment>Area in a tunnel where the train is permitted to stop</Comment>
</StructureElement><StructureElement
 TypeName="Boolean"
 Default="Boolean.False"
 Mode="Internal"
 Implemented="TRUE"
 Name="SoundHorn"
 Guid="8a521c1e-b818-4fb8-b3f9-c803e34aacea"
>
<ReqRef
 Id="55f1d2d0-00ef-4dfe-82a4-6a5f97d8f297"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="abdb9841-e825-47fb-9e28-f0917032cb3f"
>
</ReqRef><Comment>The driver should sound the hor,n as long as the train is in this section</Comment>
</StructureElement><StructureElement
 TypeName="Boolean"
 Default="Boolean.False"
 Mode="Internal"
 Implemented="TRUE"
 Name="PowerlessSection_LowerPantograph"
 Guid="755b0b97-53f9-401d-b6bc-1c9df5e14526"
>
<ReqRef
 Id="7fb81a1f-d79e-4219-b000-e6ca80f0fad5"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="a1588fa7-a246-4452-b62b-e8cca569178a"
>
</ReqRef><Comment>The train&apos;s pantograph should be lowered in the upcoming powerless section</Comment>
</StructureElement><StructureElement
 TypeName="Boolean"
 Default="Boolean.False"
 Mode="Internal"
 Implemented="TRUE"
 Name="RadioHole"
 Guid="b51eecdd-85ea-44ae-8ba1-f535137b616d"
>
<ReqRef
 Id="ce600cdf-eced-43b6-addb-8f9bb1416880"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="239d29e6-5e2d-4181-ab4d-1790a7fb5189"
>
</ReqRef><Comment>No RBC connections in the area</Comment>
</StructureElement><StructureElement
 TypeName="Boolean"
 Default="Boolean.False"
 Mode="Internal"
 Implemented="TRUE"
 Name="AirTightness"
 Guid="5735b8a6-9925-42cc-b12b-147466e98459"
>
<ReqRef
 Id="a01c8799-5739-48a1-a667-753dbdb30d26"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="34db9f5d-1fb3-4756-8e8a-233bb40ea33c"
>
</ReqRef><Comment>The air conditioning intake should be cut off</Comment>
</StructureElement><StructureElement
 TypeName="Boolean"
 Default="Boolean.False"
 Mode="Internal"
 Implemented="TRUE"
 Name="SwitchOffRegenerativeBrake"
 Guid="b7a82e4e-cbf0-410d-b843-dbef9970d579"
>
<ReqRef
 Id="f15d27d3-b5ee-451f-8207-28272d95b5e3"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="e648763a-da2c-4096-8094-f8fb24bfe30e"
>
</ReqRef><Comment>The regenerative brake should be disabled</Comment>
</StructureElement><StructureElement
 TypeName="Boolean"
 Default="Boolean.False"
 Mode="Internal"
 Implemented="TRUE"
 Name="SwitchOffEddyCurrentBrakeForSB"
 Guid="8b8c14d0-3c94-4a2c-bdeb-aaefdf766996"
>
<ReqRef
 Id="6eac506c-d1f4-4981-81f7-4f88b90d86a9"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="2e29759c-974c-4b1e-9ebc-753fc511e2cc"
>
</ReqRef><Comment>The eddy current brake should be disabled for the service brake</Comment>
</StructureElement><StructureElement
 TypeName="Boolean"
 Default="Boolean.False"
 Mode="Internal"
 Implemented="TRUE"
 Name="SwitchOffMagneticShoeBrake"
 Guid="07fafbc5-91ec-4f97-9924-98628f6f36b9"
>
<ReqRef
 Id="fc19b494-1816-4d9e-b9a9-6452f06d0582"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="943dd1d0-8bd9-49d4-a6be-d39f804e007a"
>
</ReqRef><Comment>The magnetic shoe brake should be disabled</Comment>
</StructureElement><StructureElement
 TypeName="Boolean"
 Default="Boolean.False"
 Mode="Internal"
 Implemented="TRUE"
 Name="PowerlessSection_SwitchOffTheMainPowerSwitch"
 Guid="ce6cf55a-da2f-4c6f-b095-ccab9fbc4743"
>
<ReqRef
 Id="ef395ab0-84e3-439a-9e7e-7ef8bb61984c"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="3ddbc6e9-968b-4110-889f-c0a1545b148e"
>
</ReqRef><Comment>Powerless area where the main power switch should be turned off</Comment>
</StructureElement><StructureElement
 TypeName="Boolean"
 Default="Boolean.False"
 Mode="Internal"
 Implemented="TRUE"
 Name="SwitchOffEddyCurrentBrakeForEB"
 Guid="5728745d-23f3-4d28-97f1-6e56dc3dada8"
>
<ReqRef
 Id="caccfa50-6817-419a-bde5-f5880f4e795e"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="6d4bebd7-d02b-4733-bb32-9b2399eed347"
>
</ReqRef><Comment>The eddy current brake should be disabled for the emergency brake</Comment>
</StructureElement></Structure></Structures>
<Collections>
<Collection
 TypeName="TrackConditionInformation"
 MaxSize="20"
 Default="[]"
 Implemented="TRUE"
 Name="TrackConditions"
 Guid="a62e502d-64a2-445d-a8f7-47bda4192457"
>
<ReqRef
 Id="dfc71e5b-2d0d-4dce-9a5c-f6e69ea53363"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="8d9da7a2-9205-4e18-baa7-5861eec9b346"
>
</ReqRef><ReqRef
 Id="7dc8d485-8ec6-42c9-8941-24c0652f1455"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="ed25c3de-fddf-4846-a080-c5c953bd66d6"
>
</ReqRef></Collection></Collections>
<Functions>
<Function
 Type="TrackConditionInformation"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="TCProfilePoint"
 Guid="4d777606-3c03-4815-8f35-4fe5cdec9500"
>
<Comment>Creates a TrackCondition structure from the value received from the trackside.</Comment>
<Parameters>
<Parameter
 Type="Messages.M_TRACKCOND"
 Name="TCType"
 Guid="0b2c1829-e9bd-489b-87df-97795d5d45fe"
>
</Parameter><Parameter
 Type="Default.BaseTypes.Distance"
 Name="Distance"
 Guid="49845eb0-ef22-4286-90b0-35ff896faf06"
>
</Parameter><Parameter
 Type="Boolean"
 Name="EndOfSection"
 Guid="e9febe12-8e31-4a9e-b038-8c1552dfec67"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="End of a received section, return to previous values"
 Guid="63fce524-59da-424b-a430-6625a7b7d7bb"
>
<PreConditions>
<PreCondition
 Guid="5420d501-031e-434a-99af-4f3b301f6c0f"
>EndOfSection == True</PreCondition></PreConditions>
<Expression>TrackConditionInformation
{
    Distance =&gt; Distance,
    Value =&gt; ProfileAtDistance(Distance=&gt; Distance)
}</Expression>
</Case><Case
 Name="AirTightness"
 Guid="8ed96d02-188e-4ec2-ba78-3772ab0d0247"
>
<PreConditions>
<PreCondition
 Guid="158d39b3-532d-4194-ade2-b55879fde745"
>TCType == Messages.M_TRACKCOND.Air_tightness__Initial_state__no_request_for_air_tightness</PreCondition></PreConditions>
<Expression>TrackConditionInformation
{
    Distance =&gt; Distance,
    Value =&gt; TrackCondition{
        AirTightness =&gt; True
    }
}</Expression>
</Case><Case
 Name="NonStoppingArea"
 Guid="6491c83f-ef64-42d0-a582-658398b2c07a"
>
<PreConditions>
<PreCondition
 Guid="e0e6c996-6144-43d4-a85f-0dbfd3f32b7d"
>TCType == Messages.M_TRACKCOND.Non_stopping_area___tunnel__Initial_state__stopping_permitted</PreCondition></PreConditions>
<Expression>TrackConditionInformation
{
    Distance =&gt; Distance,
    Value =&gt; TrackCondition{
        NonStoppingArea =&gt; True
    }
}</Expression>
</Case><Case
 Name="PowerlessSection_LowerPantograph"
 Guid="9e5e200a-1459-4059-89ba-d8716f95eab1"
>
<PreConditions>
<PreCondition
 Guid="144ceff9-9e3e-46b6-8e89-ef91a389cd51"
>TCType == Messages.M_TRACKCOND.Powerless_section___lower_pantograph__Initial_state__not_powerless_section</PreCondition></PreConditions>
<Expression>TrackConditionInformation
{
    Distance =&gt; Distance,
    Value =&gt; TrackCondition{
        PowerlessSection_LowerPantograph =&gt; True
    }
}</Expression>
</Case><Case
 Name="PowerlessSection_SwitchOffTheMainPowerSwitch"
 Guid="a0ed634e-a9c0-4861-b332-083563c2428e"
>
<PreConditions>
<PreCondition
 Guid="dde20f85-6d5d-4e69-a9a5-b7e93ff39437"
>TCType == Messages.M_TRACKCOND.Powerless_section___switch_off_the_main_power_switch__Initial_state__not_powerless_section</PreCondition></PreConditions>
<Expression>TrackConditionInformation
{
    Distance =&gt; Distance,
    Value =&gt; TrackCondition{
        PowerlessSection_SwitchOffTheMainPowerSwitch =&gt; True
    }
}</Expression>
</Case><Case
 Name="RadioHole"
 Guid="94e1163f-60ca-4dea-a0b8-93ff799883dd"
>
<PreConditions>
<PreCondition
 Guid="8fc8792d-fc48-4bd4-8936-90484c256055"
>TCType == Messages.M_TRACKCOND.Radio_hole__stop_supervising_T_NVCONTACT___Initial_state__supervise_T_NVCONTACT</PreCondition></PreConditions>
<Expression>TrackConditionInformation
{
    Distance =&gt; Distance,
    Value =&gt; TrackCondition{
        RadioHole =&gt; True
    }
}</Expression>
</Case><Case
 Name="SoundHorn"
 Guid="4a0335dd-7047-478c-883f-f3a754f5555b"
>
<PreConditions>
<PreCondition
 Guid="9fcd2282-2e72-4499-af37-7b619e32e280"
>TCType == Messages.M_TRACKCOND.Sound_horn__Initial_state__no_request_for_sound_horn</PreCondition></PreConditions>
<Expression>TrackConditionInformation
{
    Distance =&gt; Distance,
    Value =&gt; TrackCondition{
        SoundHorn =&gt; True
    }
}</Expression>
</Case><Case
 Name="SwitchOffEddyCurrentBrakeForEB"
 Guid="00ec2f78-d0c3-4974-b105-e53b92fb5fb1"
>
<PreConditions>
<PreCondition
 Guid="d7f70660-d556-4cdc-80b8-c7216f02f496"
>TCType == Messages.M_TRACKCOND.Switch_off_eddy_current_brake_for_emergency_brake__Initial_state__eddy_current_brake_for_emergency_brake_on</PreCondition></PreConditions>
<Expression>TrackConditionInformation
{
    Distance =&gt; Distance,
    Value =&gt; TrackCondition{
        SwitchOffEddyCurrentBrakeForEB =&gt; True
    }
}</Expression>
</Case><Case
 Name="SwitchOffEddyCurrentBrakeForSB"
 Guid="31bd1586-0706-49c6-99ce-de5797fc8d81"
>
<PreConditions>
<PreCondition
 Guid="2cef8605-475c-4208-8ff7-23b85212d584"
>TCType == Messages.M_TRACKCOND.Switch_off_eddy_current_brake_for_service_brake__Initial_state__eddy_current_brake_for_service_brake_on</PreCondition></PreConditions>
<Expression>TrackConditionInformation
{
    Distance =&gt; Distance,
    Value =&gt; TrackCondition{
        SwitchOffEddyCurrentBrakeForSB =&gt; True
    }
}</Expression>
</Case><Case
 Name="SwitchOffMagneticShoeBrake"
 Guid="6338213b-d521-4f31-a18c-42c9b6d2d8a3"
>
<PreConditions>
<PreCondition
 Guid="381a52ec-a69d-42a9-ad0d-c1dd0156bfc0"
>TCType == Messages.M_TRACKCOND.Switch_off_magnetic_shoe_brake__Initial_state__magnetic_shoe_brake_on</PreCondition></PreConditions>
<Expression>TrackConditionInformation
{
    Distance =&gt; Distance,
    Value =&gt; TrackCondition{
        SwitchOffMagneticShoeBrake=&gt; True
    }
}</Expression>
</Case><Case
 Name="SwitchOffRegenerativeBrake"
 Guid="89e90947-01a2-485a-a58f-448a68a822e4"
>
<PreConditions>
<PreCondition
 Guid="a69c371f-bec7-428e-b998-08bf43054fff"
>TCType == Messages.M_TRACKCOND.Switch_off_regenerative_brake__Initial_state__regenerative_brake_on</PreCondition></PreConditions>
<Expression>TrackConditionInformation
{
    Distance =&gt; Distance,
    Value =&gt; TrackCondition{
        SwitchOffRegenerativeBrake =&gt; True
    }
}</Expression>
</Case><Case
 Name="TunnelStoppingArea"
 Guid="29928c6f-b392-41f1-ad23-d582af5e1b9b"
>
<PreConditions>
<PreCondition
 Guid="8447cc3f-c1b7-4388-9540-0b4c613ef5a8"
>TCType == Messages.M_TRACKCOND.Tunnel_stopping_area__Initial_state__no_tunnel_stopping_area</PreCondition></PreConditions>
<Expression>TrackConditionInformation
{
    Distance =&gt; Distance,
    Value =&gt; TrackCondition{
        TunnelStoppingArea =&gt; True
    }
}</Expression>
</Case></Cases>
</Function><Function
 Type="Boolean"
 NeedsRequirement="FALSE"
 Name="ConditionExitsApplicability"
 Guid="873d51f3-eb83-48d8-a167-fd16e60ade7c"
>
<Parameters>
<Parameter
 Type="TrackConditionInformation"
 Name="ProfilePoint"
 Guid="cc6665c6-d1cb-443a-ab6a-b592278c3d7f"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="RearEndPosition after TrackCond"
 Guid="24466bb5-b244-4a1a-b1ca-5a065f4c431c"
>
<Expression>TrainPosition.RearEndPosition(Default.DistanceInterval.Min) &gt; (ProfilePoint.Distance)</Expression>
</Case></Cases>
</Function><Function
 Type="Boolean"
 Implemented="TRUE"
 Name="IsInsideRadioHole"
 Guid="0c0fb865-3ccc-4d90-b7ca-cbd61d842b50"
>
<ReqRef
 Id="558b2068-001d-4f9f-902b-2cd23fb269d9"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="5fd492e8-d3a2-4e29-a0d7-f7dc18d44964"
>
</ReqRef><ReqRef
 Id="e36dd5fc-81ea-4253-8535-4e5b4afd1b54"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="6a6c240b-d646-4652-b75a-8ad149bc7cdc"
>
</ReqRef><Comment>Indicates if there is an applicable track condition for radio hole</Comment>
<Cases>
<Case
 Name="Value"
 Guid="d500abeb-937a-4158-bde3-df9a023e35ff"
>
<Expression>CurrentProfile().RadioHole == True</Expression>
</Case></Cases>
</Function><Function
 Type="TrackConditionInformation"
 Implemented="TRUE"
 Name="HandleTCPwhenEnteringGivenMode1"
 Guid="35f10299-f5ff-4c0d-b4f8-f78b962452bf"
>
<ReqRef
 Id="c1c2e72d-abfa-40cc-ab4e-10dd67d304e9"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="1f461114-8a3f-40d1-9dde-42626bb93364"
>
</ReqRef><Parameters>
<Parameter
 Type="TrackConditionInformation"
 Name="TCPacket"
 Guid="8504f3e3-f3fd-458e-bae5-f4e2cebad52c"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="HandleTCPwhenEnteringGivenMode1"
 Guid="83a0413c-e973-46d1-9bda-92bad763fadb"
>
<Expression>TrackConditionInformation
{
    Distance =&gt; TCPacket.Distance,
    Value =&gt; TrackCondition
{ 
    NonStoppingArea =&gt; TCPacket.Value.NonStoppingArea ,
    TunnelStoppingArea =&gt; TCPacket.Value.TunnelStoppingArea ,
    SoundHorn =&gt; TCPacket.Value.SoundHorn ,
    PowerlessSection_LowerPantograph =&gt; False,
    RadioHole =&gt; False,
    AirTightness =&gt; False,
    SwitchOffRegenerativeBrake =&gt; False,
    SwitchOffEddyCurrentBrakeForSB =&gt; False,
    SwitchOffMagneticShoeBrake =&gt; False,
    PowerlessSection_SwitchOffTheMainPowerSwitch =&gt; False,
    SwitchOffEddyCurrentBrakeForEB =&gt; False
}

}</Expression>
</Case></Cases>
</Function><Function
 Type="TrackConditionInformation"
 Implemented="TRUE"
 Name="HandleTCPwhenEnteringGivenMode2"
 Guid="0483f942-5889-47b6-9389-754a7f066adf"
>
<ReqRef
 Id="81e057d0-016b-449f-8994-c2a6d7b34729"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="1c4d285a-6897-4408-85af-d49d8a9d95bf"
>
</ReqRef><Parameters>
<Parameter
 Type="TrackConditionInformation"
 Name="TCPacket"
 Guid="d9557982-b23b-4119-b4a0-6da78566f568"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="HandleTCPwhenEnteringGivenMode2"
 Guid="e6321890-fcd5-4b05-a315-f53dc94bfef3"
>
<Expression>TrackConditionInformation
{
    Distance =&gt; TCPacket.Distance,
    Value =&gt; TrackCondition
{ 
    NonStoppingArea =&gt; False,
    TunnelStoppingArea =&gt; False,
    SoundHorn =&gt; False,
    PowerlessSection_LowerPantograph =&gt; TCPacket.Value.PowerlessSection_LowerPantograph,
    RadioHole =&gt;TCPacket.Value.RadioHole ,
    AirTightness =&gt; TCPacket.Value.AirTightness ,
    SwitchOffRegenerativeBrake =&gt;TCPacket.Value.SwitchOffRegenerativeBrake ,
    SwitchOffEddyCurrentBrakeForSB =&gt; TCPacket.Value.SwitchOffEddyCurrentBrakeForSB ,
    SwitchOffMagneticShoeBrake =&gt; TCPacket.Value.SwitchOffMagneticShoeBrake ,
    PowerlessSection_SwitchOffTheMainPowerSwitch =&gt; TCPacket.Value.PowerlessSection_SwitchOffTheMainPowerSwitch,
    SwitchOffEddyCurrentBrakeForEB =&gt; TCPacket.Value.SwitchOffEddyCurrentBrakeForSB
}

}</Expression>
</Case></Cases>
</Function><Function
 Type="Default.BaseTypes.Distance"
 Name="NewInfoStartLocation"
 Guid="32f17759-b4e6-455a-8cde-2ee070d684c2"
>
<Comment>Returns the start location of the first element of a packet of Track Conditions</Comment>
<Parameters>
<Parameter
 Type="Messages.PACKET.TRACK_TO_TRAIN.TRACK_CONDITION.Message"
 Name="Packet"
 Guid="114cb9cc-0ba4-4e74-9d8b-4b16f44132b2"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="If the message contains track conditions, return the closest one"
 Guid="eb8730d9-53e8-43b3-8019-faff1a5d60a9"
>
<PreConditions>
<PreCondition
 Guid="a1f5b781-33c7-4df7-bebc-eee2ce7afa09"
>Packet.Q_TRACKINIT == Messages.Q_TRACKINIT.No_initial_states_to_be_resumed__profile_to_follow</PreCondition></PreConditions>
<Expression>REDUCE Packet.Sequence1
  USING Default.BaseTypes.MinDistance(
    X1=&gt; Default.MessageTypes.QScaleDistance(distance=&gt;X.D_TRACKCOND, scale=&gt;Packet.Q_SCALE),
    X2=&gt;RESULT
)
  INITIAL_VALUE Default.MessageTypes.QScaleDistance(distance=&gt;Packet.D_TRACKCOND, scale=&gt;Packet.Q_SCALE)</Expression>
</Case></Cases>
</Function><Function
 Type="Default.BaseTypes.Distance"
 NeedsRequirement="FALSE"
 Name="ProfileStartLocation"
 Guid="ac10a90f-1f2c-4250-a97d-b854f8049d28"
>
<Comment>Returns the track conditions that apply at the given distance</Comment>
<Parameters>
<Parameter
 Type="Default.BaseTypes.Distance"
 Name="Distance"
 Guid="65eec8a2-f270-40fc-bfbe-d0f18c0e740d"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="Value"
 Guid="075984f4-a690-4a84-8ced-fd83b88786b7"
>
<Comment>Returns the element in TCProfile with the largest distance that is less than or equal to the parameter</Comment>
<Expression>REDUCE TCProfile | NOT(X.Distance &gt; Distance)
    USING Default.BaseTypes.MaxDistance(
        X1=&gt;X.Distance,
        X2=&gt;RESULT)
  INITIAL_VALUE Default.BaseTypes.Distance.Infinity</Expression>
</Case></Cases>
</Function><Function
 Type="Kernel.TrackDescription.TrackConditions.TrackCondition"
 Name="CurrentProfile"
 Guid="fb96e527-60c0-4a0c-a1a9-051dc1c5cc85"
>
<Comment>Gives the current track conditions</Comment>
<Cases>
<Case
 Name="Value"
 Guid="8b949ae1-4434-4dff-9942-d3de6084c8e3"
>
<Expression>ProfileAtDistance(Distance=&gt;Odometry.NominalDistance)</Expression>
</Case></Cases>
</Function><Function
 Type="Kernel.TrackDescription.TrackConditions.TrackCondition"
 Name="ProfileAtDistance"
 Guid="439dae37-429f-4e83-b249-e8a4f50717b5"
>
<Comment>Returns the profile for when the train position is the given distance</Comment>
<Parameters>
<Parameter
 Type="Default.BaseTypes.Distance"
 Name="Distance"
 Guid="2678be51-6010-4be4-96e2-76ffc257d512"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="Previous conditions exist"
 Guid="4cdb4c07-7e8d-4b91-8869-34d03070a4e3"
>
<Comment>There are track conditions prior to the requested distance</Comment>
<PreConditions>
<PreCondition
 Guid="52fe1d2c-2078-4728-828e-aae8e72d359f"
>THERE_IS_IN TCProfile | NOT (X.Distance &gt; Distance)</PreCondition></PreConditions>
<Expression>REDUCE TCProfile | (X.Distance == ProfileStartLocation(Distance=&gt;Distance) )
    USING X.Value
  INITIAL_VALUE EMPTY</Expression>
</Case><Case
 Name="Otherwise"
 Guid="264e9b1f-172c-4ce9-9266-3c27430f3c9f"
>
<Comment>There are no track conditions that apply before the requested distance</Comment>
<Expression>TrackCondition { }</Expression>
</Case></Cases>
</Function><Function
 Type="Kernel.TrackDescription.TrackConditions.TrackCondition"
 Name="CombineConditions"
 Guid="0aa6f792-317d-417a-9d75-100ac37e2858"
>
<Comment>Combines the conditions held in two Track Conditions that apply to the same section of track 
(Condition A  OR  Condition B)</Comment>
<Parameters>
<Parameter
 Type="Kernel.TrackDescription.TrackConditions.TrackCondition"
 Name="Profile1"
 Guid="fe7b67e3-89d5-4779-a638-0bb141b805ee"
>
</Parameter><Parameter
 Type="Kernel.TrackDescription.TrackConditions.TrackCondition"
 Name="Profile2"
 Guid="b598db9e-9187-4717-8a79-2f0205c0e215"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="Combine"
 Guid="87af9430-62ad-49c7-b1ad-abd576e61c85"
>
<Comment>Returns the combination of the two profiles</Comment>
<Expression>TrackCondition
{
    NonStoppingArea =&gt; (Profile1.NonStoppingArea OR Profile2.NonStoppingArea),
    TunnelStoppingArea =&gt; (Profile1.TunnelStoppingArea OR Profile2.TunnelStoppingArea),
    SoundHorn =&gt; (Profile1.SoundHorn OR Profile2.SoundHorn),
    PowerlessSection_LowerPantograph =&gt; (Profile1.PowerlessSection_LowerPantograph OR Profile2.PowerlessSection_LowerPantograph),
    RadioHole =&gt; (Profile1.RadioHole OR Profile2.RadioHole),
    AirTightness =&gt; (Profile1.AirTightness OR Profile2.AirTightness),
    SwitchOffRegenerativeBrake =&gt; (Profile1.SwitchOffRegenerativeBrake OR Profile2.SwitchOffRegenerativeBrake),
    SwitchOffEddyCurrentBrakeForSB =&gt; (Profile1.SwitchOffEddyCurrentBrakeForSB OR Profile2.SwitchOffEddyCurrentBrakeForSB),
    SwitchOffMagneticShoeBrake =&gt; (Profile1.SwitchOffMagneticShoeBrake OR Profile2.SwitchOffMagneticShoeBrake),
    PowerlessSection_SwitchOffTheMainPowerSwitch =&gt; (Profile1.PowerlessSection_SwitchOffTheMainPowerSwitch OR Profile2.PowerlessSection_SwitchOffTheMainPowerSwitch),
    SwitchOffEddyCurrentBrakeForEB =&gt; (Profile1.SwitchOffEddyCurrentBrakeForEB OR Profile2.SwitchOffEddyCurrentBrakeForEB)
}</Expression>
</Case></Cases>
</Function><Function
 Type="Kernel.TrackDescription.TrackConditions.TrackConditionInformation"
 Name="UpdatedTCProfile"
 Guid="4fb26885-3c76-4e5d-a634-a14c381f66a8"
>
<Comment>Takes a track condition profile point and data fram a track condition packet
If the profile point is in the section of applicability of the new data, the function combines that with the profile point
Otherwise, it just returns the profile point as it was</Comment>
<Parameters>
<Parameter
 Type="Kernel.TrackDescription.TrackConditions.TrackConditionInformation"
 Name="Profile"
 Guid="5e72dc8c-9bf9-42d6-8475-f02835f4f524"
>
</Parameter><Parameter
 Type="Default.BaseTypes.Distance"
 Name="Distance"
 Guid="e53c813a-a0df-4125-8e67-99aa76bf25e8"
>
</Parameter><Parameter
 Type="Default.BaseTypes.Distance"
 Name="Length"
 Guid="4944568a-d745-4584-b44d-d3ae5f24b986"
>
</Parameter><Parameter
 Type="Messages.M_TRACKCOND"
 Name="TCType"
 Guid="c9af5f25-9e8e-4eb4-9695-3b1daeed46a0"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="Profile to be combined"
 Guid="2bce27e9-b2ec-4f01-861f-b606243c3931"
>
<Comment>The profile is inside the section of track delimited by Distance and (Distance + Length)</Comment>
<PreConditions>
<PreCondition
 Guid="1fa5ac73-cb6b-439b-b27c-59259d113e7d"
>Profile.Distance &gt;= Distance</PreCondition><PreCondition
 Guid="13ab1164-7246-493c-b844-37fd7b218a61"
>Profile.Distance &lt; (Distance + Length)</PreCondition></PreConditions>
<Expression>TrackConditionInformation
{
    Distance =&gt; Profile.Distance,
    Value =&gt; CombineConditions(
        Profile1 =&gt; Profile.Value,
        Profile2 =&gt; TCProfilePoint(
            TCType=&gt;TCType,
            Distance=&gt;Distance,
            EndOfSection=&gt;False
        ).Value
    )
}</Expression>
</Case><Case
 Name="Otherwise"
 Guid="e16def7f-7165-4221-9cb5-8f8dbfb1754f"
>
<Expression>Profile</Expression>
</Case></Cases>
</Function></Functions>
<Procedures>
<Procedure
 Implemented="TRUE"
 Name="TrackConditionReceived"
 Guid="ffe9ac21-3e40-46fe-9612-29a0ab5ff84f"
>
<ReqRef
 Id="dde16995-5fb1-4c80-8c2c-c9294aa46944"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="e9a7e103-3cbf-4851-8d37-2947666417e8"
>
</ReqRef><ReqRef
 Id="ee609856-411d-4bb2-ab88-76b574aa3013"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="f6eba0fa-c8cd-4f2c-8496-061edf66f841"
>
</ReqRef><Comment>This procedure is called when a new axle load profile is received. There are two cases:
  - If the initial states have to be resumed, the distance to where they have to be resumed is saved
  - If no initial states have to be resumed, the axle load profile is updated (done by the HandleNewAxleLoadProfile procedure)</Comment>
<Parameters>
<Parameter
 Type="Messages.PACKET.TRACK_TO_TRAIN.TRACK_CONDITION.Message"
 Name="Packet"
 Guid="d30fa5db-2c47-4413-b475-ba618d5e7a74"
>
</Parameter></Parameters>
<Rules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="UpdateTrackConditions"
 Guid="90a94ff8-c2f4-4bd8-ac3c-65c786db514b"
>
<Comment></Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="InitialStatesToBeResumed"
 Guid="8cf096f7-b753-44fd-9730-942361ef7450"
>
<Comment></Comment>
<PreConditions>
<PreCondition
 Guid="8fabb5f7-5fa8-45f4-b36d-c0420a360baf"
>Packet.Q_TRACKINIT == Messages.Q_TRACKINIT.Empty_profile__initial_states_to_be_resumed</PreCondition></PreConditions>
<Actions>
<Action
 Guid="cc227c70-643c-452b-b941-13c9a55589e2"
>REMOVE ALL 
    X.Distance &gt;= Default.MessageTypes.QScaleDistance(distance=&gt; Packet.D_TRACKINIT, scale=&gt; Packet.Q_SCALE)
IN
    TCProfile</Action><Action
 Guid="b5b87575-a081-4006-956f-527bfabc9dfd"
>INSERT
    TrackConditionInformation
    {
        Distance =&gt; Default.MessageTypes.QScaleDistance(distance=&gt; Packet.D_TRACKINIT, scale=&gt; Packet.Q_SCALE)
    }
IN
    TCProfile</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="NoInitialStatesToBeResumed"
 Guid="3c74e934-0111-4385-92a4-03602e3e7b11"
>
<Comment></Comment>
<PreConditions>
<PreCondition
 Guid="3d6d20c8-f705-4764-be32-ab6e2707a483"
>Packet.Q_TRACKINIT == Messages.Q_TRACKINIT.No_initial_states_to_be_resumed__profile_to_follow</PreCondition></PreConditions>
<Actions>
<Action
 Guid="c78472f5-3741-4e00-a564-1bebf1643278"
>HandleNewTrackCondition ( Packet )</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</Procedure><Procedure
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="HandleNewTrackCondition"
 Guid="f1d8b1e1-a151-4f17-94f5-0d5c099b6a36"
>
<Comment>Updates the track conditions according to the values of the packet received as parameter.</Comment>
<Parameters>
<Parameter
 Type="Messages.PACKET.TRACK_TO_TRAIN.TRACK_CONDITION.Message"
 Name="Packet"
 Guid="1d5c9f0a-7cfe-4ea2-8671-1b7b2f77ef0f"
>
</Parameter></Parameters>
<Rules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="RemoveOldTrackConditions"
 Guid="4c889b61-eb2b-4bd5-ba0d-91b2d6514374"
>
<ReqRef
 Id="07495681-fe6b-45c8-b0b9-9768f78e0985"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="2114f3d4-5e6c-4a8e-941e-7c8d23133337"
>
</ReqRef><Comment>When new data is received, all old data starting from the start of the new data is overwritten</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="RemoveOldTrackConditions"
 Guid="23d47766-bd5e-4cae-a557-9102df6d5fc2"
>
<ReqRef
 Id="c514bd3c-cce6-498e-97b5-6418e2ac6fcf"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="d95e8494-eba9-4371-a5cb-ebaaef8a68b7"
>
</ReqRef><PreConditions>
</PreConditions>
<Actions>
<Action
 Guid="e442a836-0892-422d-9982-9577731091f3"
>REMOVE ALL X.Distance &gt;= NewInfoStartLocation( Packet =&gt; Packet) 
    IN TCProfile</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="AddNewTrackCondition"
 Guid="65ddcb36-4bef-42bb-8990-277543a93ade"
>
<Comment>Inserts the newly received track conditions in TCProfile</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Insert first point in the track conditions profile"
 Guid="a0e066da-f080-415a-aa9e-b727e25af178"
>
<ReqRef
 Id="13a5ea24-0fd2-4281-99df-f3585e1e8e67"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="be00d504-2e1e-4736-b01b-1385f522a922"
>
</ReqRef><ReqRef
 Id="c514bd3c-cce6-498e-97b5-6418e2ac6fcf"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="1e4b3579-e957-48f5-958c-7d432de14dc1"
>
</ReqRef><ReqRef
 Id="d93685bd-18ea-422e-8641-3e9ed6427e66"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="f69fd2df-78c4-4e05-b977-e25bef8e94bd"
>
</ReqRef><ReqRef
 Id="b95a22fb-0a06-4d2a-b9f8-73a082712d4c"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="a6b483b8-9037-4c7b-9311-4b1741f8b72a"
>
</ReqRef><PreConditions>
</PreConditions>
<Actions>
<Action
 Guid="ac96795b-c14a-4b35-9f61-1888f3f2ce6e"
>AddSectionToProfile(
    Dist=&gt;Default.MessageTypes.QScaleDistance(
        distance=&gt;Packet.D_TRACKCOND,
        scale=&gt;Packet.Q_SCALE
    )
    ,
    Length=&gt; Default.MessageTypes.QScaleDistance(
        distance=&gt;Packet.L_TRACKCOND,
        scale=&gt;Packet.Q_SCALE
    )
    ,
    TCType=&gt;Packet.M_TRACKCOND
)</Action></Actions>
</RuleCondition><RuleCondition
 Name="Insert further points in the track condition profile"
 Guid="f825e64f-589c-4c0b-9bed-6757f77d7c26"
>
<PreConditions>
</PreConditions>
<Actions>
<Action
 Guid="9f1d4d9f-5bbe-4618-a012-23fcf1167225"
>APPLY
    AddSectionToProfile(
        Dist=&gt;Default.MessageTypes.QScaleDistance(
        distance=&gt;X.D_TRACKCOND,
        scale=&gt;Packet.Q_SCALE
    )
    ,
        Length=&gt;Default.MessageTypes.QScaleDistance(
        distance=&gt;X.L_TRACKCOND,
        scale=&gt;Packet.Q_SCALE
    )
    ,
        TCType=&gt;X.M_TRACKCOND
    )
ON
    Packet.Sequence1</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</Procedure><Procedure
 Name="AddSectionToProfile"
 Guid="b009a873-079a-439e-88d4-ce0131898a9c"
>
<Comment>Takes a distance, a length and a track condition type and inserts them all in TCProfile</Comment>
<Parameters>
<Parameter
 Type="Default.BaseTypes.Distance"
 Name="Dist"
 Guid="593b3e33-c06e-4d3e-a38d-aa1667c836e2"
>
</Parameter><Parameter
 Type="Default.BaseTypes.Distance"
 Name="Length"
 Guid="1116012c-b720-45ba-85a8-08a0e7d136b8"
>
</Parameter><Parameter
 Type="Messages.M_TRACKCOND"
 Name="TCType"
 Guid="00378ab1-f1e8-4ebd-bbd6-1eb07fdab0f3"
>
</Parameter></Parameters>
<Rules>
<Rule
 Priority="Processing"
 Name="Add end of section"
 Guid="fa1bee7b-7c72-483b-a7c7-f899c6b1b808"
>
<Comment>It&apos;s important that the end of the section be added first, so that the profile is reset properly</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Name="End of section is a new point"
 Guid="bf60bf58-4971-4952-b4d9-c3b151e71117"
>
<Comment>The end of the new section does not match any existing section boundaries
If there is already at a point at the end location, the values will not be changed</Comment>
<PreConditions>
<PreCondition
 Guid="5c2fd295-1fa0-4273-8634-53b3ce87e09e"
>NOT (THERE_IS_IN TCProfile | X.Distance == Dist+Length)</PreCondition></PreConditions>
<Actions>
<Action
 Guid="4b054b67-3098-417b-8cab-bb8d689d1032"
>INSERT
    TCProfilePoint(
        TCType=&gt;TCType,
        Distance=&gt;(Dist+Length),
        EndOfSection=&gt;True
    )
IN
    TCProfile</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 Name="Add start of section"
 Guid="81a8e7c3-caef-4433-99ad-920af5316b1f"
>
<Comment>After the end of the section is added, the start is added too</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Name="Start of section is a new point"
 Guid="5dec3438-de77-49b3-bfe9-0dd5745bcb38"
>
<Comment>If the start of the section is a new point, add a TCProfilePoint to the TCProfile
If there is already a point at the start of the section, its conditions will be merged with the new one in the following step</Comment>
<PreConditions>
<PreCondition
 Guid="e75ca188-658d-4763-a32d-985d6154454c"
>NOT (THERE_IS_IN TCProfile | X.Distance == Dist)</PreCondition></PreConditions>
<Actions>
<Action
 Guid="be8dab85-6e95-4b9e-b7b4-0a9c8968a606"
>INSERT
    TCProfilePoint(
        TCType=&gt;TCType,
        Distance=&gt;Dist,
        EndOfSection=&gt;False
    )
IN
    TCProfile</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 Name="Combine with intermediate points"
 Guid="0bcfb44a-1965-44ba-a1a6-c7e921aff7b7"
>
<Comment>Add the track condition to all the points inside the added section</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Name="Combine with intermediate points"
 Guid="a411a708-c6b6-4c0e-8c34-b4ab01ef08a6"
>
<PreConditions>
</PreConditions>
<Actions>
<Action
 Guid="0c73a213-20bf-4acb-9a85-b05e04dcdd19"
>TCProfile &lt;- MAP TCProfile
    USING UpdatedTCProfile(
    Profile=&gt;X,
    Distance=&gt;Dist,
    Length=&gt;Length,
    TCType=&gt;TCType
)</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</Procedure></Procedures>
<Variables>
<Variable
 Type="TrackConditions.TrackConditions"
 DefaultValue=""
 VariableMode="Internal"
 Implemented="TRUE"
 Name="TCProfile"
 Guid="cccc0a77-8fa1-4a0d-a42d-ef124c77a533"
>
<ReqRef
 Id="dfc71e5b-2d0d-4dce-9a5c-f6e69ea53363"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="873d386b-aff6-4f28-8601-bc8d49cc1a6e"
>
</ReqRef><ReqRef
 Id="8306ee07-3124-4992-96a3-0cf3c84e47b7"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="edc4183d-a273-4327-9256-6b9409ec4747"
>
</ReqRef><ReqRef
 Id="0d1804a4-9b7c-406f-bb28-e8e42df86344"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="94fb2018-a948-446d-bf12-0a40d5d0147d"
>
</ReqRef><ReqRef
 Id="c9386a51-4e30-4b1e-915c-aad5f1f5488f"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="650f6c2d-1706-4dd4-8043-80e2fa0d9ec6"
>
</ReqRef><ReqRef
 Id="a2d32abf-08a0-4bc5-b97e-117e6a4fd998"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="b8e66afd-d19f-49f8-bc21-0f8f29d3a6e0"
>
</ReqRef><ReqRef
 Id="444d11ee-84f0-4837-8c17-f111d045857d"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="da5849cb-2a9c-4b1c-bc21-f13cf8f22a92"
>
</ReqRef><ReqRef
 Id="ee609856-411d-4bb2-ab88-76b574aa3013"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="189783c6-52e9-4e03-8d17-c98f3d5ca55e"
>
</ReqRef><ReqRef
 Id="46ff0663-ed84-4dea-af46-b87941a77c51"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="2124b7ca-ef8b-4550-a4dc-682e5fefe0eb"
>
</ReqRef><Comment>The list of track conditions received from the trackside.</Comment>
</Variable></Variables>
<Rules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="TrackConditionMonitor"
 Guid="cc34139d-3070-45e8-a515-b8e0e7c2fc14"
>
<Comment></Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 NeedsRequirement="FALSE"
 Name="TrackConditionMonitor"
 Guid="ced5e120-84d3-467c-874d-c59f3295c395"
>
<PreConditions>
<PreCondition
 Guid="350df558-dfb4-44a2-b044-e9392fd336bb"
>TCProfile != EMPTY</PreCondition></PreConditions>
<Actions>
<Action
 Guid="effae0ff-821f-49a4-b156-ec9f0cd7cc5b"
>REMOVE ALL ConditionExitsApplicability ( X ) IN TCProfile</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</NameSpace>
