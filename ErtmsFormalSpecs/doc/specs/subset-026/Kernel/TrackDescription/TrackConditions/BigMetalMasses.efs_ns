<NameSpace
 Name="BigMetalMasses"
 Guid="022a925c-739c-49d9-8aaf-309ab8f1f099"
>
<NameSpaces>
</NameSpaces>
<Structures>
<Structure
 Name="BigMetalMassesInformation"
 Guid="20f0007f-dcf5-4b3c-b52e-1de6cffe79d6"
>
<StructureElement
 TypeName="Default.BaseTypes.Distance"
 Default=""
 Mode="Internal"
 Name="Distance"
 Guid="bd7c689a-7912-4dc8-90e8-2a7153fe27eb"
>
</StructureElement><StructureElement
 TypeName="Boolean"
 Default="False"
 Mode="Internal"
 Name="Value"
 Guid="9bc0dd19-9500-4d07-9f98-b08260bc6477"
>
</StructureElement></Structure></Structures>
<Collections>
<Collection
 TypeName="BigMetalMasses.BigMetalMassesInformation"
 Default="[]"
 Name="BigMetalMasses"
 Guid="e0835a4f-f803-4848-b153-abf4979ae387"
>
</Collection></Collections>
<Functions>
<Function
 Type="Default.BaseTypes.Distance"
 Implemented="TRUE"
 Name="BMMSectionEnd"
 Guid="611bd0c2-48fe-489f-8a43-364caca2b92a"
>
<ReqRef
 Id="00dfa999-7dd3-4fe9-a2d0-8fab1506a7d9"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="e128a5db-3cb5-495c-8f1f-c4395a12c83c"
>
</ReqRef><ReqRef
 Id="71debd8d-545a-49ca-835b-4ce037e22fb7"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="4c654917-4571-4046-adc2-148bcfcc529c"
>
</ReqRef><ReqRef
 Id="75f0036b-52d0-4886-96af-89590c44b242"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="d48c8888-2942-4a5a-b589-28e9e3c75d05"
>
</ReqRef><Comment>Returns the location of the end of the section, based on the start and the type of track condition</Comment>
<Parameters>
<Parameter
 Type="Default.BaseTypes.Distance"
 Name="Distance"
 Guid="f7762c4d-9022-47e3-9d87-d69978b2d7c7"
>
</Parameter><Parameter
 Type="Default.BaseTypes.Length"
 Name="Length"
 Guid="045fd1b1-bcde-4d28-bf51-ebc09b5149ea"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="Ends at front of train"
 Guid="ea72f321-a666-4fab-a59a-d3c3ba7af32f"
>
<Comment>The end of powerless sections, tunnel stopping areas and sound horns are when the front of the train reaches the end</Comment>
<Expression>Distance + Default.BaseTypes.LengthToDistance(Length) - BTM.ActiveAntennaPosition</Expression>
</Case></Cases>
</Function><Function
 Type="Boolean"
 Implemented="TRUE"
 Name="BMMAtDistance"
 Guid="e10781ac-cbff-4ff5-ac75-5a41400cf2d1"
>
<ReqRef
 Id="b25e8d2d-5034-4a5d-bf39-2ddf58ec8b98"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="563157e7-d50e-4ba2-b3f0-a362fd4d3850"
>
</ReqRef><Comment>Returns True if the train has been warned about big metal masses on the trackside at the given distance</Comment>
<Parameters>
<Parameter
 Type="Default.BaseTypes.Distance"
 Name="Distance"
 Guid="0eecc0ea-9d46-43f0-91a6-74b5edaced51"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="Previous conditions exist"
 Guid="ab487d20-209d-49a0-be75-7406c8252da9"
>
<Comment>There are track conditions prior to the requested distance</Comment>
<PreConditions>
<PreCondition
 Guid="832233ef-515a-48e0-b7e8-861ac3cdeea6"
>THERE_IS_IN TCBigMetalMasses | (X.Distance &lt;= Distance)</PreCondition></PreConditions>
<Expression>REDUCE TCBigMetalMasses | (X.Distance == BMMProfileStartLocation(Distance=&gt;Distance) )
    USING X.Value
  INITIAL_VALUE EMPTY</Expression>
</Case><Case
 Name="Otherwise"
 Guid="6de7d371-027a-4f79-8920-bfbb8eaa86b6"
>
<Comment>There are no track conditions that apply before the requested distance</Comment>
<Expression>False</Expression>
</Case></Cases>
</Function><Function
 Type="Default.BaseTypes.Distance"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="BMMProfileStartLocation"
 Guid="ed1fab91-2392-4c6c-8fd6-e7d35c87ee60"
>
<Comment>Returns the track conditions that apply at the given distance</Comment>
<Parameters>
<Parameter
 Type="Default.BaseTypes.Distance"
 Name="Distance"
 Guid="15d34884-57b6-4cd4-aa08-3ef319b588c0"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="Value"
 Guid="db14e75b-7d6d-486e-ac7f-ebe4ae49f3bd"
>
<Comment>Returns the element in TCProfile with the largest distance that is less than or equal to the parameter</Comment>
<Expression>REDUCE TCBigMetalMasses | NOT(X.Distance &gt; Distance)
    USING Default.BaseTypes.MaxDistance(
        X1=&gt;X.Distance,
        X2=&gt;RESULT)
  INITIAL_VALUE Default.BaseTypes.Distance.Infinity</Expression>
</Case></Cases>
</Function><Function
 Type="Default.BaseTypes.Distance"
 Implemented="TRUE"
 Name="NewBMMInfoStartLocation"
 Guid="10813a2a-daf4-4bdd-8981-2f5e866394c7"
>
<ReqRef
 Id="07495681-fe6b-45c8-b0b9-9768f78e0985"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="4f05a194-550b-4232-a2ac-9e6dbc932711"
>
</ReqRef><Comment>Returns the start location of the first element of a packet of Track Conditions</Comment>
<Parameters>
<Parameter
 Type="Messages.PACKET.TRACK_TO_TRAIN.TRACK_CONDITION_BIG_METAL_MASSES.Message"
 Name="Packet"
 Guid="6f536899-d694-45f1-8ad2-97d8cc34326f"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="If the message contains track conditions, return the closest one"
 Guid="e47808d7-2603-4a90-b6f9-9650043f9967"
>
<Comment>Returns the D_TRACKCOND in the Packet with the lowest value</Comment>
<Expression>REDUCE Packet.Sequence1
  USING Default.BaseTypes.MinDistance(
    X1=&gt; Default.MessageTypes.QScaleDistance(distance=&gt;X.D_TRACKCOND, scale=&gt;Packet.Q_SCALE),
    X2=&gt;RESULT
)
  INITIAL_VALUE Default.MessageTypes.QScaleDistance(distance=&gt;Packet.D_TRACKCOND, scale=&gt;Packet.Q_SCALE)</Expression>
</Case></Cases>
</Function><Function
 Type="Boolean"
 Implemented="TRUE"
 Name="CurrentBMMConditions"
 Guid="8f9dabf4-eecf-4c72-89e6-cfdda29dabba"
>
<ReqRef
 Id="00dfa999-7dd3-4fe9-a2d0-8fab1506a7d9"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="d2f31e44-423d-4fad-9df9-0f33463caee2"
>
</ReqRef><ReqRef
 Id="75f0036b-52d0-4886-96af-89590c44b242"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="d71fd714-1377-4e6e-ac3d-89b751ca94fb"
>
</ReqRef><Comment>Gives the current track conditions</Comment>
<Cases>
<Case
 Name="Value"
 Guid="210e3e31-9619-4f77-a0aa-d3297a0df930"
>
<Comment>For most profiles, the starting point is when the max safe front end of the train passes the location specified in the message and the end point is when the min safe rear end passes the location + the section length. (the exceptions to this are powerless sections (which use the min safe front end of the train for the end point), and tunnel stopping and sound horn areas (which use the estimated front end of the train).
When this is recorded in TCProfile, the end points are adjusted so that they are measured with respect to the front end of the train.
When the train passes over a profile point, it doesn&apos;t know if that point marks a start of section, end of section or even both. If it is a start of section, the condition takes effect as soon as the max safe front end of the train passes over it. If it is an end, the condition stays in effect until the min safe front end passes over it. So to account for all cases, each condition is given as the combination of the profile at the max safe front end and the min safe front end of most conditions, and the value at the estimated front end of the train for Tunnel Stopping Area and Sound Horn</Comment>
<Expression>BMMAtDistance(Distance=&gt; TrainPosition.FrontEndPosition(PointOfInterest=&gt;DistanceInterval.Max))
  OR  
BMMAtDistance(Distance=&gt; TrainPosition.FrontEndPosition(PointOfInterest=&gt;DistanceInterval.Min))</Expression>
</Case></Cases>
</Function></Functions>
<Procedures>
<Procedure
 NeedsRequirement="FALSE"
 Name="HandleNewBMMTrackCondition"
 Guid="64859c59-8b18-4845-b9aa-7000c43e0a63"
>
<Comment>Updates the track conditions according to the values of the packet received as parameter.</Comment>
<Parameters>
<Parameter
 Type="Messages.PACKET.TRACK_TO_TRAIN.TRACK_CONDITION_BIG_METAL_MASSES.Message"
 Name="Packet"
 Guid="08f94df9-0910-4c1e-ac59-35ad942a112f"
>
</Parameter></Parameters>
<Rules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="RemoveOldTrackConditions"
 Guid="26105147-399a-4834-bc91-9368bc37ca90"
>
<Comment>When new data is received, all old data starting from the start of the new data is overwritten</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="RemoveOldTrackConditions"
 Guid="c681f7bd-1680-4d57-bc4f-986f4b4c4eef"
>
<ReqRef
 Id="c514bd3c-cce6-498e-97b5-6418e2ac6fcf"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="5ede11e9-39d8-4a6e-bf74-e4c1d907fe82"
>
</ReqRef><PreConditions>
</PreConditions>
<Actions>
<Action
 Guid="2e8ac763-7528-4050-b24d-3013d722c50a"
>REMOVE ALL X.Distance &gt;= NewBMMInfoStartLocation( Packet =&gt; Packet) 
    IN TCBigMetalMasses</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="AddNewTrackCondition"
 Guid="55335876-0359-4fb5-bde2-44596cb52a47"
>
<Comment>Inserts the newly received track conditions in TCProfile</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Insert first point in the track conditions profile"
 Guid="43d2e382-569b-4837-b468-df8b119e0a9f"
>
<ReqRef
 Id="c514bd3c-cce6-498e-97b5-6418e2ac6fcf"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="3318e382-79a8-4a85-af89-57a581888157"
>
</ReqRef><ReqRef
 Id="d93685bd-18ea-422e-8641-3e9ed6427e66"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="d0bb72f1-3a60-48b2-a0b0-ada908e12475"
>
</ReqRef><Comment>Handle the M_TRACKCOND, D_TRACKCOND and L_TRACKCOND fields in Packet</Comment>
<PreConditions>
</PreConditions>
<Actions>
<Action
 Guid="4456f7d5-5ea0-4224-8e9a-6e99581f4040"
>AddSectionToBMMs(
    Distance=&gt;Default.MessageTypes.QScaleDistance(
        distance=&gt;Packet.D_TRACKCOND,
        scale=&gt;Packet.Q_SCALE
    )
    ,
    Length=&gt; Default.MessageTypes.QScaleLength(
        length=&gt;Packet.L_TRACKCOND,
        scale=&gt;Packet.Q_SCALE
    )
)</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Insert further points in the track condition profile"
 Guid="8f25c985-e0ee-415d-9260-5cf26d833e61"
>
<Comment>Handle Sequence1 in Packet</Comment>
<PreConditions>
</PreConditions>
<Actions>
<Action
 Guid="87f1ee03-d658-40fb-95a6-40fe271fc15e"
>APPLY
    AddSectionToBMMs(
        Distance=&gt;Default.MessageTypes.QScaleDistance(distance=&gt;Packet.D_TRACKCOND,scale=&gt;Packet.Q_SCALE) - BTM.ActiveAntennaPosition,
        Length=&gt; Default.MessageTypes.QScaleLength(
            length=&gt;Packet.L_TRACKCOND,
            scale=&gt;Packet.Q_SCALE
        )
    )
ON
    Packet.Sequence1</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</Procedure><Procedure
 Name="AddSectionToBMMs"
 Guid="df4ff79b-0983-4791-97fc-142934307075"
>
<ReqRef
 Id="00dfa999-7dd3-4fe9-a2d0-8fab1506a7d9"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="b189a39b-7388-4b70-a4a7-9531024c6162"
>
</ReqRef><ReqRef
 Id="75f0036b-52d0-4886-96af-89590c44b242"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="49e5cae6-6d26-4b7e-bc30-0c68389cddb7"
>
</ReqRef><ReqRef
 Id="71debd8d-545a-49ca-835b-4ce037e22fb7"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="acb03db4-cf06-457a-895d-690e1daf4040"
>
</ReqRef><Comment>Takes a distance, a length and a track condition type and inserts them all in TCProfile</Comment>
<Parameters>
<Parameter
 Type="Default.BaseTypes.Distance"
 Name="Distance"
 Guid="ee23deeb-c766-4e6a-a821-57a7f78ca63b"
>
</Parameter><Parameter
 Type="Default.BaseTypes.Length"
 Name="Length"
 Guid="f822f960-fc86-47ea-88ce-40320c43da70"
>
</Parameter></Parameters>
<Rules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="Add end of section"
 Guid="7b46a749-c331-4d77-ae23-9563c46e460e"
>
<Comment>It&apos;s important that the end of the section be added first, so that the profile is built properly</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="End of section is a new point"
 Guid="a4bcb40b-e8aa-4abd-827e-e78420e2b89c"
>
<Comment>The end of the new section does not match any existing section boundaries
If there is already at a point at the end location, the values will not be changed</Comment>
<PreConditions>
</PreConditions>
<Actions>
<Action
 Guid="f41e0e6b-f4f6-4efa-a83b-26fce22c0fa3"
><Comment>EndSectionDistance provides the end location (in terms of the front end of the train) of the section</Comment>
INSERT BigMetalMassesInformation{
    Distance=&gt;BMMSectionEnd(
        Distance=&gt;Distance,
        Length=&gt;Length
        ),
    Value=&gt;True
    }
IN
    TCBigMetalMasses</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="Add start of section"
 Guid="12410614-2252-4916-8f37-59f042f8f43c"
>
<Comment>After the end of the section is added, the start is added too</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Start of section is a new point"
 Guid="e34bee05-238a-48aa-8f79-2645fa362cf1"
>
<Comment>If the start of the section is a new point, add a TCProfilePoint to the TCProfile
If there is already a point at the start of the section, its conditions will be merged with the new one in the following step</Comment>
<PreConditions>
</PreConditions>
<Actions>
<Action
 Guid="260a89f3-ee3a-4960-a54b-8bb92247e287"
>INSERT BigMetalMassesInformation {
    Distance=&gt;Distance,
    Value=&gt;False
    }
IN
    TCBigMetalMasses</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</Procedure></Procedures>
<Variables>
<Variable
 Type="BigMetalMasses"
 VariableMode="Internal"
 Name="TCBigMetalMasses"
 Guid="b429b8d9-31f7-4370-8e74-13b074893895"
>
<Comment>Big Metal Masses track conditions profile</Comment>
</Variable></Variables>
</NameSpace>
