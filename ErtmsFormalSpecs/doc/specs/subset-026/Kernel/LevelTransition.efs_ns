<NameSpace
 Name="LevelTransition"
>
<NameSpaces>
</NameSpaces>
<Structures>
<Structure
 Implemented="TRUE"
 Name="LevelTransition"
>
<ReqRef
 Id="5.10.1.1"
>
</ReqRef><ReqRef
 Id="5.10.1.2"
>
</ReqRef><ReqRef
 Id="7.4.2.9.bis"
>
</ReqRef><StructureElement
 TypeName="Default.BaseTypes.Length"
 Default=""
 Mode="Internal"
 Implemented="TRUE"
 Name="AcknLength"
>
<ReqRef
 Id="7.5.1.39"
>
</ReqRef></StructureElement><StructureElement
 TypeName="Default.LevelData"
 Default=""
 Mode="Internal"
 Name="TRLevel"
>
<ReqRef
 Id="7.5.1.67"
>
</ReqRef><ReqRef
 Id="7.5.1.98"
>
</ReqRef><Comment></Comment>
</StructureElement></Structure><Structure
 Implemented="TRUE"
 Name="LevelTransitionOrder"
>
<ReqRef
 Id="5.10.1.1"
>
</ReqRef><ReqRef
 Id="5.10.1.4"
>
</ReqRef><ReqRef
 Id="Entry 7.4.1.1.14"
>
</ReqRef><ReqRef
 Id="Entry 7.4.1.1.18"
>
</ReqRef><ReqRef
 Id="7.4.2.9.bis"
>
</ReqRef><Comment></Comment>
<StructureElement
 TypeName="Default.BaseTypes.Distance"
 Default=""
 Mode="Internal"
 Implemented="TRUE"
 Name="Distance"
>
<ReqRef
 Id="7.5.1.9"
>
</ReqRef></StructureElement><StructureElement
 TypeName="LTs"
 Default=""
 Mode="Internal"
 Implemented="TRUE"
 Name="LevelandLength"
>
<ReqRef
 Id="7.5.1.39"
>
</ReqRef><Comment></Comment>
</StructureElement><StructureElement
 TypeName="Boolean"
 Default=""
 Mode="Internal"
 Implemented="TRUE"
 Name="IsLTO"
>
</StructureElement></Structure></Structures>
<Collections>
<Collection
 TypeName="LevelTransition"
 MaxSize="20"
 Default="[]"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="LTs"
>
<ReqRef
 Id="7.4.2.9.bis"
>
</ReqRef></Collection></Collections>
<Functions>
<Function
 Type="Default.Level"
 Implemented="TRUE"
 Name="ERTMS_to_EFS_Level"
>
<ReqRef
 Id="5.10.1.1"
>
</ReqRef><Parameters>
<Parameter
 Type="Messages.M_LEVELTR"
 Name="LevelT"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="Level 0"
>
<PreConditions>
<PreCondition>LevelT== Messages.M_LEVELTR.Level_0</PreCondition></PreConditions>
<Expression>Default.Level.L0</Expression>
</Case><Case
 Name="Level 1"
>
<PreConditions>
<PreCondition>LevelT == Messages.M_LEVELTR.Level_1</PreCondition></PreConditions>
<Expression> Default.Level.L1</Expression>
</Case><Case
 Name="Level 2"
>
<PreConditions>
<PreCondition>LevelT == Messages.M_LEVELTR.Level_2</PreCondition></PreConditions>
<Expression> Default.Level.L2</Expression>
</Case><Case
 Name="Level 3"
>
<PreConditions>
<PreCondition>LevelT == Messages.M_LEVELTR.Level_3</PreCondition></PreConditions>
<Expression> Default.Level.L3</Expression>
</Case><Case
 Name="Level STM"
>
<PreConditions>
<PreCondition>LevelT == Messages.M_LEVELTR.Level_STM_specified_by_NID_STM</PreCondition></PreConditions>
<Expression>Default.Level.LNTC</Expression>
</Case></Cases>
</Function><Function
 Type="Boolean"
 Implemented="TRUE"
 Name="AvailableForUse"
>
<ReqRef
 Id="5.10.2.4.1"
>
</ReqRef><Comment>Level NTC remains a non-implemented case because we have no information here which NTC/STM is relevant (and how this is modelled).</Comment>
<Parameters>
<Parameter
 Type="Default.LevelData"
 Name="Level"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="Level 0,1"
>
<PreConditions>
<PreCondition>Level.Value in [Default.Level.L0, Default.Level.L1]</PreCondition></PreConditions>
<Expression>Boolean.True</Expression>
</Case><Case
 Name="Level NTC"
>
<PreConditions>
<PreCondition>Level.Value == Default.Level.LNTC</PreCondition><PreCondition>THERE_IS_IN Kernel.TrainData.TrainData.Value.LevelsSupportedOnBoard |  ( X.Value == Level.Value AND X.NTC == Level.NTC )</PreCondition></PreConditions>
<Expression>Boolean.True</Expression>
</Case><Case
 Name="Level 2,3"
>
<PreConditions>
<PreCondition>Level.Value in [Default.Level.L2, Default.Level.L3]</PreCondition><PreCondition>EURORADIO.OneMobileTerminalIsAvailable()</PreCondition></PreConditions>
<Expression>Boolean.True</Expression>
</Case><Case
 Name="Otherwise"
>
<Expression>Boolean.False</Expression>
</Case></Cases>
</Function></Functions>
<Procedures>
<Procedure
 Implemented="TRUE"
 Name="AddNewLTO"
>
<ReqRef
 Id="7.5.1.39"
>
</ReqRef><ReqRef
 Id="7.5.1.67"
>
</ReqRef><ReqRef
 Id="5.10.1.2"
>
</ReqRef><ReqRef
 Id="7.4.2.9.bis"
>
</ReqRef><Parameters>
<Parameter
 Type="Default.MessageTypes.Length"
 Name="L_ACKLEVELTR"
>
</Parameter><Parameter
 Type="Messages.M_LEVELTR"
 Name="M_LEVELTR"
>
</Parameter><Parameter
 Type="Messages.Q_SCALE"
 Name="Q_SCALE"
>
</Parameter><Parameter
 Type="Messages.NID_NTC"
 Name="NID_NTC"
>
</Parameter></Parameters>
<Rules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="AddNewLTO"
>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Name="NewLevelTransitionToNTC"
>
<PreConditions>
<PreCondition>ERTMS_to_EFS_Level ( LevelT =&gt; M_LEVELTR ) == Default.Level.LNTC</PreCondition></PreConditions>
<Actions>
<Action>INSERT
LevelTransition
{
    AcknLength=&gt;MessageTypes.QScaleLength ( length =&gt; L_ACKLEVELTR, scale =&gt; Q_SCALE ),
    TRLevel =&gt; Default.LevelData {
       Value =&gt; ERTMS_to_EFS_Level ( LevelT =&gt; M_LEVELTR ),
       NTC =&gt; Default.NID_NTC(NID_NTC)
    }
}
IN  LevelTransitionOrder.LevelandLength</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="NewLevelTransition"
>
<PreConditions>
<PreCondition>ERTMS_to_EFS_Level ( LevelT =&gt; M_LEVELTR ) != Default.Level.LNTC</PreCondition></PreConditions>
<Actions>
<Action>INSERT
LevelTransition
{
    AcknLength=&gt;MessageTypes.QScaleLength ( length =&gt; L_ACKLEVELTR, scale =&gt; Q_SCALE ),
    TRLevel =&gt; Default.LevelData {
       Value =&gt; ERTMS_to_EFS_Level ( LevelT =&gt; M_LEVELTR ),
       NTC =&gt; Default.NID_NTC.NOT_APPLICABLE
    }
}
IN  LevelTransitionOrder.LevelandLength</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</Procedure><Procedure
 Implemented="TRUE"
 Name="LTOReceived"
>
<ReqRef
 Id="5.10.1.1"
>
</ReqRef><ReqRef
 Id="5.10.1.2"
>
<Comment></Comment>
</ReqRef><ReqRef
 Id="5.10.2.1"
>
</ReqRef><ReqRef
 Id="7.4.2.9.bis"
>
</ReqRef><Comment>Is called whenever a new trackside-information regarding an upcoming transition is received. It will take care about the first (highest priority) LTO and forward the others to AddNewLTO.</Comment>
<Parameters>
<Parameter
 Type="Messages.PACKET.TRACK_TO_TRAIN.LEVEL_TRANSITION_ORDER.Message"
 Name="Packet"
>
</Parameter></Parameters>
<Rules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="ReceiveData_Part1"
>
<ReqRef
 Id="5.10.2.2"
>
</ReqRef><ReqRef
 Id="7.4.2.9.bis"
>
</ReqRef><SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="NewLevelTransition"
>
<Comment></Comment>
<PreConditions>
</PreConditions>
<Actions>
<Action>LevelTransitionOrder &lt;- LevelTransitionOrder
{
  IsLTO=&gt; True,
  Distance =&gt; MessageTypes.QScaleDistance ( distance =&gt; Packet.D_LEVELTR, scale =&gt; Packet.Q_SCALE ),
  LevelandLength =&gt; [ LevelTransition { Length =&gt;Packet.L_ACKLEVELTR, Level =&gt; Packet.M_LEVELTR } ]
}</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 Name="ReceiveData_Part2"
>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="NextLevelTransition"
>
<Comment></Comment>
<PreConditions>
</PreConditions>
<Actions>
<Action>APPLY 
AddNewLTO 
( 
   L_ACKLEVELTR =&gt; X.L_ACKLEVELTR,
   M_LEVELTR =&gt; X.M_LEVELTR,
   NID_NTC =&gt; Packet.NID_NTC,
   Q_SCALE=&gt; Packet.Q_SCALE
)
ON 
Packet.Sequence1</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 Name="ProcessLTO"
>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Name="ProcessLTO"
>
<PreConditions>
</PreConditions>
<Actions>
<Action>ProcessLTOGeneric()</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</Procedure><Procedure
 Implemented="TRUE"
 Name="CLTOReceived"
>
<ReqRef
 Id="5.10.1.4"
>
</ReqRef><ReqRef
 Id="Entry 7.4.1.1.17"
>
</ReqRef><Parameters>
<Parameter
 Type="Messages.PACKET.TRACK_TO_TRAIN.CONDITIONAL_LEVEL_TRANSITION_ORDER.Message"
 Name="Packet"
>
</Parameter></Parameters>
<Rules>
<Rule
 Priority="Processing"
 Name="ReceiveData_Part1"
>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="NewConditionalLevelTransition"
>
<PreConditions>
</PreConditions>
<Actions>
<Action>LevelTransitionOrder &lt;- LevelTransitionOrder
{
   IsLTO=&gt; False,
   Distance =&gt; EMPTY,
   LevelandLength =&gt; [ LevelTransition { Length =&gt;EMPTY, Level =&gt; Packet.M_LEVELTR } ]
}</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 Name="ReceiveData_Part2"
>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="NextConditionalLevelTransition"
>
<PreConditions>
</PreConditions>
<Actions>
<Action>APPLY 
AddNewLTO 
(  
   M_LEVELTR =&gt; X.M_LEVELTR,
   NID_NTC =&gt; Packet.NID_NTC,
   Q_SCALE =&gt; EMPTY,
   L_ACKLEVELTR =&gt; EMPTY 
)
ON 
Packet.Sequence1</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 Name="CurrentLevelNotInList"
>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="CurrentLevelNotInList"
>
<ReqRef
 Id="5.10.3.14.1"
>
</ReqRef><ReqRef
 Id="5.10.3.14.2"
>
</ReqRef><ReqRef
 Id="5.10.3.14.3"
>
</ReqRef><Comment>If this precondition is met, dont carry out a level transition #morido, 13/10/15</Comment>
<PreConditions>
<PreCondition>NOT (THERE_IS_IN LevelTransitionOrder.LevelandLength | X.TRLevel.Value == Kernel.Level.Value)</PreCondition></PreConditions>
<Actions>
<Action>ProcessLTOGeneric()</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</Procedure><Procedure
 NeedsRequirement="FALSE"
 Name="ProcessLTOSpecific"
>
<ReqRef
 Id="5.10.3"
>
</ReqRef><Comment>Wrapper to call the individual procedures in order to execute specific level transitions #morido, 13/10/15</Comment>
<Rules>
<Rule
 Priority="Processing"
 NeedsRequirement="FALSE"
 Name="L0ToL1"
>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 NeedsRequirement="FALSE"
 Name="L0ToL1"
>
<ReqRef
 Id="5.10.3.4"
>
</ReqRef><Comment>The handling of the other preconditions as required by 5.10.3.4.1 is done by Kernel.ModeTransitions.Condition39, #morido, 13/10/17</Comment>
<PreConditions>
<PreCondition>Kernel.Level.Value == Default.Level.L0</PreCondition><PreCondition>LTOtoProcess.TRLevel.Value == Default.Level.L1</PreCondition></PreConditions>
<Actions>
<Action>Kernel.Level.Value &lt;- Default.Level.L1</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</Procedure><Procedure
 NeedsRequirement="FALSE"
 Name="ProcessLTOGeneric"
>
<ReqRef
 Id="5.10.2"
>
</ReqRef><Comment>This does all general stuff required for a level transition independent from the source and target level It is therefore a preliminary step for ProcessLTOSpecific. #morido, 13/10/15</Comment>
<Rules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="ReduceLTOtoOne"
>
<ReqRef
 Id="5.10.2.5"
>
</ReqRef><ReqRef
 Id="5.10.2.4"
>
<Comment></Comment>
</ReqRef><Comment>We now prepare the level-transition. I.e. all relevant data has been received and we will now filter out the one single transition which shall be performed</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Name="ReduceLTOtoOne"
>
<Comment></Comment>
<PreConditions>
</PreConditions>
<Actions>
<Action>LTOtoProcess &lt;- FIRST_IN LevelTransitionOrder.LevelandLength | AvailableForUse( Level=&gt; X.TRLevel )</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="FallbackIfNothingAvailable"
>
<ReqRef
 Id="5.10.2.7"
>
<Comment></Comment>
</ReqRef><Comment>This is only executed if the previous step (&quot;ReduceLTOtoOne&quot;) failed (i,e, nothing is available)</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Name="FallbackIfNothingAvailable"
>
<Comment></Comment>
<PreConditions>
<PreCondition>LTOtoProcess.AcknLength == Default.BaseTypes.Length.NA</PreCondition><PreCondition>LTOtoProcess.TRLevel.Value == Default.Level.Unknown</PreCondition><PreCondition>LTOtoProcess.TRLevel.NTC == Default.NID_NTC.NOT_APPLICABLE</PreCondition></PreConditions>
<Actions>
<Action>LTOtoProcess &lt;- LAST_IN (LevelTransitionOrder.LevelandLength)</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="InformDriver"
>
<ReqRef
 Id="5.10.2.7.1"
>
</ReqRef><ReqRef
 Id="5.10.2.6"
>
</ReqRef><ReqRef
 Id="5.10.1.3"
>
</ReqRef><Comment></Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Name="InformDriver"
>
<PreConditions>
</PreConditions>
<Actions>
<Action>DMI.MasterDMI().DisplayLevelTransitionAnnouncement(LTOtoProcess.TRLevel.Value)</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 NeedsRequirement="FALSE"
 Name="ExecuteActualTransition"
>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 NeedsRequirement="FALSE"
 Name="ExecuteActualTransition"
>
<PreConditions>
</PreConditions>
<Actions>
<Action>ProcessLTOSpecific()</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</Procedure></Procedures>
<Variables>
<Variable
 Type="LevelTransitionOrder"
 DefaultValue="EMPTY"
 VariableMode="Internal"
 Implemented="TRUE"
 Name="LevelTransitionOrder"
>
<ReqRef
 Id="5.10.1.1"
>
<Comment></Comment>
</ReqRef><ReqRef
 Id="Entry 7.4.1.1.14"
>
</ReqRef><ReqRef
 Id="Entry 7.4.1.1.18"
>
</ReqRef><Comment>Level transition order  received from the track side</Comment>
</Variable><Variable
 Type="Kernel.LevelTransition.LevelTransition"
 DefaultValue=""
 VariableMode="Internal"
 Implemented="TRUE"
 Name="LTOtoProcess"
>
<ReqRef
 Id="5.10.2.5"
>
</ReqRef><Comment>The (target-)level (and -distance) that the train should perform a transition to (i.e. the output of the computations)</Comment>
</Variable></Variables>
<Rules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="ExecuteLevelTransitionOrder"
>
<ReqRef
 Id="5.10.1.5"
>
<Comment></Comment>
</ReqRef><ReqRef
 Id="5.10.1.4"
>
</ReqRef><ReqRef
 Id="Entry 7.4.1.1.14"
>
</ReqRef><ReqRef
 Id="Entry 7.4.1.1.18"
>
</ReqRef><Comment></Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="ExecuteLevelTransitionOrder"
>
<Comment>NTC-part not functional for now (Kernel.NationalSystemId). Requirement for this is missing. Is it needed? #morido, 13/10/14</Comment>
<PreConditions>
<PreCondition>LevelTransition.LevelTransitionOrder.Distance == BTM.DistanceFromLRBG() </PreCondition><PreCondition>Kernel.LevelTransition.LevelTransitionOrder.IsLTO== True </PreCondition><PreCondition>Kernel.LevelTransition.LevelTransitionOrder.IsLTO== True</PreCondition></PreConditions>
<Actions>
<Action>Kernel.Level.Value &lt;- LevelTransition.TRLevel.Value</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</NameSpace>
