<NameSpace
 X="260"
 Y="60"
 Width="100"
 Height="50"
 Name="Display"
 Guid="80739a0a-9d9a-4836-960d-a70674342006"
>
<NameSpaces>
</NameSpaces>
<Functions>
<Function
 Type="Boolean"
 Cacheable="TRUE"
 Default=""
 X="120"
 Y="10"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="DisplayReleaseSpeed"
 Guid="0e03db57-f072-4c06-9f8d-37b08022f0ce"
>
<ReqRef
 Id="da81dc9e-7c01-462c-ae9b-108704d780bc"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="26165586-b87b-4fc6-aef9-ec247e260bce"
>
</ReqRef><ReqRef
 Id="ee7b5ecc-20f6-480c-aa0a-7836d5308d32"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="c84326fe-ff7d-48f4-a605-f443b22b4615"
>
</ReqRef><Comment>Determines whether the DMI should display a release speed.</Comment>
<Cases>
<Case
 Name="Monitoring target speed"
 Guid="c220ae83-9fd0-4062-b2dd-0b4508cc0570"
>
<PreConditions>
<PreCondition
 Guid="eae54f73-e54c-496a-b739-536763fd2530"
>Kernel.SpeedAndDistanceMonitoring.GetMonitoringType() == Kernel.SpeedAndDistanceMonitoring.MonitoringType.PIM
  OR  
Kernel.SpeedAndDistanceMonitoring.GetMonitoringType() == Kernel.SpeedAndDistanceMonitoring.MonitoringType.TSM</PreCondition></PreConditions>
<Expression>Kernel.MA.IsEOA(Kernel.SpeedAndDistanceMonitoring.TargetSpeedMonitoring.MRDT())
  OR  
Kernel.MA.IsSvL(Kernel.SpeedAndDistanceMonitoring.TargetSpeedMonitoring.MRDT())</Expression>
</Case><Case
 Name="Monitoring release speed"
 Guid="08d09e11-9195-4651-b68a-5e2963886bc4"
>
<Expression>Kernel.SpeedAndDistanceMonitoring.GetMonitoringType() == Kernel.SpeedAndDistanceMonitoring.MonitoringType.RSM</Expression>
</Case></Cases>
</Function><Function
 Type="BaseTypes.Speed"
 Cacheable="TRUE"
 Default=""
 X="230"
 Y="70"
 Width="100"
 Height="50"
 Pinned="TRUE"
 Implemented="TRUE"
 Name="PermittedSpeed"
 Guid="98c15b8c-4a8b-4fc0-8d3c-6e940e541fe2"
>
<ReqRef
 Id="09e9b21f-a204-44c7-9829-f4221f5ff7a6"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="b8cf0ba7-f32e-4c2a-b835-6ba6cb0f32e1"
>
</ReqRef><ReqRef
 Id="74e64307-2966-461e-a976-9a0194ca8514"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="f77e2edc-d3c3-4e18-9ba7-1dd5896b3583"
>
</ReqRef><ReqRef
 Id="66b79932-5e84-4126-abe6-3094347749c2"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="dce28774-413f-472c-ac6f-6a203e4c010c"
>
</ReqRef><ReqRef
 Id="7da2c959-4215-45b4-b239-3b315d76277c"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="c841058e-4afa-43ae-be78-9321f14c4139"
>
</ReqRef><Comment>Provides the current permitted speed of the train, accounting for the speed and distance monitoring.</Comment>
<Cases>
<Case
 Name="CeilingSpeedMonitoring_P"
 Guid="9bcbf022-4599-40dc-ad8a-f5e831f6af26"
>
<Comment>The permitted speed P (in ceiling speed monnitoring) is equal to V_MRSP or V_LOA.</Comment>
<PreConditions>
<PreCondition
 Guid="5394d167-a030-4b1d-a096-b176e1075237"
>Kernel.SpeedAndDistanceMonitoring.Monitoring in MonitoringTypeSM.Ceiling</PreCondition></PreConditions>
<Expression>Kernel.MRSP.V_MRSP()</Expression>
</Case><Case
 Name="Other monitoring types"
 Guid="c121bdd5-4b33-48ef-b069-9a042e43983d"
>
<PreConditions>
<PreCondition
 Guid="5ba6a2ec-fce4-46ab-8e17-256f0a63ae84"
>Kernel.SpeedAndDistanceMonitoring.Monitoring in [MonitoringTypeSM.Target, MonitoringTypeSM.Release]</PreCondition></PreConditions>
<Expression>Kernel.SpeedAndDistanceMonitoring.TargetSpeedMonitoring.V_P_DMI()</Expression>
</Case></Cases>
</Function><Function
 Type="BaseTypes.Speed"
 Cacheable="TRUE"
 Default=""
 X="340"
 Y="10"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="SBISpeed"
 Guid="beeb4057-0fc3-4386-a02a-0a1658883998"
>
<ReqRef
 Id="d5f24a7e-2926-4921-9498-c6e5c16964e4"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="f256a09c-7d89-4cd5-b2f6-9e1c790067ff"
>
</ReqRef><ReqRef
 Id="eb90e9d9-f130-4725-b447-bd6e474f0c8b"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="db43c11d-14da-4358-a984-768d070e34b4"
>
</ReqRef><Comment>Returns the value of the closest SBI curve at the given distance</Comment>
<Cases>
<Case
 Name="In ceiling speed supervision"
 Guid="3206369b-6c11-4a65-8d73-d2fbb08375b3"
>
<PreConditions>
<PreCondition
 Guid="9317ac62-ab65-4993-8355-a3fa4ac12f32"
>Kernel.SpeedAndDistanceMonitoring.Monitoring in MonitoringTypeSM.Ceiling</PreCondition></PreConditions>
<Expression>Kernel.MRSP.V_MRSP() + Kernel.SpeedAndDistanceMonitoring.CeilingSpeedMonitoring.dV_sbi(Kernel.MRSP.V_MRSP())</Expression>
</Case><Case
 Name="In target speed supervision"
 Guid="eb3345ab-0d5e-4790-8fb3-c13af69a753d"
>
<PreConditions>
<PreCondition
 Guid="1eda699e-a4d2-4106-8a9a-daf5761de88c"
>Kernel.SpeedAndDistanceMonitoring.Monitoring in MonitoringTypeSM.Target</PreCondition></PreConditions>
<Expression>Kernel.SpeedAndDistanceMonitoring.TargetSpeedMonitoring.V_SBI_DMI()</Expression>
</Case></Cases>
</Function><Function
 Type="Boolean"
 Default=""
 X="10"
 Y="10"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="DisplayIndicationLocationAtMRSPSpeed"
 Guid="1d5d650d-4dbe-4eb6-98b0-8f065c0641ce"
>
<ReqRef
 Id="5e511b79-1787-413b-ae27-0d7d6246b010"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="da0dbae1-4e49-47e3-ace0-053eb338998f"
>
</ReqRef><ReqRef
 Id="b10067eb-6ad7-4c8c-9aab-ef1740ef0e13"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="271b7a86-f4c8-48f2-94a4-3bb89f087ed6"
>
</ReqRef><Comment>Indicates whether the DMI should display the indication location at MRSP speed.</Comment>
<Cases>
<Case
 Name="In CSM or PIM"
 Guid="9ee1faaa-c254-4694-813e-d2f3b395ff81"
>
<Expression>Kernel.SpeedAndDistanceMonitoring.GetMonitoringType() == Kernel.SpeedAndDistanceMonitoring.MonitoringType.CSM
  OR  
Kernel.SpeedAndDistanceMonitoring.GetMonitoringType() == Kernel.SpeedAndDistanceMonitoring.MonitoringType.PIM</Expression>
</Case></Cases>
</Function><Function
 Type="Boolean"
 Default=""
 X="10"
 Y="70"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="DisplayTargetSpeed"
 Guid="9f89dd50-834d-4421-b50c-c7e12fe87e96"
>
<ReqRef
 Id="96719821-5827-4475-bf1c-8200e9c230e4"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="44cb4cfa-f720-422e-afb5-9a0f9fa85c2d"
>
</ReqRef><Comment>Indicates whether the DMI should display the target speed.</Comment>
<Cases>
<Case
 Name="In TSM or PIM"
 Guid="1e9502cd-e9d2-4538-94b0-a6b1ec5dbc9c"
>
<Expression>Kernel.SpeedAndDistanceMonitoring.GetMonitoringType() == Kernel.SpeedAndDistanceMonitoring.MonitoringType.PIM
  OR  
Kernel.SpeedAndDistanceMonitoring.GetMonitoringType() == Kernel.SpeedAndDistanceMonitoring.MonitoringType.TSM</Expression>
</Case></Cases>
</Function><Function
 Type="Boolean"
 Default=""
 X="120"
 Y="70"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="DisplayTargetDistance"
 Guid="275df331-07bf-45cd-8400-eee36e59fe70"
>
<ReqRef
 Id="96719821-5827-4475-bf1c-8200e9c230e4"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="4db5a85b-0481-4cce-9a5f-319a4f5c45a2"
>
</ReqRef><ReqRef
 Id="220617b2-d0d2-4c8e-a475-e9d9a8761441"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="a887fb02-1b48-4cd5-8834-4417c0d7aae7"
>
</ReqRef><Comment>Indicates whether the DMI should display the distance to the MRDT.</Comment>
<Cases>
<Case
 Name="In PIM, TSM or RSM"
 Guid="2d23ed32-c791-4f2c-a838-05eef58b8112"
>
<Expression>Kernel.SpeedAndDistanceMonitoring.GetMonitoringType() == Kernel.SpeedAndDistanceMonitoring.MonitoringType.PIM
  OR  
Kernel.SpeedAndDistanceMonitoring.GetMonitoringType() == Kernel.SpeedAndDistanceMonitoring.MonitoringType.TSM
  OR  
Kernel.SpeedAndDistanceMonitoring.GetMonitoringType() == Kernel.SpeedAndDistanceMonitoring.MonitoringType.RSM</Expression>
</Case></Cases>
</Function><Function
 Type="BaseTypes.Distance"
 Cacheable="TRUE"
 Default=""
 X="450"
 Y="10"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="IndicationLocation"
 Guid="9c99dc6f-90d1-40a8-8f36-618768e23a53"
>
<ReqRef
 Id="615ccbef-ab0a-4f6f-9624-9ace6361ea83"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="c1d660be-4df4-4aa1-af88-684d71829ff5"
>
</ReqRef><ReqRef
 Id="06815a39-d3d2-4de8-9e48-9737e56724ca"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="6a421bb3-7a8e-4ac7-a496-87dd6377ae85"
>
</ReqRef><Comment>Provides the indication location at MRSP speed for the DMI</Comment>
<Cases>
<Case
 Name="No indication location"
 Guid="c80160ab-e13f-4fb0-b1a3-f9c908f94cba"
>
<PreConditions>
<PreCondition
 Guid="72ab8956-2490-4512-b3ea-38c62860ff3b"
>NOT
(
Kernel.ActiveFunctions.SuperviseTrainSpeed_MRSP_DistInSRMode()
  OR  
Kernel.ActiveFunctions.SuperviseTrainSpeed_All_Information()
)</PreCondition></PreConditions>
<Expression>BaseTypes.Distance.Unknown</Expression>
</Case><Case
 Name="In RSM"
 Guid="eb912e76-b2e4-4dc5-9bce-22fb930ffb1f"
>
<PreConditions>
<PreCondition
 Guid="e6e2dfb6-e10b-4b64-8387-340273acfb3a"
>Monitoring in [MonitoringTypeSM.Release]</PreCondition></PreConditions>
<Expression>BaseTypes.Distance.Unknown</Expression>
</Case><Case
 Name="Target is EOA and SvL, d_I is behind the train"
 Guid="fe28ed82-2e5d-41b3-870d-8ff61d651d2f"
>
<PreConditions>
<PreCondition
 Guid="5e4034ab-adf6-4452-96bf-d3015792e2f0"
>(
  Kernel.MA.IsEOA(Kernel.SpeedAndDistanceMonitoring.TargetSpeedMonitoring.MRDT())
    AND  
  Kernel.MA.IsSvL(Kernel.SpeedAndDistanceMonitoring.TargetSpeedMonitoring.MRDT())
)

  AND  

Kernel.SpeedAndDistanceMonitoring.PreIndicationLocation.IndicationLimitAtSpeed_EOA(Kernel.SpeedAndDistanceMonitoring.PreIndicationLocation.IndicationSegment(Kernel.SpeedAndDistanceMonitoring.TargetSpeedMonitoring.MRDT()).Speed ) == BaseTypes.Distance.Unknown
  AND  
Kernel.SpeedAndDistanceMonitoring.PreIndicationLocation.IndicationLimitAtSpeed(
    aTarget =&gt; Kernel.SpeedAndDistanceMonitoring.TargetSpeedMonitoring.MRDT(),
    aSpeed =&gt; Kernel.SpeedAndDistanceMonitoring.PreIndicationLocation.IndicationSegment(Kernel.SpeedAndDistanceMonitoring.TargetSpeedMonitoring.MRDT()).Speed)
 == BaseTypes.Distance.Unknown</PreCondition></PreConditions>
<Expression>BaseTypes.Distance.Unknown</Expression>
</Case><Case
 Name="Target is EOA and SvL"
 Guid="780e5118-4f03-4b5f-96df-326b84b4c8b9"
>
<PreConditions>
<PreCondition
 Guid="a80219d7-bc70-4e31-8cd3-c78974f9a44f"
>Kernel.MA.IsEOA(Kernel.SpeedAndDistanceMonitoring.TargetSpeedMonitoring.MRDT())
  AND  
Kernel.MA.IsSvL(Kernel.SpeedAndDistanceMonitoring.TargetSpeedMonitoring.MRDT())</PreCondition></PreConditions>
<Expression>BaseTypes.MinDistance(
    X1 =&gt; Kernel.SpeedAndDistanceMonitoring.PreIndicationLocation.IndicationLimitAtSpeed_EOA(Kernel.SpeedAndDistanceMonitoring.PreIndicationLocation.IndicationSegment(Kernel.SpeedAndDistanceMonitoring.TargetSpeedMonitoring.MRDT()).Speed),
    X2 =&gt; Kernel.SpeedAndDistanceMonitoring.PreIndicationLocation.IndicationLimitAtSpeed(
    aTarget =&gt; Kernel.SpeedAndDistanceMonitoring.TargetSpeedMonitoring.MRDT(),
    aSpeed =&gt; Kernel.SpeedAndDistanceMonitoring.PreIndicationLocation.IndicationSegment(Kernel.SpeedAndDistanceMonitoring.TargetSpeedMonitoring.MRDT()).Speed)
) - Kernel.TrainPosition.FrontEndPosition(DistanceIntervalEnum.Nom)</Expression>
</Case><Case
 Name="Target is EOA and d_I is behind the train"
 Guid="f4f0cfde-b07c-40dd-b482-58aee844d5a0"
>
<PreConditions>
<PreCondition
 Guid="ef820a57-90ad-4617-a69a-6c1a406ec324"
>Kernel.MA.IsEOA(Kernel.SpeedAndDistanceMonitoring.TargetSpeedMonitoring.MRDT())

  AND  

Kernel.SpeedAndDistanceMonitoring.PreIndicationLocation.IndicationLimitAtSpeed_EOA(Kernel.SpeedAndDistanceMonitoring.PreIndicationLocation.IndicationSegment(Kernel.SpeedAndDistanceMonitoring.TargetSpeedMonitoring.MRDT()).Speed ) == BaseTypes.Distance.Unknown</PreCondition></PreConditions>
<Expression>BaseTypes.Distance.Unknown</Expression>
</Case><Case
 Name="The target is the EOA"
 Guid="2d7b4d78-e0c2-4eca-a426-4c460d8b1599"
>
<PreConditions>
<PreCondition
 Guid="2aac3ae2-f418-460d-aaeb-f270e8019b10"
>Kernel.MA.IsEOA(Kernel.SpeedAndDistanceMonitoring.TargetSpeedMonitoring.MRDT())</PreCondition></PreConditions>
<Expression>Kernel.SpeedAndDistanceMonitoring.PreIndicationLocation.IndicationLimitAtSpeed_EOA(Kernel.SpeedAndDistanceMonitoring.PreIndicationLocation.IndicationSegment(Kernel.SpeedAndDistanceMonitoring.TargetSpeedMonitoring.MRDT()).Speed) - Kernel.TrainPosition.FrontEndPosition(DistanceIntervalEnum.Nom)</Expression>
</Case><Case
 Name="Another target, d_I behind the train"
 Guid="913a30c9-7476-4590-a80b-3970deaa3894"
>
<PreConditions>
<PreCondition
 Guid="fa0c9d7c-78ac-4201-9248-1cf43a6f34ae"
>Kernel.SpeedAndDistanceMonitoring.PreIndicationLocation.IndicationLimitAtSpeed(
    aTarget =&gt; Kernel.SpeedAndDistanceMonitoring.TargetSpeedMonitoring.MRDT(),
    aSpeed =&gt; Kernel.SpeedAndDistanceMonitoring.PreIndicationLocation.IndicationSegment(Kernel.SpeedAndDistanceMonitoring.TargetSpeedMonitoring.MRDT()).Speed)
 == BaseTypes.Distance.Unknown</PreCondition></PreConditions>
<Expression>BaseTypes.Distance.Unknown</Expression>
</Case><Case
 Name="It is another target"
 Guid="8bdffb03-588c-4283-94e4-00ae6887a869"
>
<Expression>Kernel.SpeedAndDistanceMonitoring.PreIndicationLocation.IndicationLimitAtSpeed(
    aTarget =&gt; Kernel.SpeedAndDistanceMonitoring.TargetSpeedMonitoring.MRDT(),
    aSpeed =&gt; Kernel.SpeedAndDistanceMonitoring.PreIndicationLocation.IndicationSegment(Kernel.SpeedAndDistanceMonitoring.TargetSpeedMonitoring.MRDT()).Speed) - Kernel.TrainPosition.FrontEndPosition(DistanceIntervalEnum.Nom)</Expression>
</Case></Cases>
</Function><Function
 Type="TargetSpeedMonitoring.Target"
 Default=""
 X="340"
 Y="70"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="FirstTargetAtZeroSpeed"
 Guid="00e54b91-7312-4f95-8481-7e4186d7193c"
>
<ReqRef
 Id="615ccbef-ab0a-4f6f-9624-9ace6361ea83"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="2afec32f-1777-4ba0-adf3-e9b09f86a23e"
>
</ReqRef><ReqRef
 Id="2cd466ba-aedb-4f3e-8661-ae10ee1737c9"
 SpecId="1725280b-f696-4860-94cc-d85f62c35214"
 Guid="82f5dc19-3cc2-4de1-855f-e06348e8b20b"
>
</ReqRef><Comment>Checks the list of stored targets for the closest target with a target speed of zero.
this is used ot limit the planning information displayed to the driver on the DMI.</Comment>
<Cases>
<Case
 Name="Value"
 Guid="9bbb9be3-b612-4e3a-aeb1-5b4e2db35f77"
>
<Expression>REDUCE Kernel.SpeedAndDistanceMonitoring.TargetsList() | X.Speed == 0.0 USING X 
IN Kernel.MA.ClosestTarget(
    Target1 =&gt; X,
    Target2 =&gt; RESULT
)
INITIAL_VALUE Kernel.MA.ClosestTarget(
    Target1 =&gt; MA.EOA(),
    Target2 =&gt; Kernel.MA.SvL()
)</Expression>
</Case></Cases>
</Function></Functions>
</NameSpace>
