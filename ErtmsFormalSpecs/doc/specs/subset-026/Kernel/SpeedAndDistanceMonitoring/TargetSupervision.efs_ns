<NameSpace
 Name="TargetSupervision"
>
<NameSpaces>
<NameSpaceRef
 Name="LevelCrossing"
>
</NameSpaceRef><NameSpaceRef
 Name="GUI"
>
</NameSpaceRef></NameSpaces>
<Structures>
<Structure
 Implemented="TRUE"
 Name="Target"
>
<ReqRef
 Id="7bd72bb5-368f-4b82-82c7-aa311cc5f660"
>
</ReqRef><StructureElement
 TypeName="Default.BaseTypes.Distance"
 Default="0.0"
 Mode="Internal"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Location"
>
</StructureElement><StructureElement
 TypeName="Default.BaseTypes.Speed"
 Default="0.0"
 Mode="Internal"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Speed"
>
</StructureElement><StructureElement
 TypeName="Default.BaseTypes.Length"
 Default="0.0"
 Mode="Internal"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Length"
>
</StructureElement></Structure></Structures>
<Collections>
<Collection
 TypeName="Target"
 MaxSize="100"
 Default="[]"
 Implemented="TRUE"
 Name="Targets"
>
<ReqRef
 Id="c7a43456-5326-4c4d-b89f-23b71a0240bf"
>
</ReqRef></Collection></Collections>
<Functions>
<Function
 Type="Default.BaseTypes.Distance"
 Implemented="TRUE"
 Name="d_SBI2"
>
<ReqRef
 Id="88d50002-b123-41cd-8621-3ac7ae0408ef"
>
</ReqRef><ReqRef
 Id="1251578c-995d-485e-8833-f418b93e1471"
>
</ReqRef><ReqRef
 Id="c8774e4f-d138-4cf7-9fda-5f6a29c50cf9"
>
</ReqRef><Comment>Provides the distance d_SBI2.</Comment>
<Parameters>
<Parameter
 Type="Default.BaseTypes.Speed"
 Name="Vest"
>
</Parameter><Parameter
 Type="Target"
 Name="aTarget"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="Value"
>
<Expression>TargetSupervision.EBIvalue ( Vest =&gt; Vest, aTarget =&gt; aTarget )  - BaseTypes.SpeedToMS ( Vest ) * T_bs2</Expression>
</Case></Cases>
</Function><Function
 Type="Default.BaseTypes.Acceleration"
 Implemented="TRUE"
 Name="Aest2"
>
<ReqRef
 Id="26a7d347-fac4-479e-a5fd-a9644eed93c4"
>
</ReqRef><Comment>Provides the estimated acceleration to be used during T_berem.</Comment>
<Cases>
<Case
 Name="Value"
>
<Expression>BaseTypes.MinAcceleration ( X1 =&gt; 0.4, X2 =&gt; BaseTypes.MaxAcceleration ( X1 =&gt; 0.0, X2 =&gt; Odometry.EstimatedAcceleration ) )</Expression>
</Case></Cases>
</Function><Function
 Type="Default.BaseTypes.Acceleration"
 Implemented="TRUE"
 Name="Aest1"
>
<ReqRef
 Id="80f69d28-8302-44ad-9dfd-d98c75cda9d8"
>
</ReqRef><Comment>Provides the estimated acceleration to be used during T_traction.</Comment>
<Cases>
<Case
 Name="Value"
>
<Expression>Odometry.EstimatedAcceleration</Expression>
</Case></Cases>
</Function><Function
 Type="Default.BaseTypes.Time"
 Implemented="TRUE"
 Name="T_berem"
>
<ReqRef
 Id="65b04918-43f6-4fba-8062-128c5f2766d5"
>
</ReqRef><ReqRef
 Id="9ebfc8da-a239-4e8c-a8a6-d80253fe7838"
>
</ReqRef><Comment></Comment>
<Cases>
<Case
 Name="Value"
>
<Expression>BaseTypes.MaxTime ( X1 =&gt; TrainData.BrakingParameters.T_be () - T_traction (), X2 =&gt; 0.0 )</Expression>
</Case></Cases>
</Function><Function
 Type="Default.BaseTypes.Time"
 Implemented="TRUE"
 Name="T_traction"
>
<ReqRef
 Id="096ce475-1a17-4f39-a9ff-e1838d27439c"
>
</ReqRef><ReqRef
 Id="51a4071c-6949-4a0d-8483-6299d2128b0e"
>
</ReqRef><ReqRef
 Id="162a1af4-0262-4370-9baf-76c6abf7cc8d"
>
</ReqRef><ReqRef
 Id="10fe2e3f-8542-4568-b3a4-e79100a4daa6"
>
</ReqRef><ReqRef
 Id="d7b72e8e-080e-4419-87c9-e54ecdfed0ef"
>
</ReqRef><ReqRef
 Id="9e5b33ae-9b18-4cc2-a313-bbacf0e3cf57"
>
</ReqRef><Comment></Comment>
<Cases>
<Case
 Name="Traction cut-off is implemented"
>
<PreConditions>
<PreCondition>Kernel.TrainData.TrainData.Value.TractionCutOffInterfaceIsImplemented</PreCondition></PreConditions>
<Expression>BaseTypes.MaxTime ( X1 =&gt; ( TrainData.BrakingParameters.T_traction_cut_off () - ( T_warning + TargetSupervision.T_bs2 ) ), X2 =&gt; 0.0 )</Expression>
</Case><Case
 Name="Traction cut-off is not implemented"
>
<Expression>TrainData.BrakingParameters.T_traction_cut_off ()</Expression>
</Case></Cases>
</Function><Function
 Type="Default.BaseTypes.Speed"
 Implemented="TRUE"
 Name="Vdelta0"
>
<ReqRef
 Id="327d187c-a17c-486f-b724-d1f714f552fe"
>
</ReqRef><ReqRef
 Id="45c6ab5d-cd00-4092-b7fb-002e30ca1337"
>
</ReqRef><ReqRef
 Id="28e8fd74-8da8-4c8d-9d0b-2b3de6dea1ac"
>
</ReqRef><Comment></Comment>
<Cases>
<Case
 Name="Compensation of speed inaccuracy is inhibited by NV"
>
<PreConditions>
<PreCondition>NationalValues.ApplicableNationalValues.Value.PermToInhibitTheCompOfTheSpeedMeasurementInaccuracy == Messages.Q_NVINHSMICPERM.Yes</PreCondition></PreConditions>
<Expression>0.0</Expression>
</Case><Case
 Name="Compensation of speed inaccuracy is not inhibited by NV"
>
<Expression>Odometry.Accuracy.V_ura</Expression>
</Case></Cases>
</Function><Function
 Type="Default.BaseTypes.Speed"
 Implemented="TRUE"
 Name="Vdelta1"
>
<ReqRef
 Id="327d187c-a17c-486f-b724-d1f714f552fe"
>
<Comment></Comment>
</ReqRef><ReqRef
 Id="80f69d28-8302-44ad-9dfd-d98c75cda9d8"
>
</ReqRef><Comment>Provides the speed during T_traction.</Comment>
<Cases>
<Case
 Name="Value"
>
<Expression>Aest1() * T_traction()</Expression>
</Case></Cases>
</Function><Function
 Type="Default.BaseTypes.Speed"
 Implemented="TRUE"
 Name="Vdelta2"
>
<ReqRef
 Id="26a7d347-fac4-479e-a5fd-a9644eed93c4"
>
</ReqRef><ReqRef
 Id="327d187c-a17c-486f-b724-d1f714f552fe"
>
</ReqRef><Comment>Provides the speed during T_berem.</Comment>
<Cases>
<Case
 Name="Value"
>
<Expression>Aest2() * T_berem()</Expression>
</Case></Cases>
</Function><Function
 Type="Default.BaseTypes.Speed"
 Implemented="TRUE"
 Name="Vbec"
>
<ReqRef
 Id="327d187c-a17c-486f-b724-d1f714f552fe"
>
</ReqRef><Comment>Provides the compensated speed during the time elapsed between the Emergency brake intervention and the full application of the braking effort.</Comment>
<Parameters>
<Parameter
 Type="Default.BaseTypes.Speed"
 Name="Vest"
>
</Parameter><Parameter
 Type="Default.BaseTypes.Speed"
 Name="Vtarget"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="Value"
>
<Expression>BaseTypes.MaxSpeed ( X1 =&gt; Vest + Vdelta0() + Vdelta1(), X2 =&gt; Vtarget ) + Vdelta2()</Expression>
</Case></Cases>
</Function><Function
 Type="Default.BaseTypes.Distance"
 Implemented="TRUE"
 Name="Dbec"
>
<ReqRef
 Id="327d187c-a17c-486f-b724-d1f714f552fe"
>
</ReqRef><ReqRef
 Id="afcddd77-8cf6-4e60-8d18-2663f4121206"
>
</ReqRef><Comment>Provides the distance travelled during the time elapsed between the Emergency brake intervention and the full application of the braking effort.</Comment>
<Parameters>
<Parameter
 Type="Default.BaseTypes.Speed"
 Name="Vest"
>
</Parameter><Parameter
 Type="Default.BaseTypes.Speed"
 Name="Vtarget"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="Value"
>
<Expression>BaseTypes.SpeedToMS ( BaseTypes.MaxSpeed ( X1 =&gt; Vest + Vdelta0() + Vdelta1() / 2.0, X2 =&gt; Vtarget ) ) * T_traction() +
BaseTypes.SpeedToMS ( BaseTypes.MaxSpeed ( X1 =&gt; Vest + Vdelta0() + Vdelta1(), X2 =&gt; Vtarget ) + Vdelta2() / 2.0 )  * T_berem()</Expression>
</Case></Cases>
</Function><Function
 Type="Default.BaseTypes.Distance"
 Implemented="TRUE"
 Name="d_EBI"
>
<ReqRef
 Id="4edb2d35-ece8-4f2a-b28e-83eec4565ce4"
>
</ReqRef><ReqRef
 Id="1251578c-995d-485e-8833-f418b93e1471"
>
</ReqRef><ReqRef
 Id="c8774e4f-d138-4cf7-9fda-5f6a29c50cf9"
>
</ReqRef><ReqRef
 Id="a387bd06-4306-436c-ae73-a3faa509f059"
>
</ReqRef><Comment>Provides the location of the EBI supervision limit.</Comment>
<Parameters>
<Parameter
 Type="Default.BaseTypes.Speed"
 Name="Vest"
>
</Parameter><Parameter
 Type="Target"
 Name="aTarget"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="Release speed"
>
<PreConditions>
<PreCondition>ReleaseSpeedSupervision.ReleaseSpeedSupervisionApplicable ( aTarget )</PreCondition><PreCondition>EBIvalue ( Vest =&gt; Vest, aTarget =&gt; aTarget ) &gt;= ReleaseSpeedSupervision.StartRSM ( ReleaseSpeedSupervision.ReleaseSpeed )</PreCondition></PreConditions>
<Expression>ReleaseSpeedSupervision.StartRSM ( ReleaseSpeedSupervision.ReleaseSpeed )</Expression>
</Case><Case
 Name="Value"
>
<Expression>EBIvalue ( Vest =&gt; Vest, aTarget =&gt; aTarget )</Expression>
</Case></Cases>
</Function><Function
 Type="Boolean"
 Implemented="TRUE"
 Name="ServiceBrakeFeedbackAvailable"
>
<ReqRef
 Id="d28bcfb0-9f8e-4a7d-9176-05886075d090"
>
</ReqRef><ReqRef
 Id="a651727b-67a1-4e0c-99d6-89af31425c35"
>
</ReqRef><Comment></Comment>
<Cases>
<Case
 Name="Value"
>
<Expression>TrainData.TrainData.Value.SBFeedbackIsImplemented AND NationalValues.UseOfSBFeedbackIsPermitted()</Expression>
</Case></Cases>
</Function><Function
 Type="Default.BaseTypes.Speed"
 Implemented="TRUE"
 Name="Vsbi2"
>
<ReqRef
 Id="5222ef04-36ae-4dc3-a10f-a31139e5b7ac"
>
<Comment></Comment>
</ReqRef><Comment>Provides the SBI2 speed for the estimated train front end, for display purpose only.</Comment>
<Parameters>
<Parameter
 Type="Default.BaseTypes.Distance"
 Name="Dmaxsafefrontend"
>
</Parameter><Parameter
 Type="Default.BaseTypes.Speed"
 Name="Vtarget"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="Before EBD(Vtarget)"
>
<PreConditions>
<PreCondition>Dmaxsafefrontend + Odometry.EstimatedSpeed * T_bs2 + Dbec ( Vest =&gt; Odometry.EstimatedSpeed, Vtarget =&gt; Vtarget ) &lt; DistanceForSpeed ( Function =&gt; EBD, Speed =&gt; Vtarget )</PreCondition></PreConditions>
<Expression>EBD ( Dmaxsafefrontend + Odometry.EstimatedSpeed * T_bs2 + Dbec ( Vest =&gt; Odometry.EstimatedSpeed, Vtarget =&gt; Vtarget) ) - ( Vbec ( Vest =&gt; Odometry.EstimatedSpeed, Vtarget =&gt; Vtarget ) - Odometry.EstimatedSpeed )</Expression>
</Case><Case
 Name="After EBD(Vtarget)"
>
<Expression>Vtarget</Expression>
</Case></Cases>
</Function><Function
 Type="Default.BaseTypes.Speed"
 Implemented="TRUE"
 Name="Vsbi1"
>
<ReqRef
 Id="678f7208-b36d-410b-8e62-028a110b3c70"
>
</ReqRef><Comment>Provides the SBI1 speed for the estimated train front end, for display purpose only.</Comment>
<Parameters>
<Parameter
 Type="Default.BaseTypes.Distance"
 Name="Destfront"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="Before EOA"
>
<PreConditions>
<PreCondition>Destfront + Odometry.EstimatedSpeed * T_bs1 &lt; MA.EndOfMovementAuthority().Location</PreCondition></PreConditions>
<Expression>SBD ( Destfront + Odometry.EstimatedSpeed * T_bs1 )</Expression>
</Case><Case
 Name="After EOA"
>
<Expression>0.0</Expression>
</Case></Cases>
</Function><Function
 Type="Default.BaseTypes.Time"
 Implemented="TRUE"
 Name="T_indication"
>
<ReqRef
 Id="4ee7ede5-dbce-484e-b14b-72b516c33ba5"
>
</ReqRef><ReqRef
 Id="5bf06f42-4784-4fb0-b8fe-19280822dd54"
>
</ReqRef><ReqRef
 Id="a651727b-67a1-4e0c-99d6-89af31425c35"
>
</ReqRef><Cases>
<Case
 Name="SB feedback interface available"
>
<PreConditions>
<PreCondition>ServiceBrakeFeedbackAvailable ()</PreCondition></PreConditions>
<Expression>5.0</Expression>
</Case><Case
 Name="SB feedback interface not available"
>
<Expression>BaseTypes.MaxTime ( X1 =&gt; 0.8 * TrainData.BrakingParameters.T_bs(), X2 =&gt; 5.0 )</Expression>
</Case></Cases>
</Function><Function
 Type="Default.BaseTypes.Distance"
 Implemented="TRUE"
 Name="d_SBI2_MREBDT"
>
<ReqRef
 Id="d542f99e-9462-4bb6-9087-35da9a233e06"
>
</ReqRef><Comment></Comment>
<Parameters>
<Parameter
 Type="Default.BaseTypes.Speed"
 Name="Vest"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="Value"
>
<Expression>REDUCE
    TARGETS ( Targets1 =&gt; MRSP.SpeedRestrictions, Targets2 =&gt; MA.SvLSpeedRestriction, Targets3 =&gt; NationalValues.MaxDistInSRSpeedRestriction )
USING
    BaseTypes.MinDistance ( X1 =&gt; TargetSupervision.d_SBI2 ( Vest =&gt; Vest, aTarget =&gt; X ), X2 =&gt; RESULT )
INITIAL_VALUE
    BaseTypes.Distance.Infinity</Expression>
</Case></Cases>
</Function><Function
 Type="Default.BaseTypes.Distance"
 Implemented="TRUE"
 Name="d_FLOI"
>
<ReqRef
 Id="d542f99e-9462-4bb6-9087-35da9a233e06"
>
</ReqRef><Parameters>
<Parameter
 Type="Default.BaseTypes.Speed"
 Name="Vest"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="d_SBI1"
>
<PreConditions>
<PreCondition>d_SBI1 ( Vest ) - TrainPosition.FrontEndPosition ( DistanceInterval.Nom ) &lt;= d_SBI2_MREBDT ( Vest ) - TrainPosition.FrontEndPosition ( DistanceInterval.Max )</PreCondition></PreConditions>
<Expression>d_SBI1 ( Vest )</Expression>
</Case><Case
 Name="d_SBI2_MREBDT"
>
<Expression>d_SBI2_MREBDT ( Vest )</Expression>
</Case></Cases>
</Function><Function
 Type="Default.BaseTypes.Speed"
 Implemented="TRUE"
 Name="V_P_EOA"
>
<ReqRef
 Id="fdddd187-528c-44e6-9583-2900e0e2afca"
>
</ReqRef><ReqRef
 Id="8b2366a5-38e0-4885-836f-fdcbbf43e1b8"
>
</ReqRef><ReqRef
 Id="4a6a5396-38cf-4784-bd94-ba5c844bb58c"
>
</ReqRef><ReqRef
 Id="d7b72e8e-080e-4419-87c9-e54ecdfed0ef"
>
</ReqRef><ReqRef
 Id="9e5b33ae-9b18-4cc2-a313-bbacf0e3cf57"
>
</ReqRef><Parameters>
<Parameter
 Type="Default.BaseTypes.Distance"
 Name="d_estfront"
>
</Parameter><Parameter
 Type="Default.BaseTypes.Speed"
 Name="Vest"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="GUI is inhibited, first case"
>
<PreConditions>
<PreCondition>d_estfront + Vest * ( T_driver + T_bs1 ) &lt; MA.EndOfMovementAuthority().Location</PreCondition><PreCondition>NOT NationalValues.ComputationOfGUIIsEnabled ()</PreCondition></PreConditions>
<Expression>SBD ( d_estfront + Vest * ( T_driver + T_bs1 ) )</Expression>
</Case><Case
 Name="GUI is enabled, first case"
>
<PreConditions>
<PreCondition>NationalValues.ComputationOfGUIIsEnabled ()</PreCondition><PreCondition>d_estfront + Vest * ( T_driver + T_bs1 ) &lt; MA.EndOfMovementAuthority().Location</PreCondition></PreConditions>
<Expression>BaseTypes.MinDistance ( X1 =&gt; SBD ( d_estfront + Vest * ( T_driver + T_bs1 ) ), X2 =&gt; GUI ( d_estfront ) )</Expression>
</Case><Case
 Name="Second case"
>
<Expression>0.0</Expression>
</Case></Cases>
</Function><Function
 Type="Default.BaseTypes.Speed"
 Implemented="TRUE"
 Name="V_P_EBD_Target"
>
<ReqRef
 Id="07eb8e7a-b28f-4fcc-96e6-2042d5ca7980"
>
</ReqRef><ReqRef
 Id="18ac7a51-42e7-45d9-b16c-290a09782304"
>
</ReqRef><ReqRef
 Id="4a6a5396-38cf-4784-bd94-ba5c844bb58c"
>
</ReqRef><ReqRef
 Id="d7b72e8e-080e-4419-87c9-e54ecdfed0ef"
>
</ReqRef><ReqRef
 Id="9e5b33ae-9b18-4cc2-a313-bbacf0e3cf57"
>
</ReqRef><Comment></Comment>
<Parameters>
<Parameter
 Type="Default.BaseTypes.Distance"
 Name="d_maxsafefront"
>
</Parameter><Parameter
 Type="Default.BaseTypes.Speed"
 Name="Vtarget"
>
</Parameter><Parameter
 Type="Default.BaseTypes.Speed"
 Name="Vest"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="GUI is inhibited, first case"
>
<PreConditions>
<PreCondition>d_maxsafefront + Vest * ( T_driver + T_bs2 ) + Dbec ( Vest =&gt; Vest, Vtarget =&gt; Vtarget ) &lt; DistanceForSpeed ( Function =&gt; EBD, Speed =&gt; Vtarget )</PreCondition><PreCondition>NOT NationalValues.ComputationOfGUIIsEnabled ()</PreCondition></PreConditions>
<Expression>EBD ( d_maxsafefront + Vest * ( T_driver + T_bs2 ) + Dbec ( Vest =&gt; Vest, Vtarget =&gt; Vtarget ) ) - ( Vbec ( Vest =&gt; Vest, Vtarget =&gt; Vtarget ) - Vest )</Expression>
</Case><Case
 Name="GUI is enabled, first case"
>
<PreConditions>
<PreCondition>NationalValues.ComputationOfGUIIsEnabled ()</PreCondition><PreCondition>d_maxsafefront + Vest * ( T_driver + T_bs2 ) + Dbec ( Vest =&gt; Vest, Vtarget =&gt; Vtarget ) &lt; DistanceForSpeed ( Function =&gt; EBD, Speed =&gt; Vtarget )</PreCondition></PreConditions>
<Expression>BaseTypes.MinDistance ( X1 =&gt; EBD ( d_maxsafefront + Vest * ( T_driver + T_bs2 ) + Dbec ( Vest =&gt; Vest, Vtarget =&gt; Vtarget ) ) - ( Vbec ( Vest =&gt; Vest, Vtarget =&gt; Vtarget ) - Vest ), X2 =&gt; GUI ( d_maxsafefront ) )</Expression>
</Case><Case
 Name="Second case"
>
<Expression>Vtarget</Expression>
</Case></Cases>
</Function><Function
 Type="Default.BaseTypes.Speed"
 Cacheable="TRUE"
 Implemented="TRUE"
 Name="SBD"
>
<ReqRef
 Id="7525f72a-3b46-498c-8c48-1ed3ad888b1a"
>
</ReqRef><ReqRef
 Id="02854410-9ddb-4b94-993c-b26498a498bf"
>
</ReqRef><ReqRef
 Id="50a11b55-dc19-4427-b0fd-d81384417f79"
>
</ReqRef><ReqRef
 Id="cb22befd-4969-4fdf-9f68-f6b39ec1abe3"
>
</ReqRef><Comment>Provides the deceleration profile based on the MRSP and deceleration factors</Comment>
<Parameters>
<Parameter
 Type="Default.BaseTypes.Distance"
 Name="Distance"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="Value"
>
<Expression>DecelerationProfile ( 
  SpeedRestrictions =&gt; MA.EOASpeedRestriction, 
  DecelerationFactor =&gt; TrainData.BrakingParameters.A_expected ) 
( Distance )</Expression>
</Case></Cases>
</Function><Function
 Type="Default.BaseTypes.Speed"
 Cacheable="TRUE"
 Implemented="TRUE"
 Name="GUI"
>
<ReqRef
 Id="74a35017-250f-4c6f-948c-0c08da4f4b05"
>
</ReqRef><Comment>Provides the deceleration profile based on the MRSP and deceleration factors</Comment>
<Parameters>
<Parameter
 Type="Default.BaseTypes.Distance"
 Name="Distance"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="Always"
>
<Expression>DecelerationProfile ( 
  SpeedRestrictions =&gt; GUI.SpeedRestrictions 
  DecelerationFactor =&gt; TrainData.BrakingParameters.A_normal_service ) 
( Distance )</Expression>
</Case></Cases>
</Function><Function
 Type="Default.BaseTypes.Speed"
 Implemented="TRUE"
 Name="V_P_MRDT"
>
<ReqRef
 Id="96719821-5827-4475-bf1c-8200e9c230e4"
>
</ReqRef><Cases>
<Case
 Name="Value"
>
<Expression>MRDT().Speed</Expression>
</Case></Cases>
</Function><Function
 Type="Default.BaseTypes.Speed"
 Cacheable="TRUE"
 Name="EBD"
>
<ReqRef
 Id="690e9583-3caf-46eb-b721-bed7b3d89e9b"
>
</ReqRef><ReqRef
 Id="2b4c3cb7-6f06-408a-bfd7-85f5c5069e00"
>
</ReqRef><ReqRef
 Id="2c3d2e5e-98aa-4eda-9eb9-f2fd1ee0a60d"
>
</ReqRef><Parameters>
<Parameter
 Type="Default.BaseTypes.Distance"
 Name="Distance"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="Value"
>
<Expression>DecelerationProfile ( 
  SpeedRestrictions =&gt; Kernel.SpeedAndDistanceMonitoring.CeilingSupervision.EBI, 
  DecelerationFactor =&gt; Kernel.TrainData.BrakingParameters.A_safe )
( Distance )</Expression>
</Case></Cases>
</Function><Function
 Type="Default.BaseTypes.Speed"
 Name="EBD_Target"
>
<ReqRef
 Id="690e9583-3caf-46eb-b721-bed7b3d89e9b"
>
</ReqRef><ReqRef
 Id="2b4c3cb7-6f06-408a-bfd7-85f5c5069e00"
>
</ReqRef><ReqRef
 Id="2c3d2e5e-98aa-4eda-9eb9-f2fd1ee0a60d"
>
</ReqRef><Parameters>
<Parameter
 Type="Default.BaseTypes.Distance"
 Name="Distance"
>
</Parameter><Parameter
 Type="Target"
 Name="aTarget"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="Value"
>
<Expression>DecelerationProfile ( 
  SpeedRestrictions =&gt; FUNCTION d : Default.BaseTypes.Distance =&gt; TargetToGraph ( aTarget =&gt; aTarget, Distance =&gt; d ),
  DecelerationFactor =&gt; Kernel.TrainData.BrakingParameters.A_safe )
( Distance )</Expression>
</Case></Cases>
</Function><Function
 Type="Default.BaseTypes.Speed"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="TargetToGraph"
>
<Comment>Creates a speed restriction associated to a given target, by adding the increment dV_ebi if the target speed is different from 0.</Comment>
<Parameters>
<Parameter
 Type="Target"
 Name="aTarget"
>
</Parameter><Parameter
 Type="Default.BaseTypes.Distance"
 Name="Distance"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="MaxSpeed"
>
<PreConditions>
<PreCondition>Distance &lt; aTarget.Location</PreCondition></PreConditions>
<Expression>BaseTypes.Speed.MaxSpeed</Expression>
</Case><Case
 Name="Speed = 0"
>
<PreConditions>
<PreCondition>aTarget.Speed == 0.0</PreCondition></PreConditions>
<Expression>aTarget.Speed</Expression>
</Case><Case
 Name="Speed &gt; 0"
>
<Expression>aTarget.Speed + CeilingSupervision.dV_ebi ( aTarget.Speed )</Expression>
</Case></Cases>
</Function><Function
 Type="Target"
 Cacheable="TRUE"
 Implemented="TRUE"
 Name="MRDT"
>
<ReqRef
 Id="96719821-5827-4475-bf1c-8200e9c230e4"
>
</ReqRef><Cases>
<Case
 Name="Value"
>
<Expression>REDUCE
    TARGETS ( Targets1 =&gt; MRSP.SpeedRestrictions, Targets2 =&gt; MA.SvLSpeedRestriction, Targets3 =&gt; NationalValues.MaxDistInSRSpeedRestriction )
USING
    MinTarget ( X1 =&gt; X, X2 =&gt; RESULT )
INITIAL_VALUE
    MA.EndOfMovementAuthority()</Expression>
</Case></Cases>
</Function><Function
 Type="Target"
 Implemented="TRUE"
 Name="MinTarget"
>
<ReqRef
 Id="96719821-5827-4475-bf1c-8200e9c230e4"
>
</ReqRef><Parameters>
<Parameter
 Type="Target"
 Name="X1"
>
</Parameter><Parameter
 Type="Target"
 Name="X2"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="X1 is EOA, X1 &lt;= X2"
>
<PreConditions>
<PreCondition>MA.IsEOA ( X1 )</PreCondition><PreCondition>V_P_EOA ( d_estfront =&gt; TrainPosition.FrontEndPosition ( DistanceInterval.Nom ), Vest =&gt; Odometry.EstimatedSpeed ) &lt;= V_P_EBD_Target ( d_maxsafefront =&gt; TrainPosition.FrontEndPosition ( DistanceInterval.Max ), Vtarget =&gt; X2.Speed, Vest =&gt; Odometry.EstimatedSpeed )</PreCondition></PreConditions>
<Expression>X1</Expression>
</Case><Case
 Name="X1 is EOA, X1 &gt; X2"
>
<PreConditions>
<PreCondition>MA.IsEOA ( X1 )</PreCondition></PreConditions>
<Expression>X2</Expression>
</Case><Case
 Name="X2 is EOA, X1 &lt;= X2"
>
<PreConditions>
<PreCondition>MA.IsEOA ( X2 )</PreCondition><PreCondition>V_P_EBD_Target ( d_maxsafefront =&gt; TrainPosition.FrontEndPosition ( DistanceInterval.Max ), Vtarget =&gt; X1.Speed, Vest =&gt; Odometry.EstimatedSpeed ) &lt;=  V_P_EOA ( d_estfront =&gt; TrainPosition.FrontEndPosition ( DistanceInterval.Nom ), Vest =&gt; Odometry.EstimatedSpeed )</PreCondition></PreConditions>
<Expression>X1</Expression>
</Case><Case
 Name="X2 is EOA, X1 &gt; X2"
>
<PreConditions>
<PreCondition>MA.IsEOA ( X2 )</PreCondition></PreConditions>
<Expression>X2</Expression>
</Case><Case
 Name="X1 &lt;= X2"
>
<PreConditions>
<PreCondition>V_P_EBD_Target ( d_maxsafefront =&gt; TrainPosition.FrontEndPosition ( DistanceInterval.Max ), Vtarget =&gt; X1.Speed, Vest =&gt; Odometry.EstimatedSpeed ) &lt;= V_P_EBD_Target ( d_maxsafefront =&gt; TrainPosition.FrontEndPosition ( DistanceInterval.Max ), Vtarget =&gt; X2.Speed, Vest =&gt; Odometry.EstimatedSpeed ) </PreCondition></PreConditions>
<Expression>X1</Expression>
</Case><Case
 Name="Otherwise"
>
<Expression>X2</Expression>
</Case></Cases>
</Function><Function
 Type="Default.BaseTypes.Distance"
 Implemented="TRUE"
 Name="FLOIComparedDistance"
>
<ReqRef
 Id="49cb1ac1-74b3-4afe-865d-d6b4401719da"
>
</ReqRef><ReqRef
 Id="235a2d43-f1f5-49b1-8517-1f6b17a29a4c"
>
</ReqRef><ReqRef
 Id="fda34875-06ef-46a2-b272-8fdf00368ad5"
>
</ReqRef><ReqRef
 Id="81b045fa-67f4-4abe-9d72-380cb0687a1d"
>
</ReqRef><ReqRef
 Id="366c7bc8-9a83-43fb-b4e8-f41812946c97"
>
</ReqRef><ReqRef
 Id="ac2002ec-cc04-4e25-8344-d90765ce4d29"
>
</ReqRef><ReqRef
 Id="d394cede-dff2-4764-b72a-288ee8d5617c"
>
</ReqRef><ReqRef
 Id="d916181f-d7a1-4043-9617-e814b97ae7b4"
>
</ReqRef><ReqRef
 Id="0342251f-d656-4d41-8ece-bde758fbfadf"
>
</ReqRef><Parameters>
<Parameter
 Type="Default.BaseTypes.Speed"
 Name="Vest"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="SBI1"
>
<PreConditions>
<PreCondition>d_SBI1 ( Vest ) - TrainPosition.FrontEndPosition ( DistanceInterval.Nom ) &lt;= d_SBI2_MREBDT ( Vest ) - TrainPosition.FrontEndPosition ( DistanceInterval.Max )</PreCondition></PreConditions>
<Expression>TrainPosition.FrontEndPosition ( DistanceInterval.Nom )</Expression>
</Case><Case
 Name="SBI2"
>
<Expression>TrainPosition.FrontEndPosition ( DistanceInterval.Max )</Expression>
</Case></Cases>
</Function><Function
 Type="Default.BaseTypes.Speed"
 Implemented="TRUE"
 Name="V_P_DMI"
>
<ReqRef
 Id="74e64307-2966-461e-a976-9a0194ca8514"
>
</ReqRef><Cases>
<Case
 Name="Value"
>
<Expression>BaseTypes.MinSpeed ( X1 =&gt; BaseTypes.MaxSpeed ( X1 =&gt; V_P_MRDT(), X2 =&gt; MRDT().Speed ), X2 =&gt; MRSP.SpeedRestrictions ( TrainPosition.FrontEndPosition ( DistanceInterval.Nom ) ) )</Expression>
</Case></Cases>
</Function><Function
 Type="Default.BaseTypes.Speed"
 Implemented="TRUE"
 Name="V_FLOI_DMI"
>
<ReqRef
 Id="eb90e9d9-f130-4725-b447-bd6e474f0c8b"
>
</ReqRef><Cases>
<Case
 Name="EOA or SvL"
>
<PreConditions>
<PreCondition>MA.IsEOA ( MRDT() ) OR MA.IsSvL ( MRDT() )</PreCondition></PreConditions>
<Expression>BaseTypes.MinSpeed
(
    X1 =&gt; BaseTypes.MaxSpeed
    (
        X1 =&gt; CeilingSupervision.SBI ( MRDT().Location ),
        X2 =&gt; ReleaseSpeedSupervision.ReleaseSpeed
),
    X2 =&gt; MRSP.SpeedRestrictions ( TrainPosition.FrontEndPosition ( DistanceInterval.Nom ) ) + CeilingSupervision.dV_sbi ( MRSP.SpeedRestrictions ( TrainPosition.FrontEndPosition ( DistanceInterval.Nom ) ) )
)</Expression>
</Case><Case
 Name="MRSP or LOA"
>
<Expression>BaseTypes.MinSpeed ( X1 =&gt; BaseTypes.MaxSpeed ( X1 =&gt; CeilingSupervision.SBI ( MRDT().Location ), X2 =&gt; MRDT().Speed + CeilingSupervision.dV_sbi ( MRDT().Speed ) ), X2 =&gt; MRSP.SpeedRestrictions ( TrainPosition.FrontEndPosition ( DistanceInterval.Nom ) ) + CeilingSupervision.dV_sbi ( MRSP.SpeedRestrictions ( TrainPosition.FrontEndPosition ( DistanceInterval.Nom ) ) ) )</Expression>
</Case></Cases>
</Function><Function
 Type="Default.BaseTypes.Distance"
 Implemented="TRUE"
 Name="d_SBI1"
>
<ReqRef
 Id="977790a8-3eb7-4baf-a99c-78291edbfcd3"
>
</ReqRef><ReqRef
 Id="fcfd3391-2ee8-4a16-8cdb-470f53e81f60"
>
</ReqRef><ReqRef
 Id="c8774e4f-d138-4cf7-9fda-5f6a29c50cf9"
>
</ReqRef><ReqRef
 Id="c2747f10-3553-4ce9-9fc1-61bbf23b7f0b"
>
</ReqRef><ReqRef
 Id="faa860d4-6ec0-42c7-921a-65ae72f044ad"
>
</ReqRef><ReqRef
 Id="6d961621-89b1-4280-8bd7-11d37e4b3f6c"
>
</ReqRef><Comment>Provides the distance d_SBI1.</Comment>
<Parameters>
<Parameter
 Type="Default.BaseTypes.Speed"
 Name="Vest"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="Value"
>
<Expression>DistanceForSpeed ( Function =&gt; TargetSupervision.SBD, Speed =&gt; Vest )  - BaseTypes.SpeedToMS ( Vest ) * TargetSupervision.T_bs1</Expression>
</Case></Cases>
</Function><Function
 Type="Default.BaseTypes.Distance"
 Implemented="TRUE"
 Name="d_I"
>
<ReqRef
 Id="9d47bdf0-6549-4af1-8d8a-a36c0d505ec3"
>
</ReqRef><ReqRef
 Id="1251578c-995d-485e-8833-f418b93e1471"
>
</ReqRef><ReqRef
 Id="fcfd3391-2ee8-4a16-8cdb-470f53e81f60"
>
</ReqRef><ReqRef
 Id="c8774e4f-d138-4cf7-9fda-5f6a29c50cf9"
>
</ReqRef><ReqRef
 Id="b10067eb-6ad7-4c8c-9aab-ef1740ef0e13"
>
</ReqRef><Parameters>
<Parameter
 Type="Default.BaseTypes.Speed"
 Name="Vest"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="Below P"
>
<PreConditions>
<PreCondition>Vest &lt;= CeilingSupervision.P ( InterventionValue ( Vest ) )</PreCondition></PreConditions>
<Expression>InterventionValue ( Vest )</Expression>
</Case><Case
 Name="Above P"
>
<Expression>IntersectAt ( FunctionA =&gt; CeilingSupervision.P, FunctionB =&gt; InterventionValue )</Expression>
</Case></Cases>
</Function><Function
 Type="Default.BaseTypes.Distance"
 Implemented="TRUE"
 Name="d_P"
>
<ReqRef
 Id="10386bb3-4703-4007-bc8f-0d0904eb986f"
>
</ReqRef><ReqRef
 Id="1251578c-995d-485e-8833-f418b93e1471"
>
</ReqRef><ReqRef
 Id="fcfd3391-2ee8-4a16-8cdb-470f53e81f60"
>
</ReqRef><ReqRef
 Id="c8774e4f-d138-4cf7-9fda-5f6a29c50cf9"
>
</ReqRef><ReqRef
 Id="2c11a715-c52a-4168-b8fb-64484d1fd6d5"
>
</ReqRef><ReqRef
 Id="d7b72e8e-080e-4419-87c9-e54ecdfed0ef"
>
</ReqRef><ReqRef
 Id="9e5b33ae-9b18-4cc2-a313-bbacf0e3cf57"
>
</ReqRef><ReqRef
 Id="4a6a5396-38cf-4784-bd94-ba5c844bb58c"
>
</ReqRef><Parameters>
<Parameter
 Type="Default.BaseTypes.Speed"
 Name="Vest"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="GUI is inhibited"
>
<PreConditions>
<PreCondition>NOT NationalValues.ComputationOfGUIIsEnabled()</PreCondition></PreConditions>
<Expression>d_FLOI ( Vest ) - BaseTypes.SpeedToMS ( Vest ) * TargetSupervision.T_driver</Expression>
</Case><Case
 Name="GUI is enabled"
>
<Expression>BaseTypes.MinDistance ( X1 =&gt; d_FLOI ( Vest ) - BaseTypes.SpeedToMS ( Vest ) * TargetSupervision.T_driver, X2 =&gt; DistanceForSpeed ( Function =&gt; TargetSupervision.GUI, Speed =&gt; Vest ) )</Expression>
</Case></Cases>
</Function><Function
 Type="Default.BaseTypes.Distance"
 Implemented="TRUE"
 Name="d_W"
>
<ReqRef
 Id="489ea7da-1016-4fd4-8a89-0ce129ff23a5"
>
</ReqRef><ReqRef
 Id="1251578c-995d-485e-8833-f418b93e1471"
>
</ReqRef><ReqRef
 Id="fcfd3391-2ee8-4a16-8cdb-470f53e81f60"
>
</ReqRef><ReqRef
 Id="c8774e4f-d138-4cf7-9fda-5f6a29c50cf9"
>
</ReqRef><ReqRef
 Id="d7b72e8e-080e-4419-87c9-e54ecdfed0ef"
>
</ReqRef><ReqRef
 Id="9e5b33ae-9b18-4cc2-a313-bbacf0e3cf57"
>
</ReqRef><Parameters>
<Parameter
 Type="Default.BaseTypes.Speed"
 Name="Vest"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="Value"
>
<Expression>d_FLOI ( Vest ) - BaseTypes.SpeedToMS ( Vest ) * TargetSupervision.T_warning</Expression>
</Case></Cases>
</Function><Function
 Type="Default.BaseTypes.Distance"
 Implemented="TRUE"
 Name="InterventionValue"
>
<ReqRef
 Id="9d47bdf0-6549-4af1-8d8a-a36c0d505ec3"
>
</ReqRef><Comment></Comment>
<Parameters>
<Parameter
 Type="Default.BaseTypes.Speed"
 Name="V"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="Value"
>
<Expression>d_P ( V ) - BaseTypes.SpeedToMS ( V ) * TargetSupervision.T_indication ()</Expression>
</Case></Cases>
</Function><Function
 Type="Default.BaseTypes.Distance"
 Implemented="TRUE"
 Name="EBIvalue"
>
<ReqRef
 Id="faa860d4-6ec0-42c7-921a-65ae72f044ad"
>
</ReqRef><ReqRef
 Id="0e91b525-553f-4f68-8970-8bed83e88948"
>
</ReqRef><ReqRef
 Id="7d29645c-18cf-4661-9edb-e3fcb091bc29"
>
</ReqRef><Comment></Comment>
<Parameters>
<Parameter
 Type="Default.BaseTypes.Speed"
 Name="Vest"
>
</Parameter><Parameter
 Type="Target"
 Name="aTarget"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="Value"
>
<Expression>DistanceForSpeed (
    Function =&gt;
        FUNCTION d : Default.BaseTypes.Distance =&gt; EBD_Target ( Distance =&gt; d, aTarget =&gt; aTarget ),
        Speed =&gt; Vbec ( Vest =&gt; Vest, Vtarget =&gt; aTarget.Speed ) )
- Dbec ( Vest =&gt; Vest, Vtarget =&gt; aTarget.Speed )</Expression>
</Case></Cases>
</Function></Functions>
<Procedures>
<Procedure
 Implemented="TRUE"
 Name="InitializeTimeIntervals"
>
<ReqRef
 Id="64f293f1-473e-4a19-b92d-2240f67c616e"
>
</ReqRef><ReqRef
 Id="0da7d42d-a7f1-4b5e-bfb4-d43908e0ab43"
>
</ReqRef><ReqRef
 Id="e6c96237-f200-4c17-a939-03f51fb70c39"
>
</ReqRef><Rules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="InitializeTimeIntervals"
>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="SBCommandAvailable_SBFeedbackNotAvailable"
>
<ReqRef
 Id="64f293f1-473e-4a19-b92d-2240f67c616e"
>
</ReqRef><PreConditions>
<PreCondition>TrainData.TrainData.Value.SBCommandIsImplemented</PreCondition><PreCondition>NOT TrainData.TrainData.Value.SBFeedbackIsImplemented</PreCondition></PreConditions>
<Actions>
<Action>T_bs1 &lt;- TrainData.BrakingParameters.T_bs()</Action><Action>T_bs2 &lt;- TrainData.BrakingParameters.T_bs()</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="SBCommandAvailable_SBFeedbackAvailable"
>
<ReqRef
 Id="0da7d42d-a7f1-4b5e-bfb4-d43908e0ab43"
>
</ReqRef><PreConditions>
<PreCondition>TrainData.TrainData.Value.SBCommandIsImplemented</PreCondition><PreCondition>TrainData.TrainData.Value.SBFeedbackIsImplemented</PreCondition></PreConditions>
<Actions>
<Action>T_bs1 &lt;- TrainData.BrakingParameters.T_bs()</Action><Action>T_bs2 &lt;- TrainData.BrakingParameters.T_bs()</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="SBCommandNotAvailable"
>
<ReqRef
 Id="e6c96237-f200-4c17-a939-03f51fb70c39"
>
</ReqRef><PreConditions>
<PreCondition>NOT TrainData.TrainData.Value.SBCommandIsImplemented</PreCondition></PreConditions>
<Actions>
<Action>T_bs1 &lt;- 0.0</Action><Action>T_bs2 &lt;- 0.0</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</Procedure></Procedures>
<Variables>
<Variable
 Type="Default.BaseTypes.Time"
 DefaultValue="0.0"
 VariableMode="Internal"
 Implemented="TRUE"
 Name="T_bs1"
>
<ReqRef
 Id="977790a8-3eb7-4baf-a99c-78291edbfcd3"
>
</ReqRef><Comment>Time interval used to compute d_SBI1.</Comment>
</Variable><Variable
 Type="Default.BaseTypes.Time"
 DefaultValue="0.0"
 VariableMode="Internal"
 Implemented="TRUE"
 Name="T_bs2"
>
<ReqRef
 Id="88d50002-b123-41cd-8621-3ac7ae0408ef"
>
</ReqRef><Comment>Time interval used to compute d_SBI2.</Comment>
</Variable><Variable
 Type="Default.BaseTypes.Time"
 DefaultValue="4.0"
 VariableMode="Internal"
 Implemented="TRUE"
 Name="T_driver"
>
<ReqRef
 Id="c7311fc7-ae05-436b-89b3-0573bdb52921"
>
</ReqRef><ReqRef
 Id="edd3e5bf-072e-4f5c-a2d2-0852b0d7d409"
>
<Comment>Driver reaction time between Permitted speed supervision limit and FLOI.</Comment>
</ReqRef><ReqRef
 Id="d7b72e8e-080e-4419-87c9-e54ecdfed0ef"
>
</ReqRef><ReqRef
 Id="9e5b33ae-9b18-4cc2-a313-bbacf0e3cf57"
>
</ReqRef><Comment>Driver reaction time between Permitted speed supervision limit and FLOI.</Comment>
</Variable><Variable
 Type="Default.BaseTypes.Time"
 DefaultValue="2.0"
 VariableMode="Internal"
 Implemented="TRUE"
 Name="T_warning"
>
<ReqRef
 Id="a61536b0-4469-4cd7-9f95-560c3bd85f7f"
>
</ReqRef><ReqRef
 Id="6867c1d9-cb85-4cc7-9083-5b893166fce7"
>
</ReqRef><ReqRef
 Id="d7b72e8e-080e-4419-87c9-e54ecdfed0ef"
>
</ReqRef><ReqRef
 Id="9e5b33ae-9b18-4cc2-a313-bbacf0e3cf57"
>
</ReqRef><Comment>Time between Warning supervision limit and FLOI.</Comment>
</Variable></Variables>
<Rules>
<Rule
 Priority="UpdateINTERNAL"
 Implemented="TRUE"
 Name="UpdateSupervisionStatus"
>
<ReqRef
 Id="e0714dd3-9891-467d-9584-cfde98bcc4fc"
>
</ReqRef><SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="CheckSpeedAndDistanceMonitoringStatus"
>
<PreConditions>
<PreCondition>Kernel.SpeedAndDistanceMonitoring.SpeedAndDistanceMonitoringIsActive</PreCondition><PreCondition>Kernel.SpeedAndDistanceMonitoring.Monitoring == Kernel.SpeedAndDistanceMonitoring.MonitoringType.Target</PreCondition><PreCondition>TrainPosition.Position.DataState == DataState.Valid</PreCondition></PreConditions>
<Actions>
</Actions>
<SubRules>
<Rule
 Priority="UpdateINTERNAL"
 Implemented="TRUE"
 Name="UpdateSupervisionStatus"
>
<ReqRef
 Id="e0714dd3-9891-467d-9584-cfde98bcc4fc"
>
</ReqRef><SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="t14"
>
<ReqRef
 Id="a77d9b43-ca07-4b88-99c9-aee4aac78473"
>
</ReqRef><PreConditions>
<PreCondition>MRSP.SpeedRestrictions ( TrainPosition.FrontEndPosition ( DistanceInterval.Nom ) ) + CeilingSupervision.dV_ebi ( MRSP.SpeedRestrictions ( TrainPosition.FrontEndPosition ( DistanceInterval.Nom ) ) ) &lt; Odometry.EstimatedSpeed</PreCondition><PreCondition>Supervision != SupervisionStatus.Intervention</PreCondition></PreConditions>
<Actions>
<Action>TriggerEBCommand()</Action><Action>Supervision &lt;- SupervisionStatus.Intervention</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="t13"
>
<ReqRef
 Id="6d9d71c4-5508-47ef-ab3d-c32522306769"
>
</ReqRef><PreConditions>
<PreCondition>Supervision != SupervisionStatus.Intervention</PreCondition><PreCondition>MRDT().Speed + Kernel.SpeedAndDistanceMonitoring.CeilingSupervision.dV_ebi ( V =&gt; MRDT().Speed ) &lt; Odometry.EstimatedSpeed</PreCondition><PreCondition>Odometry.EstimatedSpeed &lt;= Kernel.MRSP.SpeedRestrictions ( Kernel.TrainPosition.FrontEndPosition ( DistanceInterval.Nom ) ) + Kernel.SpeedAndDistanceMonitoring.CeilingSupervision.dV_ebi ( V =&gt; Kernel.MRSP.SpeedRestrictions ( Kernel.TrainPosition.FrontEndPosition ( DistanceInterval.Nom ) ) )</PreCondition><PreCondition>Kernel.TrainPosition.FrontEndPosition ( DistanceInterval.Max ) &gt; Kernel.SpeedAndDistanceMonitoring.TargetSupervision.d_EBI ( Vest =&gt; Odometry.EstimatedSpeed, aTarget =&gt; MRDT() )</PreCondition></PreConditions>
<Actions>
<Action>TriggerEBCommand()</Action><Action>Supervision &lt;- SupervisionStatus.Intervention</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="t12"
>
<ReqRef
 Id="e354be4a-8c30-493a-8607-87b51d1ac30c"
>
</ReqRef><PreConditions>
<PreCondition>MRSP.SpeedRestrictions ( TrainPosition.FrontEndPosition ( DistanceInterval.Nom ) ) + CeilingSupervision.dV_sbi ( MRSP.SpeedRestrictions ( TrainPosition.FrontEndPosition ( DistanceInterval.Nom ) ) ) &lt; Odometry.EstimatedSpeed</PreCondition><PreCondition>Odometry.EstimatedSpeed &lt;= MRSP.SpeedRestrictions ( TrainPosition.FrontEndPosition ( DistanceInterval.Nom ) ) + CeilingSupervision.dV_ebi ( MRSP.SpeedRestrictions ( TrainPosition.FrontEndPosition ( DistanceInterval.Nom ) ) )</PreCondition><PreCondition>Supervision != SupervisionStatus.Intervention</PreCondition><PreCondition>d_I ( MRSP.SpeedRestrictions ( TrainPosition.FrontEndPosition ( DistanceInterval.Nom ) ) ) &lt; TrainPosition.FrontEndPosition ( DistanceInterval.Max )</PreCondition><PreCondition>TrainPosition.FrontEndPosition ( DistanceInterval.Max ) &lt;= TargetSupervision.d_EBI ( Vest =&gt; Odometry.EstimatedSpeed, aTarget =&gt; MRDT() )</PreCondition></PreConditions>
<Actions>
<Action>Supervision &lt;- SupervisionStatus.Intervention</Action><Action>TriggerSBCommand()</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="t11"
>
<ReqRef
 Id="b3b7e30c-6bb4-4cd9-8e6d-dfb514676cbd"
>
</ReqRef><PreConditions>
<PreCondition>Supervision != SupervisionStatus.Intervention</PreCondition><PreCondition>MRSP.SpeedRestrictions ( TrainPosition.FrontEndPosition ( DistanceInterval.Nom ) ) + CeilingSupervision.dV_sbi ( MRSP.SpeedRestrictions ( TrainPosition.FrontEndPosition ( DistanceInterval.Nom ) ) ) &lt; Odometry.EstimatedSpeed</PreCondition><PreCondition>Odometry.EstimatedSpeed &lt;= MRSP.SpeedRestrictions ( TrainPosition.FrontEndPosition ( DistanceInterval.Nom ) ) + CeilingSupervision.dV_ebi ( MRSP.SpeedRestrictions ( TrainPosition.FrontEndPosition ( DistanceInterval.Nom ) ) )</PreCondition><PreCondition>TrainPosition.FrontEndPosition ( DistanceInterval.Max ) &lt;= d_I ( MRSP.SpeedRestrictions ( TrainPosition.FrontEndPosition ( DistanceInterval.Nom ) ) )</PreCondition></PreConditions>
<Actions>
<Action>Supervision &lt;- SupervisionStatus.Intervention</Action><Action>TriggerSBCommand()</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="t10"
>
<ReqRef
 Id="49cb1ac1-74b3-4afe-865d-d6b4401719da"
>
</ReqRef><PreConditions>
<PreCondition>Supervision != SupervisionStatus.Intervention</PreCondition><PreCondition>MRDT().Speed + CeilingSupervision.dV_sbi ( MRDT().Speed ) &lt; Odometry.EstimatedSpeed</PreCondition><PreCondition>Odometry.EstimatedSpeed &lt;= MRSP.SpeedRestrictions ( TrainPosition.FrontEndPosition ( DistanceInterval.Nom ) ) + CeilingSupervision.dV_sbi ( MRSP.SpeedRestrictions ( TrainPosition.FrontEndPosition ( DistanceInterval.Nom ) ) )</PreCondition><PreCondition>FLOIComparedDistance ( Odometry.EstimatedSpeed ) &gt; TargetSupervision.d_FLOI ( Odometry.EstimatedSpeed )</PreCondition></PreConditions>
<Actions>
<Action>Supervision &lt;- SupervisionStatus.Intervention</Action><Action>TriggerSBCommand()</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="t9"
>
<ReqRef
 Id="0342251f-d656-4d41-8ece-bde758fbfadf"
>
</ReqRef><PreConditions>
<PreCondition>Supervision != SupervisionStatus.Warning</PreCondition><PreCondition>MRSP.SpeedRestrictions ( TrainPosition.FrontEndPosition ( DistanceInterval.Nom ) ) + CeilingSupervision.dV_warning ( MRSP.SpeedRestrictions ( TrainPosition.FrontEndPosition ( DistanceInterval.Nom ) ) ) &lt; Odometry.EstimatedSpeed</PreCondition><PreCondition>Odometry.EstimatedSpeed &lt;= MRSP.SpeedRestrictions ( TrainPosition.FrontEndPosition ( DistanceInterval.Nom ) ) + CeilingSupervision.dV_sbi ( MRSP.SpeedRestrictions ( TrainPosition.FrontEndPosition ( DistanceInterval.Nom ) ) )</PreCondition><PreCondition>d_I ( MRSP.SpeedRestrictions ( TrainPosition.FrontEndPosition ( DistanceInterval.Nom ) ) ) &lt; FLOIComparedDistance ( Odometry.EstimatedSpeed )</PreCondition><PreCondition>FLOIComparedDistance ( Odometry.EstimatedSpeed ) &lt;= TargetSupervision.d_FLOI ( Odometry.EstimatedSpeed )</PreCondition></PreConditions>
<Actions>
<Action>Supervision &lt;- SupervisionStatus.Warning</Action><Action>TCOSpecified &lt;- True</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="t8"
>
<ReqRef
 Id="d916181f-d7a1-4043-9617-e814b97ae7b4"
>
</ReqRef><PreConditions>
<PreCondition>Supervision != SupervisionStatus.Warning</PreCondition><PreCondition>MRSP.SpeedRestrictions ( TrainPosition.FrontEndPosition ( DistanceInterval.Nom ) ) + CeilingSupervision.dV_warning ( MRSP.SpeedRestrictions ( TrainPosition.FrontEndPosition ( DistanceInterval.Nom ) ) ) &lt; Odometry.EstimatedSpeed</PreCondition><PreCondition>Odometry.EstimatedSpeed &lt;= MRSP.SpeedRestrictions ( TrainPosition.FrontEndPosition ( DistanceInterval.Nom ) ) + CeilingSupervision.dV_sbi ( MRSP.SpeedRestrictions ( TrainPosition.FrontEndPosition ( DistanceInterval.Nom ) ) )</PreCondition><PreCondition>FLOIComparedDistance ( Odometry.EstimatedSpeed ) &lt;= d_I ( Odometry.EstimatedSpeed )</PreCondition></PreConditions>
<Actions>
<Action>Supervision &lt;- SupervisionStatus.Warning</Action><Action>TCOSpecified &lt;- True</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="t7"
>
<ReqRef
 Id="d394cede-dff2-4764-b72a-288ee8d5617c"
>
</ReqRef><PreConditions>
<PreCondition>Supervision != SupervisionStatus.Warning</PreCondition><PreCondition>MRDT().Speed + CeilingSupervision.dV_warning ( MRDT().Speed ) &lt; Odometry.EstimatedSpeed</PreCondition><PreCondition>Odometry.EstimatedSpeed &lt;= MRSP.SpeedRestrictions ( TrainPosition.FrontEndPosition ( DistanceInterval.Nom ) ) + CeilingSupervision.dV_warning ( MRSP.SpeedRestrictions ( TrainPosition.FrontEndPosition ( DistanceInterval.Nom ) ) )</PreCondition><PreCondition>FLOIComparedDistance ( Odometry.EstimatedSpeed ) &gt; d_W ( Odometry.EstimatedSpeed )</PreCondition></PreConditions>
<Actions>
<Action>Supervision &lt;- SupervisionStatus.Warning</Action><Action>TCOSpecified &lt;- True</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="t6"
>
<ReqRef
 Id="ac2002ec-cc04-4e25-8344-d90765ce4d29"
>
</ReqRef><PreConditions>
<PreCondition>Supervision != SupervisionStatus.Overspeed</PreCondition><PreCondition>MRSP.SpeedRestrictions ( TrainPosition.FrontEndPosition ( DistanceInterval.Nom ) ) &lt; Odometry.EstimatedSpeed</PreCondition><PreCondition>Odometry.EstimatedSpeed &lt;= MRSP.SpeedRestrictions ( TrainPosition.FrontEndPosition ( DistanceInterval.Nom ) ) + CeilingSupervision.dV_warning ( MRSP.SpeedRestrictions ( TrainPosition.FrontEndPosition ( DistanceInterval.Nom ) ) )</PreCondition><PreCondition>d_I ( MRSP.SpeedRestrictions ( TrainPosition.FrontEndPosition ( DistanceInterval.Nom ) ) ) &lt; FLOIComparedDistance ( Odometry.EstimatedSpeed )</PreCondition><PreCondition>FLOIComparedDistance ( Odometry.EstimatedSpeed ) &lt;= d_W ( Odometry.EstimatedSpeed )</PreCondition></PreConditions>
<Actions>
<Action>Supervision &lt;- SupervisionStatus.Overspeed</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="t5"
>
<ReqRef
 Id="366c7bc8-9a83-43fb-b4e8-f41812946c97"
>
</ReqRef><PreConditions>
<PreCondition>Supervision != SupervisionStatus.Overspeed</PreCondition><PreCondition>FLOIComparedDistance ( Odometry.EstimatedSpeed ) &lt;= d_W ( Odometry.EstimatedSpeed )</PreCondition><PreCondition>Odometry.EstimatedSpeed &lt;= MRSP.SpeedRestrictions ( TrainPosition.FrontEndPosition ( DistanceInterval.Nom ) ) + CeilingSupervision.dV_warning ( MRSP.SpeedRestrictions ( TrainPosition.FrontEndPosition ( DistanceInterval.Nom ) ) )</PreCondition><PreCondition>FLOIComparedDistance ( Odometry.EstimatedSpeed ) &lt;= d_I ( MRSP.SpeedRestrictions ( TrainPosition.FrontEndPosition ( DistanceInterval.Nom ) ) )</PreCondition></PreConditions>
<Actions>
<Action>Supervision &lt;- SupervisionStatus.Overspeed</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="t4"
>
<ReqRef
 Id="81b045fa-67f4-4abe-9d72-380cb0687a1d"
>
</ReqRef><PreConditions>
<PreCondition>Supervision != SupervisionStatus.Overspeed</PreCondition><PreCondition>Odometry.EstimatedSpeed &lt;= MRSP.SpeedRestrictions ( TrainPosition.FrontEndPosition ( DistanceInterval.Nom ) )</PreCondition><PreCondition>FLOIComparedDistance ( Odometry.EstimatedSpeed ) &gt; d_P ( Odometry.EstimatedSpeed )</PreCondition><PreCondition>MRDT().Speed &lt; Odometry.EstimatedSpeed</PreCondition></PreConditions>
<Actions>
<Action>Supervision &lt;- SupervisionStatus.Overspeed</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="t3"
>
<ReqRef
 Id="fda34875-06ef-46a2-b272-8fdf00368ad5"
>
</ReqRef><PreConditions>
<PreCondition>Supervision != SupervisionStatus.Indication</PreCondition><PreCondition>Odometry.EstimatedSpeed &lt;= MRSP.SpeedRestrictions ( TrainPosition.FrontEndPosition ( DistanceInterval.Nom ) )</PreCondition><PreCondition>MRDT().Speed &lt; Odometry.EstimatedSpeed</PreCondition><PreCondition>FLOIComparedDistance ( Odometry.EstimatedSpeed ) &gt; d_I ( Odometry.EstimatedSpeed )</PreCondition></PreConditions>
<Actions>
<Action>Supervision &lt;- SupervisionStatus.Indication</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="t2"
>
<ReqRef
 Id="235a2d43-f1f5-49b1-8517-1f6b17a29a4c"
>
</ReqRef><PreConditions>
<PreCondition>Supervision != SupervisionStatus.Normal</PreCondition><PreCondition>MRDT().Speed &lt; Odometry.EstimatedSpeed</PreCondition><PreCondition>Odometry.EstimatedSpeed &lt;= MRSP.SpeedRestrictions ( TrainPosition.FrontEndPosition ( DistanceInterval.Nom ) )</PreCondition><PreCondition>FLOIComparedDistance ( Odometry.EstimatedSpeed ) &lt;= d_I ( Odometry.EstimatedSpeed )</PreCondition></PreConditions>
<Actions>
<Action>Supervision &lt;- SupervisionStatus.Normal</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="t1"
>
<ReqRef
 Id="c9726f4e-f5b9-4cb2-8c10-be51cb610a07"
>
</ReqRef><PreConditions>
<PreCondition>Supervision != SupervisionStatus.Normal</PreCondition><PreCondition>Odometry.EstimatedSpeed &lt;= MRDT().Speed</PreCondition></PreConditions>
<Actions>
<Action>Supervision &lt;- SupervisionStatus.Normal</Action></Actions>
</RuleCondition></Conditions>
</Rule></SubRules>
</RuleCondition></Conditions>
</Rule></Rules>
</NameSpace>
