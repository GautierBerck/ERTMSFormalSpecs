<NameSpace
 Name="TrainPosition"
>
<NameSpaces>
</NameSpaces>
<Structures>
<Structure
 Implemented="TRUE"
 Name="TrainPosition"
>
<ReqRef
 Id="3dbd1b48-23b6-40f9-a38e-77df9cc1ed68"
>
<Comment></Comment>
</ReqRef><ReqRef
 Id="4147b6c6-84d8-452d-b38e-8479cb6dc795"
>
<Comment>Even if the requirement is related to the train position, it seems more consistent to place the previous LRBGs in the BTM namespace</Comment>
</ReqRef><Comment>Represents the current position of the train, as described in 3.6.1.3.
The estimated train front end can be computed using Kernel.FrontEndPosition function.
The confidence interval can be computed using Kernel.ConfidenceInterval.ConfidenceInterval function.</Comment>
<StructureElement
 TypeName="DirectionalTrainPositionInformation"
 Default=""
 Mode="Internal"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="DirectionalPositionInformation"
>
<ReqRef
 Id="4f6dd5a0-a24c-40f0-8757-8c0c86cc2c43"
>
</ReqRef><Comment>The directional position information of the train (the train front end position, the train orientation and the train running direction).</Comment>
</StructureElement><StructureElement
 TypeName="Default.DataState"
 Default="Default.DataState.Unknown"
 Mode="Internal"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="DataState"
>
<ReqRef
 Id="8f27e8d5-aaaf-4ec3-986d-36345986e5f2"
>
</ReqRef><Comment>The data state of the train position.</Comment>
</StructureElement></Structure><Structure
 Implemented="TRUE"
 Name="DirectionalTrainPositionInformation"
>
<ReqRef
 Id="4f6dd5a0-a24c-40f0-8757-8c0c86cc2c43"
>
</ReqRef><Comment>This structure represents the directional train position information, in reference to the balise group orientation.</Comment>
<StructureElement
 TypeName="Default.Orientation"
 Default=""
 Mode="Internal"
 Implemented="TRUE"
 Name="TrainFrontEndPosition"
>
<ReqRef
 Id="18585bb5-dc2f-4e24-bb2e-10c77305d565"
>
</ReqRef><Comment>Position of the train front end, corresponds to Q_DLRBG.</Comment>
</StructureElement><StructureElement
 TypeName="Default.Orientation"
 Default=""
 Mode="Internal"
 Implemented="TRUE"
 Name="TrainOrientation"
>
<ReqRef
 Id="2a8febe6-f85b-423c-bc63-60828f11aa62"
>
</ReqRef><Comment>Train orientation, corresponds to Q_DIRLRBG.</Comment>
</StructureElement><StructureElement
 TypeName="Default.Orientation"
 Default=""
 Mode="Internal"
 Implemented="TRUE"
 Name="TrainRunningDirection"
>
<ReqRef
 Id="1ca933ce-9114-4bbd-b4fa-25bea496671c"
>
</ReqRef><Comment>Train running direction, corresponds to Q_DIRTRAIN.</Comment>
</StructureElement></Structure></Structures>
<Functions>
<Function
 Type="Default.BaseTypes.Distance"
 Implemented="TRUE"
 Name="FrontEndPosition"
>
<ReqRef
 Id="6e85df81-278a-4eb5-8ce0-b773e472f711"
>
</ReqRef><ReqRef
 Id="dfd8a050-ad00-42a4-969a-1da448625473"
>
</ReqRef><Comment>This function is used to compute the estimated front end position, the max and min safe front end position of the train. The parameter specifies which of the values must be returned.</Comment>
<Parameters>
<Parameter
 Type="Default.DistanceInterval"
 Name="PointOfInterest"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="No valid position on-board"
>
<PreConditions>
<PreCondition>Position.DataState != DataState.Valid</PreCondition></PreConditions>
<Expression>Default.BaseTypes.Distance.Unknown</Expression>
</Case><Case
 Name="Nominal"
>
<PreConditions>
<PreCondition>PointOfInterest == Default.DistanceInterval.Nom</PreCondition></PreConditions>
<Expression>Odometry.NominalDistance - BTM.LRBG.Position.Position</Expression>
</Case><Case
 Name="Maximum"
>
<PreConditions>
<PreCondition>PointOfInterest == Default.DistanceInterval.Max</PreCondition></PreConditions>
<Expression>Odometry.NominalDistance + Default.BaseTypes.LengthToDistance(Kernel.ConfidenceInterval.ConfidenceInterval(Default.ConfidenceInterval.L_DOUBTUNDER)) - BTM.LRBG.Position.Position</Expression>
</Case><Case
 Name="Minimum"
>
<PreConditions>
<PreCondition>PointOfInterest == Default.DistanceInterval.Min</PreCondition></PreConditions>
<Expression>Odometry.NominalDistance - Default.BaseTypes.LengthToDistance(Kernel.ConfidenceInterval.ConfidenceInterval(Default.ConfidenceInterval.L_DOUBTOVER)) - BTM.LRBG.Position.Position</Expression>
</Case></Cases>
</Function><Function
 Type="Default.BaseTypes.Distance"
 Implemented="TRUE"
 Name="RearEndPosition"
>
<ReqRef
 Id="d61ea269-686c-486d-9852-1fd7e6f88c24"
>
</ReqRef><Comment>This function is used to compute the estimated rear end position, the max and min safe rear end position of the train. The parameter specifies which of the values must be returned. These values are computed iff the train integrity status is valid (confirmed by driver or by integrity monitoring device).</Comment>
<Parameters>
<Parameter
 Type="Default.DistanceInterval"
 Name="PointOfInterest"
>
</Parameter></Parameters>
<Cases>
<Case
 Name="No valid position on-board"
>
<PreConditions>
<PreCondition>Position.DataState != DataState.Valid</PreCondition></PreConditions>
<Expression>Default.BaseTypes.Distance.Unknown</Expression>
</Case><Case
 Name="Nominal"
>
<PreConditions>
<PreCondition>PointOfInterest == Default.DistanceInterval.Nom</PreCondition><PreCondition>Kernel.TrainIntegrity.Status in [
  Messages.Q_LENGTH.Train_integrity_confirmed_by_driver,
  Messages.Q_LENGTH.Train_integrity_confirmed_by_integrity_monitoring_device
]</PreCondition></PreConditions>
<Expression>Odometry.NominalDistance - Default.BaseTypes.LengthToDistance(Kernel.TrainIntegrity.SafeTrainLength) - BTM.LRBG.Position.Position</Expression>
</Case><Case
 Name="Maximum"
>
<PreConditions>
<PreCondition>PointOfInterest == Default.DistanceInterval.Max</PreCondition><PreCondition>Kernel.TrainIntegrity.Status in [
  Messages.Q_LENGTH.Train_integrity_confirmed_by_driver,
  Messages.Q_LENGTH.Train_integrity_confirmed_by_integrity_monitoring_device
]</PreCondition></PreConditions>
<Expression>Odometry.NominalDistance - Default.BaseTypes.LengthToDistance(Kernel.TrainIntegrity.SafeTrainLength) + Default.BaseTypes.LengthToDistance(Kernel.ConfidenceInterval.ConfidenceInterval(Default.ConfidenceInterval.L_DOUBTUNDER)) - BTM.LRBG.Position.Position</Expression>
</Case><Case
 Name="Minimum"
>
<PreConditions>
<PreCondition>PointOfInterest == Default.DistanceInterval.Min</PreCondition><PreCondition>Kernel.TrainIntegrity.Status in [
  Messages.Q_LENGTH.Train_integrity_confirmed_by_driver,
  Messages.Q_LENGTH.Train_integrity_confirmed_by_integrity_monitoring_device
]</PreCondition></PreConditions>
<Expression>Odometry.NominalDistance - Default.BaseTypes.LengthToDistance(Kernel.TrainIntegrity.SafeTrainLength) - Default.BaseTypes.LengthToDistance(Kernel.ConfidenceInterval.ConfidenceInterval(Default.ConfidenceInterval.L_DOUBTOVER)) - BTM.LRBG.Position.Position</Expression>
</Case></Cases>
</Function></Functions>
<Procedures>
<Procedure
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="UpdatePositionState"
>
<Rules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="Update position state"
>
<ReqRef
 Id="3dbd1b48-23b6-40f9-a38e-77df9cc1ed68"
>
</ReqRef><SubRules></SubRules>
<Conditions>
<RuleCondition
 Name="LRBG is known"
>
<PreConditions>
<PreCondition>Available ( BTM.LRBG )</PreCondition></PreConditions>
<Actions>
<Action>Position.DataState &lt;- DataState.Valid</Action></Actions>
</RuleCondition><RuleCondition
 NeedsRequirement="FALSE"
 Name="LRBG is unknown"
>
<PreConditions>
<PreCondition>BTM.LRBG == EMPTY</PreCondition><PreCondition>Position.DataState != DataState.Invalid</PreCondition></PreConditions>
<Actions>
<Action>Position.DataState &lt;- DataState.Unknown</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</Procedure></Procedures>
<Variables>
<Variable
 Type="TrainPosition"
 DefaultValue=""
 VariableMode="Internal"
 Implemented="TRUE"
 Name="Position"
>
<ReqRef
 Id="3dbd1b48-23b6-40f9-a38e-77df9cc1ed68"
>
<Comment></Comment>
</ReqRef><ReqRef
 Id="8f27e8d5-aaaf-4ec3-986d-36345986e5f2"
>
</ReqRef><Comment></Comment>
</Variable></Variables>
</NameSpace>
