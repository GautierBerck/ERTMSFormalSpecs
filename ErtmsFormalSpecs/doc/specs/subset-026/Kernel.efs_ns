<NameSpace
 Name="Kernel"
>
<NameSpaces>
<NameSpaceRef
 Name="ConfidenceInterval"
>
</NameSpaceRef><NameSpaceRef
 Name="MA"
>
</NameSpaceRef><NameSpaceRef
 Name="NationalValues"
>
</NameSpaceRef><NameSpaceRef
 Name="TrainData"
>
</NameSpaceRef><NameSpaceRef
 Name="LX"
>
</NameSpaceRef><NameSpaceRef
 Name="SpeedAndDistanceMonitoring"
>
</NameSpaceRef><NameSpaceRef
 Name="TSR"
>
</NameSpaceRef><NameSpaceRef
 Name="MRSP"
>
</NameSpaceRef><NameSpaceRef
 Name="TrainPosition"
>
</NameSpaceRef><NameSpaceRef
 Name="ModeTransitions"
>
</NameSpaceRef><NameSpaceRef
 Name="Infill"
>
</NameSpaceRef><NameSpaceRef
 Name="HandlingOfAcceptedAndStoredInformation"
>
</NameSpaceRef><NameSpaceRef
 Name="SR"
>
</NameSpaceRef><NameSpaceRef
 Name="ModeRelatedSpeedLimits"
>
</NameSpaceRef><NameSpaceRef
 Name="Shunting"
>
</NameSpaceRef><NameSpaceRef
 Name="TrackDescription"
>
</NameSpaceRef><NameSpaceRef
 Name="AcceptInformation"
>
</NameSpaceRef><NameSpaceRef
 Name="LevelTransition"
>
</NameSpaceRef></NameSpaces>
<Enumerations>
<Enum
 Default="SupervisionStatus.Normal"
 Implemented="TRUE"
 Name="SupervisionStatus"
>
<ReqRef
 Id="3.13.10.1.1"
>
<Comment></Comment>
</ReqRef><ReqRef
 Id="Entry 4.7.2.2.8"
>
<Comment></Comment>
</ReqRef><Comment>The status of speed and distance monitoring supervision.</Comment>
<Values>
<EnumValue
 Value="0"
 Name="Normal"
>
</EnumValue><EnumValue
 Value="0"
 Name="Indication"
>
</EnumValue><EnumValue
 Value="0"
 Name="Overspeed"
>
</EnumValue><EnumValue
 Value="0"
 Name="Warning"
>
</EnumValue><EnumValue
 Value="0"
 Name="Intervention"
>
</EnumValue></Values>
</Enum><Enum
 Default="BrakeReason.DriverAckTimeOut"
 Implemented="TRUE"
 Name="BrakeReason"
>
<ReqRef
 Id="Entry 4.7.2.2.46"
>
</ReqRef><Values>
<EnumValue
 Value=""
 Name="DriverAckTimeOut"
>
</EnumValue></Values>
</Enum></Enumerations>
<Structures>
<Structure
 Implemented="TRUE"
 Name="DriverId"
>
<ReqRef
 Id="3.18.4.1.1"
>
</ReqRef><Comment></Comment>
<StructureElement
 TypeName="String"
 Default="&apos;Henry&apos;"
 Mode="Internal"
 Implemented="TRUE"
 Name="Value"
>
<Comment>The value of the driver id.</Comment>
</StructureElement><StructureElement
 TypeName="DataState"
 Default="DataState.Unknown"
 Mode="Internal"
 Implemented="TRUE"
 Name="DataState"
>
<ReqRef
 Id="5.4.2.2"
>
</ReqRef><Comment>The data state of the driver id.</Comment>
</StructureElement></Structure><Structure
 Implemented="TRUE"
 Name="LevelData"
>
<ReqRef
 Id="2.6.1.1"
>
<Comment></Comment>
</ReqRef><ReqRef
 Id="2.6.2.1"
>
</ReqRef><Comment>Represents the ERTMS/ETCS level of the train.</Comment>
<StructureElement
 TypeName="Level"
 Default="Level.L0"
 Mode="Internal"
 Implemented="TRUE"
 Name="Value"
>
<Comment>The value of the current ERTMS/ETCS level.</Comment>
</StructureElement><StructureElement
 TypeName="DataState"
 Default="DataState.Unknown"
 Mode="Internal"
 Implemented="TRUE"
 Name="DataState"
>
<ReqRef
 Id="5.4.2.2"
>
<Comment></Comment>
</ReqRef><Comment>The data state of the current ERTMS/ETCS level.</Comment>
</StructureElement></Structure><Structure
 Implemented="TRUE"
 Name="TrainRunningNumber"
>
<ReqRef
 Id="3.18.4.5.1"
>
</ReqRef><Comment>Represents the train running number.</Comment>
<StructureElement
 TypeName="String"
 Default="&apos;&apos;"
 Mode="Internal"
 Implemented="TRUE"
 Name="Value"
>
<Comment>Value of the train running number.</Comment>
</StructureElement><StructureElement
 TypeName="DataState"
 Default="DataState.Unknown"
 Mode="Internal"
 Implemented="TRUE"
 Name="DataState"
>
<ReqRef
 Id="5.4.2.2"
>
</ReqRef><Comment>Data state of the train running number.</Comment>
</StructureElement></Structure><Structure
 Implemented="TRUE"
 Name="EmergencyStop"
>
<ReqRef
 Id="3.10.2.1"
>
</ReqRef><Comment>Represents a received emergency stop (conditional or unconditional).</Comment>
<StructureElement
 TypeName="Boolean"
 Default="Boolean.False"
 Mode="Internal"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="IsConditional"
>
<Comment>Indicates if this emergency stop is conditional or not.</Comment>
</StructureElement><StructureElement
 TypeName="BrakeReason"
 Default="BrakeReason.DriverAckTimeOut"
 Mode="Internal"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Id"
>
<ReqRef
 Id="Entry 4.7.2.2.46"
>
</ReqRef><Comment>The id of the emergency stop.</Comment>
</StructureElement><StructureElement
 TypeName="Default.BaseTypes.Distance"
 Default=""
 Mode="Internal"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="StopLocation"
>
<Comment>The stop location of this emergency stop.</Comment>
</StructureElement></Structure><Structure
 Implemented="TRUE"
 Name="TrainIntegrity"
>
<ReqRef
 Id="3.6.5.2.3"
>
</ReqRef><Comment>Train integrity information.</Comment>
<StructureElement
 TypeName="Messages.Q_LENGTH"
 Default=""
 Mode="Internal"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Status"
>
<ReqRef
 Id="3.6.5.2.3.1"
>
</ReqRef><Comment>Status of the train integrity information.</Comment>
</StructureElement><StructureElement
 TypeName="Default.BaseTypes.Length"
 Default=""
 Mode="InOut"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="SafeTrainLength"
>
<ReqRef
 Id="3.6.5.2.3.2"
>
</ReqRef><Comment>Safe train length.</Comment>
</StructureElement><StructureElement
 TypeName="Default.DataState"
 Default=""
 Mode="Internal"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="DataState"
>
<ReqRef
 Id="3.6.5.2.3.2"
>
</ReqRef><Comment>Data state of the train integrity information.</Comment>
</StructureElement></Structure><Structure
 Implemented="TRUE"
 Name="OperatedSystemVersion"
>
<ReqRef
 Id="3.17.2.1"
>
</ReqRef><Comment>Represesnts the version of the ERTMS/ETCS operated system.</Comment>
<StructureElement
 TypeName="Default.DataState"
 Default=""
 Mode="Internal"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="DataState"
>
<Comment>Data state of the ERTMS/ETCS operated system.</Comment>
</StructureElement><StructureElement
 TypeName="String"
 Default=""
 Mode="Internal"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Value"
>
<Comment>Value of the ERTMS/ETCS operated system.</Comment>
</StructureElement></Structure><Structure
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="InhibitedLevels"
>
<ReqRef
 Id="3.15.9.2"
>
</ReqRef><Comment>Represents the list of currently inhibited levels and its data state.</Comment>
<StructureElement
 TypeName="Default.DataState"
 Default=""
 Mode="Internal"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="DataState"
>
<Comment>Data state of the list of inhibited levels.</Comment>
</StructureElement><StructureElement
 TypeName="Default.Levels"
 Default=""
 Mode="Internal"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Levels"
>
<Comment>The list of inhibited levels.</Comment>
</StructureElement></Structure><Structure
 Implemented="TRUE"
 Name="BaliseGroup"
>
<ReqRef
 Id="Entry 5.6.2.2.S050.1"
>
</ReqRef><StructureElement
 TypeName="Boolean"
 Default="Boolean.False"
 Mode="Internal"
 NeedsRequirement="FALSE"
 Name="NewCountry"
>
</StructureElement><StructureElement
 TypeName="Messages.NID_C"
 Default=""
 Mode="Internal"
 NeedsRequirement="FALSE"
 Name="NID_C"
>
</StructureElement><StructureElement
 TypeName="Messages.NID_BG"
 Default=""
 Mode="Internal"
 NeedsRequirement="FALSE"
 Name="NID_BG"
>
</StructureElement></Structure></Structures>
<Collections>
<Collection
 TypeName="Kernel.EmergencyStop"
 Default="[]"
 Implemented="TRUE"
 Name="EmergencyStops"
>
<ReqRef
 Id="3.10.2.1"
>
<Comment></Comment>
</ReqRef><ReqRef
 Id="3.10.3.1"
>
</ReqRef><Comment>Represents the set of received emergency stops (conditional or unconditional).</Comment>
</Collection><Collection
 TypeName="BaliseGroup"
 MaxSize="20"
 Default="[]"
 Implemented="TRUE"
 Name="BaliseGroups"
>
<ReqRef
 Id="Entry 5.6.2.2.S050.1"
>
</ReqRef></Collection></Collections>
<StateMachines>
<StateMachine
 InitialState="NoProcedure"
 NeedsRequirement="FALSE"
 Name="HandleModeChangeSM"
>
<ReqRef
 Id="5.5.2.2.1.1"
>
</ReqRef><Comment></Comment>
<States>
<State
 X="30"
 Y="600"
 Width="1020"
 Height="50"
 Name="NoProcedure"
>
<StateMachine
 InitialState=""
 NeedsRequirement="FALSE"
>
<Rules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="StartOfMission Initiation"
>
<ReqRef
 Id="Entry 5.4.3.2.S0"
>
</ReqRef><ReqRef
 Id="5.12.2.4"
>
</ReqRef><ReqRef
 Id="5.12.3.4.3"
>
</ReqRef><SubRules></SubRules>
<Conditions>
<RuleCondition
 NeedsRequirement="FALSE"
 Name="StartOfMission Initiation"
>
<PreConditions>
<PreCondition>Kernel.Mode == Mode.SB</PreCondition><PreCondition>(DMI.MasterDMI()).DeskOpen == True</PreCondition><PreCondition>EURORADIO.SessionState == SessionState.Closed</PreCondition></PreConditions>
<Actions>
<Action>THIS &lt;- HandleModeChange.StartOfMission</Action><Action>DMI.MasterDMI().DisplayErtmsEtcsMode()</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="ShuntingInitiatedByDriver Initiation"
>
<ReqRef
 Id="Entry 5.6.2.2.E015"
>
</ReqRef><ReqRef
 Id="Entry 5.6.2.2.E015.1"
>
</ReqRef><SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Launch ShuntingInitiatedByDriver"
>
<PreConditions>
<PreCondition>Kernel.Mode in [Mode.FS, Mode.LS, Mode.OS, Mode.SR, Mode.SN, Mode.UN]</PreCondition><PreCondition>Odometry.EstimatedSpeed == 0.0</PreCondition><PreCondition>DMI.MasterDMI().In_ShuntingRequest.InputInformation.RequestStatus == Request.Response</PreCondition></PreConditions>
<Actions>
<Action>HandleModeChange &lt;- HandleModeChange.ShuntingInitiatedByDriver</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</StateMachine></State><State
 X="730"
 Y="160"
 Width="310"
 Height="50"
 NeedsRequirement="FALSE"
 Name="StartOfMission"
>
<ReqRef
 Id="5.4"
>
</ReqRef><StateMachine
 InitialState="S0"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
>
<States>
<State
 X="1150"
 Y="50"
 Width="100"
 Height="50"
 NeedsRequirement="FALSE"
 Name="A31"
>
<StateMachine
 InitialState="OpenRBCSession"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
>
<Rules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="A31"
>
<ReqRef
 Id="Entry 5.4.3.2.A31"
>
</ReqRef><SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Open session with RBC"
>
<ReqRef
 Id="3.5.3.4.a"
>
</ReqRef><PreConditions>
</PreConditions>
<Actions>
<Action>EURORADIO.OpenRBCSession()</Action><Action>THIS &lt;- HandleModeChange.StartOfMission.D31</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</StateMachine></State><State
 X="1400"
 Y="690"
 Width="100"
 Height="50"
 NeedsRequirement="FALSE"
 Name="A39"
>
<StateMachine
 InitialState=""
 Implemented="TRUE"
 NeedsRequirement="FALSE"
>
<Rules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="A39"
>
<ReqRef
 Id="Entry 5.4.3.2.A39"
>
</ReqRef><ReqRef
 Id="Entry 5.4.3.3.18"
>
</ReqRef><ReqRef
 Id="3.5.5.1.3"
>
</ReqRef><SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Delete train position data and close the session with the RBC"
>
<PreConditions>
</PreConditions>
<Actions>
<Action>EURORADIO.CloseRBCSession()</Action><Action>Kernel.TrainPosition.Position.DataState &lt;- DataState.Unknown</Action><Action>THIS &lt;- HandleModeChange.StartOfMission.A40</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</StateMachine></State><State
 X="1150"
 Y="150"
 Width="100"
 Height="50"
 NeedsRequirement="FALSE"
 Name="D31"
>
<StateMachine
 InitialState=""
 Implemented="TRUE"
 NeedsRequirement="FALSE"
>
<Rules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="D31"
>
<ReqRef
 Id="Entry 5.4.3.2.D31"
>
</ReqRef><SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="D31"
>
<PreConditions>
<PreCondition>EURORADIO.RequestOpenRbcSession.RequestState == Request.Response</PreCondition></PreConditions>
<Actions>
<Action>EURORADIO.RequestOpenRbcSession.RequestState &lt;- Request.Disabled</Action><Action>EURORADIO.SessionState &lt;- EURORADIO.RequestOpenRbcSession.SessionState</Action></Actions>
<SubRules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="Branch based on the session establishment"
>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Session established"
>
<ReqRef
 Id="Entry 5.4.3.3.14"
>
</ReqRef><ReqRef
 Id="Entry 5.4.3.3.15"
>
</ReqRef><PreConditions>
<PreCondition>EURORADIO.RequestOpenRbcSession.SessionState == SessionState.Established</PreCondition></PreConditions>
<Actions>
<Action>THIS &lt;- HandleModeChange.StartOfMission.D32</Action><Action>EURORADIO.CurrentRadioSession.SessionInfo.DataState &lt;- DataState.Valid</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Session establishment failure"
>
<PreConditions>
</PreConditions>
<Actions>
<Action>THIS &lt;- HandleModeChange.StartOfMission.A32</Action></Actions>
</RuleCondition></Conditions>
</Rule></SubRules>
</RuleCondition></Conditions>
</Rule></Rules>
</StateMachine></State><State
 X="1140"
 Y="260"
 Width="100"
 Height="50"
 NeedsRequirement="FALSE"
 Name="D32"
>
<StateMachine
 InitialState=""
 Implemented="TRUE"
 NeedsRequirement="FALSE"
>
<Rules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="D32"
>
<ReqRef
 Id="Entry 5.4.3.2.D32"
>
</ReqRef><SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="D32"
>
<PreConditions>
</PreConditions>
<Actions>
</Actions>
<SubRules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="Train position data valid"
>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Train position data valid"
>
<PreConditions>
<PreCondition>Kernel.TrainPosition.Position.DataState == DataState.Valid</PreCondition></PreConditions>
<Actions>
<Action>THIS &lt;- HandleModeChange.StartOfMission.A33</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="Train position data invalid"
>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Train position data invalid"
>
<PreConditions>
<PreCondition>Kernel.TrainPosition.Position.DataState == DataState.Invalid</PreCondition></PreConditions>
<Actions>
<Action>THIS &lt;- HandleModeChange.StartOfMission.A34</Action></Actions>
</RuleCondition></Conditions>
</Rule></SubRules>
</RuleCondition></Conditions>
</Rule></Rules>
</StateMachine></State><State
 X="10"
 Y="10"
 Width="100"
 Height="50"
 NeedsRequirement="FALSE"
 Name="S0"
>
<StateMachine
 InitialState=""
 Implemented="TRUE"
 NeedsRequirement="FALSE"
>
<Rules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="S0"
>
<ReqRef
 Id="Entry 5.4.3.2.S0"
>
</ReqRef><SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="S0"
>
<PreConditions>
</PreConditions>
<Actions>
<Action>THIS &lt;- HandleModeChange.StartOfMission.S1</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</StateMachine></State><State
 X="10"
 Y="100"
 Width="100"
 Height="50"
 NeedsRequirement="FALSE"
 Name="S1"
>
<StateMachine
 InitialState="AskDriverId"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
>
<States>
<State
 X="190"
 Y="70"
 Width="150"
 Height="50"
 Implemented="TRUE"
 Name="AskDriverId"
>
<ReqRef
 Id="Entry 5.4.3.2.S1.1"
>
</ReqRef><ReqRef
 Id="Entry 5.4.3.2.S1.2"
>
</ReqRef><StateMachine
 InitialState=""
 Implemented="TRUE"
 NeedsRequirement="FALSE"
>
<Rules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Ask Driver Id and possibly train running number"
>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Ask Driver Id and possibly train running number"
>
<PreConditions>
</PreConditions>
<Actions>
<Action>THIS &lt;- HandleModeChange.StartOfMission.S1.DriverIdAsked</Action></Actions>
<SubRules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="Invalid or Unknown train running number"
>
<ReqRef
 Id="Entry 5.4.3.2.S1.2"
>
</ReqRef><SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Invalid or Unknown train running number"
>
<PreConditions>
<PreCondition>Kernel.TrainRunningNumber.DataState in [DataState.Invalid, DataState.Unknown]</PreCondition></PreConditions>
<Actions>
</Actions>
<SubRules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="Unknown train running number"
>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Unknown train running number"
>
<PreConditions>
<PreCondition>Kernel.TrainRunningNumber.DataState == DataState.Unknown</PreCondition></PreConditions>
<Actions>
<Action>DMI.MasterDMI().InitiateTrainRunningNumberRequest(
  Number =&gt; Kernel.TrainRunningNumber.Value, 
  Enter =&gt; True, 
  ReValidate =&gt; False
)</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="Invalid train running number"
>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Invalid train running number"
>
<PreConditions>
<PreCondition>Kernel.TrainRunningNumber.DataState == DataState.Invalid</PreCondition></PreConditions>
<Actions>
<Action>DMI.MasterDMI().InitiateTrainRunningNumberRequest(
  Number =&gt; Kernel.TrainRunningNumber.Value, 
  Enter =&gt; True, 
  ReValidate =&gt; True
)</Action></Actions>
</RuleCondition></Conditions>
</Rule></SubRules>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="Invalid or Unknown driver ID"
>
<ReqRef
 Id="Entry 5.4.3.2.S1.1"
>
</ReqRef><SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Invalid or Unknown driver ID"
>
<PreConditions>
<PreCondition>Kernel.DriverId.DataState in [DataState.Invalid, DataState.Unknown]</PreCondition></PreConditions>
<Actions>
</Actions>
<SubRules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="Invalid driver ID"
>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Invalid driver ID"
>
<PreConditions>
<PreCondition>Kernel.DriverId.DataState == DataState.Invalid</PreCondition></PreConditions>
<Actions>
<Action>DMI.MasterDMI().InitiateDriverIdRequest(
  Id =&gt; Kernel.DriverId.Value, 
  Enter =&gt; True, 
  ReValidate =&gt; True
)</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="Unknown driver ID"
>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Unknown driver ID"
>
<PreConditions>
<PreCondition>Kernel.DriverId.DataState == DataState.Unknown</PreCondition></PreConditions>
<Actions>
<Action>DMI.MasterDMI().InitiateDriverIdRequest(
  Id =&gt; Kernel.DriverId.Value, 
  Enter =&gt; True, 
  ReValidate =&gt; False
)</Action></Actions>
</RuleCondition></Conditions>
</Rule></SubRules>
</RuleCondition></Conditions>
</Rule></SubRules>
</RuleCondition></Conditions>
</Rule></Rules>
</StateMachine></State><State
 X="190"
 Y="200"
 Width="150"
 Height="50"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="DriverIdAsked"
>
<StateMachine
 InitialState=""
 Implemented="TRUE"
 NeedsRequirement="FALSE"
>
<Rules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="Receive Driver Id"
>
<ReqRef
 Id="Entry 5.4.3.3.2"
>
</ReqRef><ReqRef
 Id="Entry 5.4.3.3.3"
>
</ReqRef><SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Receive Driver Id"
>
<PreConditions>
<PreCondition>DMI.MasterDMI().In_DriverId.InputInformation.RequestStatus == Request.Response</PreCondition></PreConditions>
<Actions>
<Action>Kernel.DriverId.Value &lt;- DMI.MasterDMI().In_DriverId.Id</Action><Action>Kernel.DriverId.DataState &lt;- DataState.Valid</Action><Action>DMI.MasterDMI().In_DriverId.InputInformation.RequestStatus &lt;- Request.Disabled</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="Receive Train running number"
>
<ReqRef
 Id="Entry 5.4.3.3.4"
>
</ReqRef><ReqRef
 Id="Entry 5.4.3.3.5"
>
</ReqRef><SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Receive Train running number"
>
<PreConditions>
<PreCondition>DMI.MasterDMI().In_TrainRunningNumber.InputInformation.RequestStatus == Request.Response</PreCondition></PreConditions>
<Actions>
<Action>Kernel.TrainRunningNumber.Value &lt;- DMI.MasterDMI().In_TrainRunningNumber.Number</Action><Action>Kernel.TrainRunningNumber.DataState &lt;- DataState.Valid</Action><Action>DMI.MasterDMI().In_TrainRunningNumber.InputInformation.RequestStatus &lt;- Request.Disabled</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</StateMachine></State></States>
<Rules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="E1 : Valid ID &amp; Train running number"
>
<ReqRef
 Id="Entry 5.4.3.2.S1.3"
>
</ReqRef><SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="E1 : Valid ID &amp; Train running number"
>
<PreConditions>
<PreCondition>Kernel.DriverId.DataState == DataState.Valid</PreCondition><PreCondition>Kernel.TrainRunningNumber.DataState == DataState.Valid</PreCondition></PreConditions>
<Actions>
<Action>THIS &lt;- HandleModeChange.StartOfMission.D2</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</StateMachine></State><State
 X="10"
 Y="300"
 Width="100"
 Height="50"
 NeedsRequirement="FALSE"
 Name="S2"
>
<StateMachine
 InitialState="SelectLevelAndOfferInhibitionPossibility"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
>
<States>
<State
 X="80"
 Y="170"
 Width="140"
 Height="50"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="InhibitionPossibilityAndLevelSelectionOffered"
>
<StateMachine
 InitialState=""
 Implemented="TRUE"
 NeedsRequirement="FALSE"
>
<Rules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="Driver has selected a level"
>
<ReqRef
 Id="Entry 5.4.3.3.10"
>
</ReqRef><ReqRef
 Id="Entry 5.4.3.3.9"
>
</ReqRef><SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Driver has selected a level"
>
<PreConditions>
<PreCondition>DMI.MasterDMI().In_ErtmsEtcsLevel.InputInformation.RequestStatus == Default.Request.Response</PreCondition></PreConditions>
<Actions>
<Action>THIS &lt;- HandleModeChange.StartOfMission.S2.ExitState</Action><Action>Kernel.Level.DataState &lt;- DataState.Valid</Action><Action>Kernel.Level.Value &lt;- DMI.MasterDMI().In_ErtmsEtcsLevel.Level</Action><Action>DMI.MasterDMI().In_ErtmsEtcsLevel.InputInformation.RequestStatus &lt;- Default.Request.Disabled</Action><Action>DMI.MasterDMI().In_LevelInhibition.InputInformation.RequestStatus &lt;- Default.Request.Disabled</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="Driver has selected inhibition"
>
<ReqRef
 Id="Entry 5.4.3.2.S2.1"
>
</ReqRef><SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Driver has selected inhibition"
>
<PreConditions>
<PreCondition>DMI.MasterDMI().In_LevelInhibition.InputInformation.RequestStatus == Request.Response</PreCondition></PreConditions>
<Actions>
<Action>THIS &lt;- HandleModeChange.StartOfMission.S2.SelectLevel</Action><Action>Kernel.InhibitedLevels.Levels &lt;- DMI.MasterDMI().In_LevelInhibition.InhibitedLevels</Action><Action>DMI.MasterDMI().In_LevelInhibition.InputInformation.RequestStatus &lt;- Request.Disabled</Action><Action>DMI.MasterDMI().In_ErtmsEtcsLevel.InputInformation.RequestStatus &lt;- Default.Request.Disabled</Action></Actions>
<SubRules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="Inhibition active"
>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Inhibition active"
>
<ReqRef
 Id="Entry 5.4.3.3.8"
>
</ReqRef><PreConditions>
<PreCondition>THERE_IS_IN DMI.MasterDMI().In_LevelInhibition.InhibitedLevels | X == Kernel.Level.Value</PreCondition></PreConditions>
<Actions>
<Action>Kernel.Level.DataState &lt;- DataState.Unknown</Action></Actions>
</RuleCondition></Conditions>
</Rule></SubRules>
</RuleCondition></Conditions>
</Rule></Rules>
</StateMachine></State><State
 X="80"
 Y="280"
 Width="140"
 Height="50"
 Implemented="TRUE"
 Name="SelectLevel"
>
<ReqRef
 Id="Entry 5.4.3.2.S2.2"
>
</ReqRef><ReqRef
 Id="Entry 5.4.3.2.S2.3"
>
</ReqRef><StateMachine
 InitialState=""
 Implemented="TRUE"
 NeedsRequirement="FALSE"
>
<Rules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="Invalid level"
>
<ReqRef
 Id="Entry 5.4.3.2.S2.3"
>
</ReqRef><SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Invalid level"
>
<PreConditions>
<PreCondition>Kernel.Level.DataState == DataState.Invalid</PreCondition></PreConditions>
<Actions>
<Action>THIS &lt;- HandleModeChange.StartOfMission.S2.LevelSelectionOffered</Action><Action>DMI.MasterDMI().InitiateLevelRequest(
  Level =&gt; Kernel.Level.Value, 
  Enter =&gt; True, 
  ReValidate =&gt; True
)</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="Unknown level"
>
<ReqRef
 Id="Entry 5.4.3.2.S2.2"
>
</ReqRef><SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Unknown level"
>
<PreConditions>
<PreCondition>Kernel.Level.DataState == DataState.Unknown</PreCondition></PreConditions>
<Actions>
<Action>THIS &lt;- HandleModeChange.StartOfMission.S2.LevelSelectionOffered</Action><Action>DMI.MasterDMI().InitiateLevelRequest(
  Level =&gt; Level.Unknown, 
  Enter =&gt; True, 
  ReValidate =&gt; False
)</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="Valid level"
>
<ReqRef
 Id="Entry 5.4.3.2.S2.2"
>
</ReqRef><ReqRef
 Id="Entry 5.4.3.2.S2.3"
>
</ReqRef><SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Valid level"
>
<PreConditions>
<PreCondition>Kernel.Level.DataState == DataState.Valid</PreCondition></PreConditions>
<Actions>
<Action>THIS &lt;- HandleModeChange.StartOfMission.S2.ExitState</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</StateMachine></State><State
 X="80"
 Y="390"
 Width="140"
 Height="50"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="LevelSelectionOffered"
>
<StateMachine
 InitialState=""
 Implemented="TRUE"
 NeedsRequirement="FALSE"
>
<ReqRef
 Id="Entry 5.4.3.3.9"
>
</ReqRef><ReqRef
 Id="Entry 5.4.3.3.10"
>
</ReqRef><Rules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="Driver has selected a level"
>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Driver has selected a level"
>
<PreConditions>
<PreCondition>DMI.MasterDMI().In_ErtmsEtcsLevel.InputInformation.RequestStatus == Default.Request.Response</PreCondition></PreConditions>
<Actions>
<Action>THIS &lt;- HandleModeChange.StartOfMission.S2.ExitState</Action><Action>Kernel.Level.DataState &lt;- DataState.Valid</Action><Action>Kernel.Level.Value &lt;- DMI.MasterDMI().In_ErtmsEtcsLevel.Level</Action><Action>DMI.MasterDMI().In_ErtmsEtcsLevel.InputInformation.RequestStatus &lt;- Default.Request.Disabled</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</StateMachine></State><State
 X="390"
 Y="280"
 Width="140"
 Height="50"
 Implemented="TRUE"
 Name="ExitState"
>
<ReqRef
 Id="Entry 5.4.3.2.S2.5"
>
</ReqRef><StateMachine
 InitialState=""
 Implemented="TRUE"
 NeedsRequirement="FALSE"
>
<Rules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="Exit state"
>
<ReqRef
 Id="Entry 5.4.3.2.S2.5"
>
</ReqRef><SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Exit state"
>
<PreConditions>
</PreConditions>
<Actions>
</Actions>
<SubRules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="Level 2 or 3"
>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Level 2 or 3"
>
<PreConditions>
<PreCondition>Kernel.Level.Value in [Level.L2, Level.L3]</PreCondition></PreConditions>
<Actions>
<Action>THIS &lt;- HandleModeChange.StartOfMission.S3</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="Level 0, 1 or LNTC"
>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Level 0, 1 or LNTC"
>
<PreConditions>
<PreCondition>Kernel.Level.Value in [Level.L0, Level.L1, Level.LNTC]</PreCondition></PreConditions>
<Actions>
<Action>THIS &lt;- HandleModeChange.StartOfMission.S10</Action></Actions>
</RuleCondition></Conditions>
</Rule></SubRules>
</RuleCondition></Conditions>
</Rule></Rules>
</StateMachine></State><State
 X="80"
 Y="60"
 Width="140"
 Height="50"
 Implemented="TRUE"
 Name="SelectLevelAndOfferInhibitionPossibility"
>
<ReqRef
 Id="Entry 5.4.3.2.S2"
>
</ReqRef><StateMachine
 InitialState=""
 NeedsRequirement="FALSE"
>
<Rules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Select level and offer inhibition possibility"
>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="SelectLevel"
>
<PreConditions>
</PreConditions>
<Actions>
</Actions>
<SubRules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="Unknown level"
>
<ReqRef
 Id="Entry 5.4.3.2.S2.2"
>
</ReqRef><SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Unknown level"
>
<PreConditions>
<PreCondition>Kernel.Level.DataState == DataState.Unknown</PreCondition></PreConditions>
<Actions>
<Action>THIS &lt;- HandleModeChange.StartOfMission.S2.InhibitionPossibilityAndLevelSelectionOffered</Action><Action>DMI.MasterDMI().InitiateLevelRequest(
  Level =&gt; Level.Unknown, 
  Enter =&gt; True, 
  ReValidate =&gt; False
)</Action><Action>DMI.MasterDMI().InitiateLevelInhibitionRequest(
  InhibitLevel =&gt; True, 
  RemoveExistingInhibition =&gt; False
)</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="Invalid level"
>
<ReqRef
 Id="Entry 5.4.3.2.S2.3"
>
</ReqRef><SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Invalid level"
>
<PreConditions>
<PreCondition>Kernel.Level.DataState == DataState.Invalid</PreCondition></PreConditions>
<Actions>
<Action>THIS &lt;- HandleModeChange.StartOfMission.S2.InhibitionPossibilityAndLevelSelectionOffered</Action><Action>DMI.MasterDMI().InitiateLevelRequest(
  Level =&gt; Kernel.Level.Value, 
  Enter =&gt; True, 
  ReValidate =&gt; True
)</Action><Action>DMI.MasterDMI().InitiateLevelInhibitionRequest(
  InhibitLevel =&gt; True, 
  RemoveExistingInhibition =&gt; False
)</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="Valid level"
>
<ReqRef
 Id="Entry 5.4.3.2.S2.2"
>
</ReqRef><ReqRef
 Id="Entry 5.4.3.2.S2.3"
>
</ReqRef><SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Valid level"
>
<PreConditions>
<PreCondition>Kernel.Level.DataState == DataState.Valid</PreCondition></PreConditions>
<Actions>
<Action>THIS &lt;- HandleModeChange.StartOfMission.S2.ExitState</Action></Actions>
</RuleCondition></Conditions>
</Rule></SubRules>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="Offer inhibition possibility"
>
<ReqRef
 Id="Entry 5.4.3.2.S2"
>
</ReqRef><SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Offer inhibition possibility"
>
<PreConditions>
</PreConditions>
<Actions>
<Action>DMI.MasterDMI().InitiateLevelInhibitionRequest(
  InhibitLevel =&gt; True, 
  RemoveExistingInhibition =&gt; True
)</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</StateMachine></State></States>
</StateMachine></State><State
 X="280"
 Y="310"
 Width="100"
 Height="50"
 NeedsRequirement="FALSE"
 Name="S3"
>
<StateMachine
 InitialState="InitialState"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
>
<States>
<State
 X="70"
 Y="180"
 Width="300"
 Height="50"
 Implemented="TRUE"
 Name="ReceiveNetworkIDs"
>
<ReqRef
 Id="Entry 5.4.3.2.S3.1"
>
</ReqRef><StateMachine
 InitialState=""
 Implemented="TRUE"
 NeedsRequirement="FALSE"
>
<Rules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="OfferChangeNetworkID"
>
<ReqRef
 Id="Entry 5.4.3.2.S3.1"
>
</ReqRef><SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="OfferChangeNetworkID"
>
<PreConditions>
<PreCondition>EURORADIO.AcquireListOfAvailableNetworks.RequestState == Default.Request.Response</PreCondition></PreConditions>
<Actions>
<Action>EURORADIO.AcquireListOfAvailableNetworks.RequestState &lt;- Default.Request.Disabled</Action></Actions>
<SubRules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="E3"
>
<ReqRef
 Id="Entry 5.4.3.2.S3.1.1"
>
</ReqRef><SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="E3"
>
<PreConditions>
<PreCondition>EURORADIO.AcquireListOfAvailableNetworks.NetworkIDs == []</PreCondition></PreConditions>
<Actions>
<Action>THIS &lt;- HandleModeChange.StartOfMission.A29</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="List not empty"
>
<ReqRef
 Id="Entry 5.4.3.2.S3.1.2"
>
</ReqRef><SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="List not empty"
>
<PreConditions>
<PreCondition>EURORADIO.AcquireListOfAvailableNetworks.NetworkIDs != []</PreCondition></PreConditions>
<Actions>
<Action>THIS &lt;- HandleModeChange.StartOfMission.S3.RadioNetworkIdchangeOffered</Action><Action>DMI.MasterDMI().SelectNetworkId(EURORADIO.AcquireListOfAvailableNetworks.NetworkIDs)</Action></Actions>
</RuleCondition></Conditions>
</Rule></SubRules>
</RuleCondition></Conditions>
</Rule></Rules>
</StateMachine></State><State
 X="70"
 Y="300"
 Width="300"
 Height="50"
 Implemented="TRUE"
 Name="RadioNetworkIdchangeOffered"
>
<ReqRef
 Id="Entry 5.4.3.2.S3.1.2"
>
</ReqRef><StateMachine
 InitialState=""
 Implemented="TRUE"
 NeedsRequirement="FALSE"
>
<Rules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="ReceiveNetworkIDResponse"
>
<ReqRef
 Id="Entry 5.4.3.2.S3.1.2"
>
</ReqRef><ReqRef
 Id="Entry 5.4.3.3.11"
>
</ReqRef><SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="ReceiveNetworkIDResponse"
>
<PreConditions>
<PreCondition>DMI.MasterDMI().In_RBCContactInformationRadioNetworkId.InputInformation.RequestStatus == Request.Response</PreCondition></PreConditions>
<Actions>
<Action>THIS &lt;- HandleModeChange.StartOfMission.S3.RegisteringMobileTerminal</Action><Action>DMI.MasterDMI().In_RBCContactInformationRadioNetworkId.InputInformation.RequestStatus &lt;- Request.Disabled</Action></Actions>
<SubRules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="Change"
>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Change"
>
<PreConditions>
<PreCondition>DMI.MasterDMI().In_RBCContactInformationRadioNetworkId.DriverChangedNetworkId</PreCondition></PreConditions>
<Actions>
<Action>EURORADIO.NetworkID &lt;- DMI.MasterDMI().In_RBCContactInformationRadioNetworkId.SelectedID</Action><Action>EURORADIO.CurrentRadioSession.SessionInfo.DataState &lt;- DataState.Unknown</Action><Action>EURORADIO.RegisterMobileTerminal &lt;- EURORADIO.RegisterMobileTerminal.Registering</Action></Actions>
</RuleCondition></Conditions>
</Rule></SubRules>
</RuleCondition></Conditions>
</Rule></Rules>
</StateMachine></State><State
 X="510"
 Y="490"
 Width="300"
 Height="50"
 Implemented="TRUE"
 Name="OfferChangeRBCID"
>
<ReqRef
 Id="Entry 5.4.3.2.S3.2"
>
</ReqRef><StateMachine
 InitialState=""
 Implemented="TRUE"
 NeedsRequirement="FALSE"
>
<Rules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="OfferChangeRBCID"
>
<ReqRef
 Id="Entry 5.4.3.2.S3.2"
>
</ReqRef><SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="OfferChangeRBCID"
>
<PreConditions>
<PreCondition>EURORADIO.MobileTerminalRegisteredToNetwork == Boolean.True</PreCondition></PreConditions>
<Actions>
<Action>THIS &lt;- HandleModeChange.StartOfMission.S3.ChangeRBCIDOffered</Action></Actions>
<SubRules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="Valid RBCID"
>
<ReqRef
 Id="Entry 5.4.3.2.S3.2.2"
>
</ReqRef><SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Valid RBCID"
>
<PreConditions>
<PreCondition>EURORADIO.CurrentRadioSession.SessionInfo.DataState == DataState.Valid</PreCondition></PreConditions>
<Actions>
<Action>DMI.MasterDMI().InitiateRBCIdOrPhoneNumberRequest(
  Id =&gt; EURORADIO.CurrentRadioSession.SessionInfo.RBCIdOrPhoneNumber.Id, 
  PhoneNumber =&gt; EURORADIO.CurrentRadioSession.SessionInfo.RBCIdOrPhoneNumber.PhoneNumber, 
  Enter =&gt; False, 
  ReEnter =&gt; False, 
  UseEirene =&gt; True,
  UseLastStored =&gt; False
)</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="Unknown RBCID"
>
<ReqRef
 Id="Entry 5.4.3.2.S3.2.2"
>
</ReqRef><ReqRef
 Id="Entry 5.4.3.2.S3.2.3"
>
</ReqRef><SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Unknown RBCID"
>
<PreConditions>
<PreCondition>EURORADIO.CurrentRadioSession.SessionInfo.DataState == DataState.Unknown</PreCondition></PreConditions>
<Actions>
<Action>DMI.MasterDMI().InitiateRBCIdOrPhoneNumberRequest(
  Id =&gt; EURORADIO.CurrentRadioSession.SessionInfo.RBCIdOrPhoneNumber.Id, 
  PhoneNumber =&gt; EURORADIO.CurrentRadioSession.SessionInfo.RBCIdOrPhoneNumber.PhoneNumber, 
  Enter =&gt; True, 
  ReEnter =&gt; False, 
  UseEirene =&gt; True, 
  UseLastStored =&gt; False
)</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="Invalid RBCID"
>
<ReqRef
 Id="Entry 5.4.3.2.S3.2.1"
>
</ReqRef><ReqRef
 Id="Entry 5.4.3.2.S3.2.2"
>
</ReqRef><ReqRef
 Id="Entry 5.4.3.2.S3.2.3"
>
</ReqRef><SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Invalid RBCID"
>
<PreConditions>
<PreCondition>EURORADIO.CurrentRadioSession.SessionInfo.DataState == DataState.Invalid</PreCondition></PreConditions>
<Actions>
<Action>DMI.MasterDMI().InitiateRBCIdOrPhoneNumberRequest(
  Id =&gt; EURORADIO.CurrentRadioSession.SessionInfo.RBCIdOrPhoneNumber.Id, 
  PhoneNumber =&gt; EURORADIO.CurrentRadioSession.SessionInfo.RBCIdOrPhoneNumber.PhoneNumber, 
  Enter =&gt; False, 
  ReEnter =&gt; True, 
  UseEirene =&gt; True, 
  UseLastStored =&gt; True
)</Action></Actions>
</RuleCondition></Conditions>
</Rule></SubRules>
</RuleCondition></Conditions>
</Rule></Rules>
</StateMachine></State><State
 X="510"
 Y="590"
 Width="300"
 Height="50"
 Implemented="TRUE"
 Name="ChangeRBCIDOffered"
>
<ReqRef
 Id="Entry 5.4.3.2.S3.3"
>
</ReqRef><StateMachine
 InitialState=""
 Implemented="TRUE"
 NeedsRequirement="FALSE"
>
<Rules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="ReceiveRBCIDResponse"
>
<ReqRef
 Id="Entry 5.4.3.2.S3.3"
>
</ReqRef><SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="ReceiveRBCIDResponse"
>
<PreConditions>
<PreCondition>DMI.MasterDMI().In_RBCContactInformationRBCIdOrPhoneNumber.InputInformation.RequestStatus == Request.Response</PreCondition></PreConditions>
<Actions>
<Action>THIS &lt;- HandleModeChange.StartOfMission.S3.ExitState</Action><Action>DMI.MasterDMI().In_RBCContactInformationRBCIdOrPhoneNumber.InputInformation.RequestStatus &lt;- Request.Disabled</Action></Actions>
<SubRules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="RBC Id Changed"
>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="RBC Id Changed"
>
<ReqRef
 Id="Entry 5.4.3.3.11"
>
</ReqRef><ReqRef
 Id="Entry 5.4.3.3.12"
>
</ReqRef><PreConditions>
<PreCondition>DMI.MasterDMI().In_RBCContactInformationRBCIdOrPhoneNumber.DriverChangedId</PreCondition></PreConditions>
<Actions>
<Action>EURORADIO.CurrentRadioSession.SessionInfo.RBCIdOrPhoneNumber.Id &lt;- DMI.MasterDMI().In_RBCContactInformationRBCIdOrPhoneNumber.RBCContactInformation.RBCIdOrPhoneNumber.Id</Action><Action>EURORADIO.CurrentRadioSession.SessionInfo.DataState &lt;- DataState.Valid</Action><Action>EURORADIO.CurrentRadioSession.SessionInfo.RBCIdOrPhoneNumber.PhoneNumber &lt;- DMI.MasterDMI().In_RBCContactInformationRBCIdOrPhoneNumber.RBCContactInformation.RBCIdOrPhoneNumber.PhoneNumber</Action></Actions>
</RuleCondition></Conditions>
</Rule></SubRules>
</RuleCondition></Conditions>
</Rule></Rules>
</StateMachine></State><State
 X="510"
 Y="690"
 Width="300"
 Height="50"
 Implemented="TRUE"
 Name="ExitState"
>
<ReqRef
 Id="Entry 5.4.3.2.S3.3"
>
</ReqRef><StateMachine
 InitialState=""
 Implemented="TRUE"
 NeedsRequirement="FALSE"
>
<Rules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="E5"
>
<ReqRef
 Id="Entry 5.4.3.2.S3.3"
>
</ReqRef><SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="E5"
>
<PreConditions>
</PreConditions>
<Actions>
<Action>THIS &lt;- HandleModeChange.StartOfMission.A31</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</StateMachine></State><State
 X="510"
 Y="120"
 Width="300"
 Height="50"
 Implemented="TRUE"
 Name="DriverResponse1"
>
<ReqRef
 Id="Entry 5.4.3.2.S3.1"
>
</ReqRef><StateMachine
 InitialState=""
 Implemented="TRUE"
 NeedsRequirement="FALSE"
>
<Rules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Acquire network IDs"
>
<ReqRef
 Id="Entry 5.4.3.2.S3.1"
>
</ReqRef><SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Acquire network IDs"
>
<PreConditions>
<PreCondition>DMI.MasterDMI().In_RBCContactInformationRadioNetworkId.InputInformation.RequestStatus == Default.Request.Response</PreCondition></PreConditions>
<Actions>
<Action>DMI.MasterDMI().In_RBCContactInformationRadioNetworkId.InputInformation.RequestStatus &lt;- Default.Request.Disabled</Action></Actions>
<SubRules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Driver elects to enter network ID"
>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Driver elects to enter network ID"
>
<PreConditions>
<PreCondition>DMI.MasterDMI().In_RBCContactInformationRadioNetworkId.DriverElectsToChangeNetworkId</PreCondition></PreConditions>
<Actions>
<Action>EURORADIO.AcquireListOfAvailableNetworks.RequestState &lt;- Default.Request.Request</Action><Action>THIS &lt;- HandleModeChange.StartOfMission.S3.ReceiveNetworkIDs</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Otherwise"
>
<PreConditions>
</PreConditions>
<Actions>
<Action>THIS &lt;- HandleModeChange.StartOfMission.S3.OfferChangeRBCID</Action></Actions>
</RuleCondition></Conditions>
</Rule></SubRules>
</RuleCondition></Conditions>
</Rule></Rules>
</StateMachine></State><State
 X="510"
 Y="30"
 Width="300"
 Height="50"
 Implemented="TRUE"
 Name="InitialState"
>
<ReqRef
 Id="Entry 5.4.3.2.S3.1"
>
</ReqRef><StateMachine
 InitialState=""
 Implemented="TRUE"
 NeedsRequirement="FALSE"
>
<Rules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="OfferReEnterNetworkID"
>
<ReqRef
 Id="Entry 5.4.3.2.S3.1"
>
</ReqRef><SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="OfferReEnterNetworkID"
>
<PreConditions>
</PreConditions>
<Actions>
<Action>THIS &lt;- HandleModeChange.StartOfMission.S3.DriverResponse1</Action><Action>DMI.MasterDMI().InitiateNetworkIdRequest()</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</StateMachine></State><State
 X="70"
 Y="410"
 Width="300"
 Height="50"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="RegisteringMobileTerminal"
>
<StateMachine
 InitialState=""
 Implemented="TRUE"
 NeedsRequirement="FALSE"
>
<Rules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Mobile terminal registered"
>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Mobile terminal registered"
>
<PreConditions>
<PreCondition>EURORADIO.MobileTerminalRegisteredToNetwork == Boolean.True</PreCondition></PreConditions>
<Actions>
<Action>THIS &lt;- HandleModeChange.StartOfMission.S3.OfferChangeRBCID</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</StateMachine></State></States>
</StateMachine></State><State
 X="700"
 Y="550"
 Width="300"
 Height="50"
 NeedsRequirement="FALSE"
 Name="S10"
>
<StateMachine
 InitialState="RequestDriverSelection"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
>
<States>
<State
 X="110"
 Y="70"
 Width="200"
 Height="50"
 Implemented="TRUE"
 Name="RequestDriverSelection"
>
<ReqRef
 Id="Entry 5.4.3.2.S10"
>
</ReqRef><StateMachine
 InitialState=""
 Implemented="TRUE"
 NeedsRequirement="FALSE"
>
<Rules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Request Driver selection"
>
<ReqRef
 Id="Entry 5.4.3.2.S10"
>
</ReqRef><SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Request Driver selection"
>
<PreConditions>
</PreConditions>
<Actions>
<Action>THIS &lt;- HandleModeChange.StartOfMission.S10.DriverSelectionRequested</Action><Action>DMI.MasterDMI().InitiateNonLeadingRequest()</Action><Action>DMI.MasterDMI().InitiateShuntingRequest()</Action><Action>DMI.MasterDMI().InitiateTrainDataEntryRequest()</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</StateMachine></State><State
 X="110"
 Y="220"
 Width="200"
 Height="50"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="DriverSelectionRequested"
>
<StateMachine
 InitialState=""
 Implemented="TRUE"
 NeedsRequirement="FALSE"
>
<Rules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="E11"
>
<ReqRef
 Id="Entry 5.4.3.2.S10.3"
>
</ReqRef><SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="E11: Train data entry selected by driver"
>
<PreConditions>
<PreCondition>DMI.MasterDMI().In_TrainDataEntryRequest.InputInformation.RequestStatus == Request.Response</PreCondition></PreConditions>
<Actions>
<Action>THIS &lt;- HandleModeChange.StartOfMission.S12</Action><Action>DMI.MasterDMI().In_TrainDataEntryRequest.InputInformation.RequestStatus &lt;- Request.Disabled</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="E12"
>
<ReqRef
 Id="Entry 5.4.3.2.S10.1"
>
</ReqRef><ReqRef
 Id="Entry 5.6.2.2.E015"
>
</ReqRef><ReqRef
 Id="Entry 5.6.2.2.E015.1"
>
</ReqRef><ReqRef
 Id="3.5.3.4.g"
>
</ReqRef><SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="E12: Shunting selected by driver"
>
<PreConditions>
<PreCondition>DMI.MasterDMI().In_ShuntingRequest.InputInformation.RequestStatus == Request.Response</PreCondition></PreConditions>
<Actions>
<Action>HandleModeChange &lt;- HandleModeChange.ShuntingInitiatedByDriver</Action><Action>DMI.MasterDMI().In_ShuntingRequest.InputInformation.RequestStatus &lt;- Request.Disabled</Action><Action>DMI.MasterDMI().In_NonLeadingRequest.InputInformation.RequestStatus &lt;- Request.Disabled</Action><Action>DMI.MasterDMI().In_TrainData.InputInformation.RequestStatus &lt;- Request.Disabled</Action><Action>EURORADIO.OpenRBCSession()</Action></Actions>
<SubRules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Handle train position data state"
>
<ReqRef
 Id="5.4.5.3.7.1"
>
</ReqRef><ReqRef
 Id="Entry 5.4.3.3.19"
>
</ReqRef><ReqRef
 Id="Entry 5.4.3.2.S10.4"
>
</ReqRef><SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Invalid to unknown"
>
<PreConditions>
<PreCondition>TrainPosition.Position.DataState == DataState.Invalid</PreCondition></PreConditions>
<Actions>
<Action>TrainPosition.Position.DataState &lt;- Default.DataState.Unknown</Action></Actions>
</RuleCondition></Conditions>
</Rule></SubRules>
</RuleCondition></Conditions>
</Rule></Rules>
</StateMachine></State></States>
<Rules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="Allow start"
>
<ReqRef
 Id="5.4.5.3.8"
>
</ReqRef><SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Allow start for state S10"
>
<PreConditions>
<PreCondition>Kernel.TrainData.TrainData.DataState == DataState.Valid</PreCondition></PreConditions>
<Actions>
</Actions>
<SubRules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Allow to select start"
>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Start not yet proposed to driver"
>
<PreConditions>
<PreCondition>DMI.MasterDMI().In_Start.InputInformation.RequestStatus == Request.Disabled</PreCondition></PreConditions>
<Actions>
<Action>DMI.MasterDMI().InitiateStartRequest()</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Driver selected Start"
>
<PreConditions>
<PreCondition>DMI.MasterDMI().In_Start.InputInformation.RequestStatus == Request.Response</PreCondition></PreConditions>
<Actions>
<Action>DMI.MasterDMI().In_Start.InputInformation.RequestStatus &lt;- Request.Disabled</Action></Actions>
<SubRules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Select state according to level"
>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Level 0"
>
<PreConditions>
<PreCondition>Level.Value == Level.L0</PreCondition></PreConditions>
<Actions>
<Action>THIS &lt;- S23</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Level NTC"
>
<PreConditions>
<PreCondition>Level.Value == Level.LNTC</PreCondition></PreConditions>
<Actions>
<Action>THIS &lt;- S22</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Level 1, 2 or 3"
>
<PreConditions>
<PreCondition>Level.Value in [ Level.L1, Level.L2, Level.L3 ]</PreCondition></PreConditions>
<Actions>
<Action>THIS &lt;- S24</Action></Actions>
</RuleCondition></Conditions>
</Rule></SubRules>
</RuleCondition></Conditions>
</Rule></SubRules>
</RuleCondition></Conditions>
</Rule></Rules>
</StateMachine></State><State
 X="230"
 Y="470"
 Width="100"
 Height="50"
 NeedsRequirement="FALSE"
 Name="S11"
>
<StateMachine
 InitialState="SendTrainData"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
>
<States>
<State
 X="60"
 Y="60"
 Width="200"
 Height="50"
 Implemented="TRUE"
 Name="SendTrainData"
>
<ReqRef
 Id="Entry 5.4.3.2.S11"
>
</ReqRef><StateMachine
 InitialState=""
 Implemented="TRUE"
 NeedsRequirement="FALSE"
>
<Rules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="Send train data"
>
<ReqRef
 Id="Entry 5.4.3.2.S11"
>
</ReqRef><SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Send train data"
>
<PreConditions>
</PreConditions>
<Actions>
<Action>EURORADIO.TrainData.SendTrainData()</Action><Action>THIS &lt;- HandleModeChange.StartOfMission.S11.TrainDataSent</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</StateMachine></State><State
 X="60"
 Y="170"
 Width="200"
 Height="50"
 Implemented="TRUE"
 Name="TrainDataSent"
>
<ReqRef
 Id="Entry 5.4.3.2.S11.1"
>
</ReqRef><StateMachine
 InitialState=""
 Implemented="TRUE"
 NeedsRequirement="FALSE"
>
<Rules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="E14"
>
<ReqRef
 Id="Entry 5.4.3.2.S11.1"
>
</ReqRef><SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="E14"
>
<PreConditions>
<PreCondition>Available ( EURORADIO.EuroradioMessageIn.ACKNOWLEDGEMENT_OF_TRAIN_DATA )</PreCondition></PreConditions>
<Actions>
<Action>THIS &lt;- HandleModeChange.StartOfMission.S20</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</StateMachine></State></States>
</StateMachine></State><State
 X="800"
 Y="360"
 Width="100"
 Height="50"
 NeedsRequirement="FALSE"
 Name="S13"
>
<StateMachine
 InitialState="AskTrainRunningNumber"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
>
<States>
<State
 X="110"
 Y="60"
 Width="250"
 Height="50"
 Implemented="TRUE"
 Name="AskTrainRunningNumber"
>
<ReqRef
 Id="Entry 5.4.3.2.S13"
>
</ReqRef><StateMachine
 InitialState=""
 Implemented="TRUE"
 NeedsRequirement="FALSE"
>
<Rules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Request train running number"
>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Request train running number"
>
<PreConditions>
<PreCondition>Kernel.TrainRunningNumber.DataState in [Default.DataState.Invalid, Default.DataState.Unknown]</PreCondition></PreConditions>
<Actions>
<Action>THIS &lt;- HandleModeChange.StartOfMission.S13.TrainRunningNumberAsked</Action></Actions>
<SubRules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Invalid train running number"
>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Invalid train running number"
>
<PreConditions>
<PreCondition>Kernel.TrainRunningNumber.DataState == Default.DataState.Invalid</PreCondition></PreConditions>
<Actions>
<Action>DMI.MasterDMI().InitiateTrainRunningNumberRequest(
  Number =&gt; Kernel.TrainRunningNumber.Value, 
  Enter =&gt; True, 
  ReValidate =&gt; True
)</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Unknown train running number"
>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Unknown train running number"
>
<PreConditions>
<PreCondition>Kernel.TrainRunningNumber.DataState == Default.DataState.Unknown</PreCondition></PreConditions>
<Actions>
<Action>DMI.MasterDMI().InitiateTrainRunningNumberRequest(
  Number =&gt; Kernel.TrainRunningNumber.Value, 
  Enter =&gt; True, 
  ReValidate =&gt; False
)</Action></Actions>
</RuleCondition></Conditions>
</Rule></SubRules>
</RuleCondition></Conditions>
</Rule></Rules>
</StateMachine></State><State
 X="110"
 Y="210"
 Width="250"
 Height="50"
 NeedsRequirement="FALSE"
 Name="TrainRunningNumberAsked"
>
<StateMachine
 InitialState=""
 Implemented="TRUE"
 NeedsRequirement="FALSE"
>
<Rules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Receive driver response"
>
<ReqRef
 Id="Entry 5.4.3.3.23"
>
</ReqRef><ReqRef
 Id="Entry 5.4.3.3.24"
>
</ReqRef><SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Receive driver response"
>
<PreConditions>
<PreCondition>DMI.MasterDMI().In_TrainRunningNumber.InputInformation.RequestStatus == Request.Response</PreCondition></PreConditions>
<Actions>
<Action>Kernel.TrainRunningNumber.DataState &lt;- Default.DataState.Valid</Action><Action>DMI.MasterDMI().In_TrainRunningNumber.InputInformation.RequestStatus &lt;- Request.Disabled</Action><Action>Kernel.TrainRunningNumber.Value &lt;- DMI.MasterDMI().In_TrainRunningNumber.Number</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</StateMachine></State></States>
<Rules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="E18"
>
<ReqRef
 Id="Entry 5.4.3.2.S13.1"
>
</ReqRef><SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="E18"
>
<PreConditions>
<PreCondition>Kernel.TrainRunningNumber.DataState == Default.DataState.Valid</PreCondition></PreConditions>
<Actions>
<Action>THIS &lt;- HandleModeChange.StartOfMission.D10</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</StateMachine></State><State
 X="10"
 Y="550"
 Width="600"
 Height="50"
 NeedsRequirement="FALSE"
 Name="S20"
>
<StateMachine
 InitialState="ProposeStart"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
>
<States>
<State
 X="60"
 Y="60"
 Width="200"
 Height="50"
 Implemented="TRUE"
 Name="ProposeStart"
>
<ReqRef
 Id="Entry 5.4.3.2.S20"
>
</ReqRef><StateMachine
 InitialState=""
 Implemented="TRUE"
 NeedsRequirement="FALSE"
>
<Rules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="Start proposed"
>
<ReqRef
 Id="Entry 5.4.3.2.S20"
>
</ReqRef><SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Start proposed"
>
<PreConditions>
</PreConditions>
<Actions>
<Action>DMI.MasterDMI().InitiateStartRequest()</Action><Action>THIS &lt;- HandleModeChange.StartOfMission.S20.StartProposed</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</StateMachine></State><State
 X="60"
 Y="180"
 Width="200"
 Height="50"
 Implemented="TRUE"
 Name="StartProposed"
>
<ReqRef
 Id="Entry 5.4.3.2.S20.1"
>
</ReqRef><ReqRef
 Id="Entry 5.4.3.2.S20.2"
>
</ReqRef><ReqRef
 Id="Entry 5.4.3.2.S20.3"
>
</ReqRef><ReqRef
 Id="Entry 5.4.3.2.S20.4"
>
</ReqRef><StateMachine
 InitialState=""
 Implemented="TRUE"
 NeedsRequirement="FALSE"
>
<Rules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="E20"
>
<ReqRef
 Id="Entry 5.4.3.2.S20.1"
>
</ReqRef><SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="E20"
>
<PreConditions>
<PreCondition>Kernel.Level.Value == Level.LNTC</PreCondition><PreCondition>DMI.MasterDMI().In_Start.InputInformation.RequestStatus == Request.Response</PreCondition></PreConditions>
<Actions>
<Action>THIS &lt;- HandleModeChange.StartOfMission.S22</Action><Action>DMI.MasterDMI().In_Start.InputInformation.RequestStatus &lt;- Request.Disabled</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="E21"
>
<ReqRef
 Id="Entry 5.4.3.2.S20.2"
>
</ReqRef><SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="E21"
>
<PreConditions>
<PreCondition>Kernel.Level.Value == Level.L0</PreCondition><PreCondition>DMI.MasterDMI().In_Start.InputInformation.RequestStatus == Request.Response</PreCondition></PreConditions>
<Actions>
<Action>THIS &lt;- HandleModeChange.StartOfMission.S23</Action><Action>DMI.MasterDMI().In_Start.InputInformation.RequestStatus &lt;- Request.Disabled</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="E22"
>
<ReqRef
 Id="Entry 5.4.3.2.S20.3"
>
</ReqRef><SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="E22"
>
<PreConditions>
<PreCondition>Kernel.Level.Value == Level.L1</PreCondition><PreCondition>DMI.MasterDMI().In_Start.InputInformation.RequestStatus == Request.Response</PreCondition></PreConditions>
<Actions>
<Action>THIS &lt;- HandleModeChange.StartOfMission.S24</Action><Action>DMI.MasterDMI().In_Start.InputInformation.RequestStatus &lt;- Request.Disabled</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="E24"
>
<ReqRef
 Id="Entry 5.4.3.2.S20.4"
>
</ReqRef><SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="E24"
>
<PreConditions>
<PreCondition>Kernel.Level.Value in [Level.L2, Level.L3]</PreCondition><PreCondition>DMI.MasterDMI().In_Start.InputInformation.RequestStatus == Request.Response</PreCondition></PreConditions>
<Actions>
<Action>THIS &lt;- HandleModeChange.StartOfMission.S21</Action><Action>DMI.MasterDMI().In_Start.InputInformation.RequestStatus &lt;- Request.Disabled</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</StateMachine></State></States>
<Rules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="Allow reenter train data"
>
<ReqRef
 Id="5.4.5.3.4"
>
</ReqRef><SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Allow reenter train data in state S20"
>
<PreConditions>
</PreConditions>
<Actions>
</Actions>
<SubRules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Allow Re-enter train data"
>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Reenter train data not yet proposed to driver"
>
<PreConditions>
<PreCondition>DMI.MasterDMI().In_TrainData.InputInformation.RequestStatus == Request.Disabled</PreCondition></PreConditions>
<Actions>
<Action>DMI.MasterDMI().InitiateTrainDataRequest()</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Driver selected to reenter the train data"
>
<PreConditions>
<PreCondition>DMI.MasterDMI().In_TrainData.InputInformation.RequestStatus == Request.Response</PreCondition></PreConditions>
<Actions>
<Action>DMI.MasterDMI().In_TrainData.InputInformation.RequestStatus &lt;- Request.Disabled</Action><Action>Kernel.TrainData.TrainData.Value &lt;- DMI.MasterDMI().In_TrainData.Data</Action><Action>THIS &lt;- S12</Action></Actions>
</RuleCondition></Conditions>
</Rule></SubRules>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="Allow non leading"
>
<ReqRef
 Id="5.4.5.3.6"
>
</ReqRef><ReqRef
 Id="Entry 5.4.3.3.20"
>
</ReqRef><SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Allow non leading for state S20"
>
<PreConditions>
</PreConditions>
<Actions>
</Actions>
<SubRules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Allow to select non leading"
>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Non leading not yet proposed to driver"
>
<PreConditions>
<PreCondition>DMI.MasterDMI().In_NonLeadingRequest.InputInformation.RequestStatus == Request.Disabled</PreCondition></PreConditions>
<Actions>
<Action>DMI.MasterDMI().InitiateNonLeadingRequest()</Action></Actions>
</RuleCondition></Conditions>
</Rule></SubRules>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="Allow shunting"
>
<ReqRef
 Id="5.4.5.3.7"
>
</ReqRef><ReqRef
 Id="Entry 5.4.3.3.20"
>
</ReqRef><SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Allow shunting for state S20"
>
<PreConditions>
</PreConditions>
<Actions>
</Actions>
<SubRules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Allow to select shunting"
>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Shunting not yet proposed to driver"
>
<PreConditions>
<PreCondition>DMI.MasterDMI().In_ShuntingRequest.InputInformation.RequestStatus == Request.Disabled</PreCondition></PreConditions>
<Actions>
<Action>DMI.MasterDMI().InitiateShuntingRequest()</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Driver selected shunting"
>
<PreConditions>
<PreCondition>DMI.MasterDMI().In_ShuntingRequest.InputInformation.RequestStatus == Request.Response</PreCondition></PreConditions>
<Actions>
<Action>DMI.MasterDMI().In_ShuntingRequest.InputInformation.RequestStatus &lt;- Request.Disabled</Action><Action>THIS &lt;- ShuntingInitiatedByDriver</Action></Actions>
<SubRules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Check position validity"
>
<ReqRef
 Id="5.4.5.3.7.1"
>
</ReqRef><SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Invalid position"
>
<PreConditions>
<PreCondition>TrainPosition.Position.DataState == DataState.Invalid</PreCondition></PreConditions>
<Actions>
<Action>TrainPosition.Position.DataState &lt;- DataState.Unknown</Action></Actions>
</RuleCondition></Conditions>
</Rule></SubRules>
</RuleCondition></Conditions>
</Rule></SubRules>
</RuleCondition></Conditions>
</Rule></Rules>
</StateMachine></State><State
 X="20"
 Y="810"
 Width="100"
 Height="50"
 NeedsRequirement="FALSE"
 Name="S24"
>
<StateMachine
 InitialState="DisplayDriverAckRequest"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
>
<Rules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="Display driver ack request"
>
<ReqRef
 Id="Entry 5.4.3.2.S24"
>
</ReqRef><SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Display driver ack request"
>
<PreConditions>
<PreCondition>DMI.MasterDMI().In_AcknOfSRMode.InputInformation.RequestStatus == Request.Disabled</PreCondition></PreConditions>
<Actions>
<Action>DMI.MasterDMI().InitiateAcknOfSRMode()</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</StateMachine></State><State
 X="200"
 Y="820"
 Width="100"
 Height="50"
 NeedsRequirement="FALSE"
 Name="S25"
>
<StateMachine
 InitialState="DisplayDriverAckRequest"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
>
<Rules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Display driver ack request for LS"
>
<ReqRef
 Id="Entry 5.4.3.2.S25"
>
</ReqRef><ReqRef
 Id="5.19.5.1"
>
</ReqRef><ReqRef
 Id="5.19.1.2"
>
</ReqRef><SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Display driver ack request for LS"
>
<PreConditions>
<PreCondition>MA.ModeProfile.CurrentMode() == Default.Mode.ModeProfile.LS</PreCondition></PreConditions>
<Actions>
<Action>DMI.MasterDMI().InitiateAcknOfLSMode()</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Display driver ack request for OS"
>
<ReqRef
 Id="Entry 5.4.3.2.S25"
>
</ReqRef><ReqRef
 Id="5.9.1.2"
>
</ReqRef><ReqRef
 Id="5.9.5.1"
>
</ReqRef><SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Display driver ack request for OS"
>
<PreConditions>
<PreCondition>MA.ModeProfile.CurrentMode() == Default.Mode.ModeProfile.OS</PreCondition></PreConditions>
<Actions>
<Action>DMI.MasterDMI().InitiateAcknOfOSMode()</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Display driver ack request for SH"
>
<ReqRef
 Id="Entry 5.4.3.2.S25"
>
</ReqRef><ReqRef
 Id="5.7.4.1"
>
</ReqRef><ReqRef
 Id="5.7.1.4"
>
</ReqRef><SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Display driver ack request for SH"
>
<PreConditions>
<PreCondition>MA.ModeProfile.CurrentMode() == Default.Mode.ModeProfile.SH</PreCondition></PreConditions>
<Actions>
<Action>DMI.MasterDMI().InitiateAcknOfSHMode()</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</StateMachine></State><State
 X="10"
 Y="200"
 Width="100"
 Height="50"
 NeedsRequirement="FALSE"
 Name="D2"
>
<StateMachine
 InitialState=""
 Implemented="TRUE"
 NeedsRequirement="FALSE"
>
<Rules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="D2"
>
<ReqRef
 Id="Entry 5.4.3.2.D2"
>
</ReqRef><ReqRef
 Id="5.12.2.5"
>
<Comment>Closing the desk does not invalidates the train position stored in the engine</Comment>
</ReqRef><ReqRef
 Id="5.12.4.3"
>
</ReqRef><SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Valid stored position and level"
>
<ReqRef
 Id="Entry 5.4.3.2.D2.1"
>
</ReqRef><PreConditions>
<PreCondition>Kernel.Level.DataState == DataState.Valid</PreCondition><PreCondition>Kernel.TrainPosition.Position.DataState == DataState.Valid</PreCondition></PreConditions>
<Actions>
<Action>THIS &lt;- HandleModeChange.StartOfMission.D3</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Invalid stored position or level"
>
<ReqRef
 Id="Entry 5.4.3.2.D2.2"
>
</ReqRef><PreConditions>
</PreConditions>
<Actions>
<Action>THIS &lt;- HandleModeChange.StartOfMission.S2</Action></Actions>
<SubRules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Update level state"
>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Level was valid"
>
<ReqRef
 Id="Entry 5.4.3.3.6"
>
</ReqRef><ReqRef
 Id="Entry 5.4.3.3.7"
>
</ReqRef><PreConditions>
<PreCondition>Level.DataState == Default.DataState.Valid</PreCondition></PreConditions>
<Actions>
<Action>Level.DataState &lt;- Default.DataState.Invalid</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Update phone ID state"
>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Phone ID was valid"
>
<ReqRef
 Id="Entry 5.4.3.3.6"
>
</ReqRef><PreConditions>
<PreCondition>EURORADIO.CurrentRadioSession.SessionInfo.DataState == DataState.Valid</PreCondition></PreConditions>
<Actions>
<Action>EURORADIO.CurrentRadioSession.SessionInfo.DataState &lt;- DataState.Invalid</Action></Actions>
</RuleCondition></Conditions>
</Rule></SubRules>
</RuleCondition></Conditions>
</Rule></Rules>
</StateMachine></State><State
 X="280"
 Y="200"
 Width="100"
 Height="50"
 NeedsRequirement="FALSE"
 Name="D3"
>
<StateMachine
 InitialState=""
 Implemented="TRUE"
 NeedsRequirement="FALSE"
>
<Rules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="D3"
>
<ReqRef
 Id="Entry 5.4.3.2.D3.2"
>
</ReqRef><ReqRef
 Id="Entry 5.4.3.2.D3.1"
>
</ReqRef><SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Level 0, 1, NTC"
>
<ReqRef
 Id="Entry 5.4.3.2.D3.2"
>
</ReqRef><PreConditions>
<PreCondition>Kernel.Level.Value in [Level.L0, Level.L1, Level.LNTC]</PreCondition></PreConditions>
<Actions>
<Action>THIS &lt;- HandleModeChange.StartOfMission.S10</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Level 2, 3"
>
<ReqRef
 Id="Entry 5.4.3.2.D3.1"
>
</ReqRef><PreConditions>
<PreCondition>Kernel.Level.Value in [Level.L2, Level.L3]</PreCondition></PreConditions>
<Actions>
<Action>THIS &lt;- HandleModeChange.StartOfMission.D7</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</StateMachine></State><State
 X="1400"
 Y="330"
 Width="100"
 Height="50"
 NeedsRequirement="FALSE"
 Name="A32"
>
<StateMachine
 InitialState=""
 Implemented="TRUE"
 NeedsRequirement="FALSE"
>
<Rules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="A32"
>
<ReqRef
 Id="Entry 5.4.3.2.A32.1"
>
</ReqRef><ReqRef
 Id="Entry 5.4.3.2.A32.2"
>
</ReqRef><ReqRef
 Id="Entry 5.4.3.2.A32.2.1"
>
</ReqRef><ReqRef
 Id="Entry 5.4.3.2.A32.2.2"
>
</ReqRef><ReqRef
 Id="Entry 5.4.3.2.A32.3"
>
</ReqRef><SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Inform driver session has failed"
>
<PreConditions>
</PreConditions>
<Actions>
<Action>DMI.MasterDMI().DisplaySafeRadioConnectionIndication(EURORADIO.SafeRadioConnectionStatus.ConnectionLostOrSetUpFailed)</Action><Action>THIS &lt;- HandleModeChange.StartOfMission.S10</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</StateMachine></State><State
 X="1390"
 Y="170"
 Width="100"
 Height="50"
 NeedsRequirement="FALSE"
 Name="A33"
>
<StateMachine
 InitialState=""
 Implemented="TRUE"
 NeedsRequirement="FALSE"
>
<Rules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="A33"
>
<ReqRef
 Id="Entry 5.4.3.2.A33.1"
>
</ReqRef><ReqRef
 Id="Entry 5.4.3.2.A33.2"
>
</ReqRef><SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Transmit valid SoM position report if train position is valid"
>
<PreConditions>
<PreCondition>TrainPosition.Position.DataState == DataState.Valid</PreCondition></PreConditions>
<Actions>
<Action>EURORADIO.PositionReport.SendSOMPositionReport()</Action><Action>THIS &lt;- HandleModeChange.StartOfMission.S10</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</StateMachine></State><State
 X="1140"
 Y="400"
 Width="100"
 Height="50"
 NeedsRequirement="FALSE"
 Name="A34"
>
<StateMachine
 InitialState="ReportPositionToRBC"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
>
<States>
<State
 Y="60"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="ReportPositionToRBC"
>
<ReqRef
 Id="Entry 5.4.3.2.A34.1"
>
</ReqRef><StateMachine
 InitialState=""
 Implemented="TRUE"
 NeedsRequirement="FALSE"
>
<Rules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="Report invalid or unknown position"
>
<ReqRef
 Id="Entry 5.4.3.2.A34.1"
>
</ReqRef><SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Report invalid or unknown position"
>
<PreConditions>
</PreConditions>
<Actions>
<Action>EURORADIO.PositionReport.SendSOMPositionReport()</Action><Action>THIS &lt;- HandleModeChange.StartOfMission.A34.WaitForRBCResponse</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</StateMachine></State><State
 X="110"
 Y="60"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="WaitForRBCResponse"
>
<ReqRef
 Id="Entry 5.4.3.2.A34.2"
>
</ReqRef><StateMachine
 InitialState=""
 Implemented="TRUE"
 NeedsRequirement="FALSE"
>
<Rules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="Analyze RBC response"
>
<ReqRef
 Id="Entry 5.4.3.2.A34.2"
>
</ReqRef><SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="RBC reports valid position"
>
<ReqRef
 Id="Entry 5.4.3.2.D33.2"
>
</ReqRef><PreConditions>
<PreCondition>Available ( EURORADIO.EuroradioMessageIn.SOM_POSITION_REPORT_CONFIRMED_BY_RBC )</PreCondition></PreConditions>
<Actions>
<Action>THIS &lt;- HandleModeChange.StartOfMission.A35</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="RBC reports train accepted"
>
<ReqRef
 Id="Entry 5.4.3.2.D22.2"
>
</ReqRef><PreConditions>
<PreCondition>Available ( EURORADIO.EuroradioMessageIn.TRAIN_ACCEPTED )</PreCondition></PreConditions>
<Actions>
<Action>THIS &lt;- HandleModeChange.StartOfMission.A23</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="RBC reports train rejected"
>
<ReqRef
 Id="Entry 5.4.3.2.D22.2"
>
</ReqRef><PreConditions>
<PreCondition>Available ( EURORADIO.EuroradioMessageIn.TRAIN_REJECTED )</PreCondition></PreConditions>
<Actions>
<Action>THIS &lt;- HandleModeChange.StartOfMission.A38</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</StateMachine></State></States>
</StateMachine></State><State
 X="1400"
 Y="400"
 Width="100"
 Height="50"
 NeedsRequirement="FALSE"
 Name="A35"
>
<StateMachine
 InitialState=""
 Implemented="TRUE"
 NeedsRequirement="FALSE"
>
<ReqRef
 Id="Entry 5.4.3.3.16"
>
</ReqRef><Rules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="A35"
>
<ReqRef
 Id="Entry 5.4.3.2.A35"
>
<Comment>The position report has been received while leaving D33</Comment>
</ReqRef><SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="RBC informs that the reported position is valid"
>
<PreConditions>
</PreConditions>
<Actions>
<Action>THIS &lt;- HandleModeChange.StartOfMission.S10</Action><Action>Kernel.TrainPosition.Position.DataState &lt;- DataState.Valid</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</StateMachine></State><State
 X="1140"
 Y="600"
 Width="100"
 Height="50"
 NeedsRequirement="FALSE"
 Name="A23"
>
<StateMachine
 InitialState=""
 Implemented="TRUE"
 NeedsRequirement="FALSE"
>
<Rules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="A23"
>
<ReqRef
 Id="Entry 5.4.3.2.A23"
>
</ReqRef><Comment>The acceptation message has already been received in D22</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="A23"
>
<Comment></Comment>
<PreConditions>
</PreConditions>
<Actions>
<Action>THIS &lt;- HandleModeChange.StartOfMission.A24</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</StateMachine></State><State
 X="1140"
 Y="690"
 Width="100"
 Height="50"
 NeedsRequirement="FALSE"
 Name="A24"
>
<StateMachine
 InitialState=""
 Implemented="TRUE"
 NeedsRequirement="FALSE"
>
<Rules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="A24"
>
<ReqRef
 Id="Entry 5.4.3.2.A24"
>
</ReqRef><ReqRef
 Id="Entry 5.4.3.3.17"
>
</ReqRef><SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Delete train position"
>
<PreConditions>
</PreConditions>
<Actions>
<Action>Kernel.TrainPosition.Position.DataState &lt;- DataState.Unknown</Action><Action>THIS &lt;- HandleModeChange.StartOfMission.S10</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</StateMachine></State><State
 X="1400"
 Y="600"
 Width="100"
 Height="50"
 NeedsRequirement="FALSE"
 Name="A38"
>
<StateMachine
 InitialState=""
 Implemented="TRUE"
 NeedsRequirement="FALSE"
>
<Rules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="A38"
>
<ReqRef
 Id="Entry 5.4.3.2.A38"
>
</ReqRef><Comment>The message that indicates that the train is rejected by the RBC has been recevied in D22</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="RBC informs that it rejects the train "
>
<Comment></Comment>
<PreConditions>
</PreConditions>
<Actions>
<Action>THIS &lt;- HandleModeChange.StartOfMission.A39</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</StateMachine></State><State
 X="1150"
 Y="780"
 Width="100"
 Height="50"
 NeedsRequirement="FALSE"
 Name="A40"
>
<StateMachine
 InitialState=""
 Implemented="TRUE"
 NeedsRequirement="FALSE"
>
<Rules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="A40"
>
<ReqRef
 Id="Entry 5.4.3.2.A40"
>
</ReqRef><SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Inform driver that the train is rejected"
>
<PreConditions>
</PreConditions>
<Actions>
<Action>DMI.MasterDMI().DisplayTrainIsRejected()</Action><Action>THIS &lt;- HandleModeChange.StartOfMission.S10</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</StateMachine></State><State
 X="940"
 Y="430"
 Width="100"
 Height="50"
 NeedsRequirement="FALSE"
 Name="S12"
>
<StateMachine
 InitialState="RequestTrainData"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
>
<States>
<State
 X="100"
 Y="70"
 Width="200"
 Height="50"
 Implemented="TRUE"
 Name="RequestTrainData"
>
<ReqRef
 Id="Entry 5.4.3.2.S12"
>
</ReqRef><StateMachine
 InitialState=""
 Implemented="TRUE"
 NeedsRequirement="FALSE"
>
<Rules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="RequestTrainData"
>
<ReqRef
 Id="Entry 5.4.3.2.S12"
>
</ReqRef><SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="RequestTrainData"
>
<PreConditions>
</PreConditions>
<Actions>
<Action>THIS &lt;- HandleModeChange.StartOfMission.S12.TrainDataRequested</Action><Action>DMI.MasterDMI().InitiateTrainDataRequest()</Action><Action>Kernel.TrainData.TrainData.DataState &lt;- DataState.Unknown</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</StateMachine></State><State
 X="100"
 Y="200"
 Width="200"
 Height="50"
 Implemented="TRUE"
 Name="TrainDataRequested"
>
<ReqRef
 Id="Entry 5.4.3.2.S12.1"
>
</ReqRef><StateMachine
 InitialState=""
 Implemented="TRUE"
 NeedsRequirement="FALSE"
>
<Rules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="E16"
>
<ReqRef
 Id="Entry 5.4.3.2.S12.1"
>
</ReqRef><SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="E16"
>
<ReqRef
 Id="Entry 5.4.3.3.21"
>
</ReqRef><ReqRef
 Id="Entry 5.4.3.3.22"
>
</ReqRef><PreConditions>
<PreCondition>DMI.MasterDMI().In_TrainData.InputInformation.RequestStatus == Request.Response</PreCondition></PreConditions>
<Actions>
<Action>THIS &lt;- HandleModeChange.StartOfMission.D12</Action><Action>DMI.MasterDMI().In_TrainData.InputInformation.RequestStatus &lt;- Request.Disabled</Action><Action>Kernel.TrainData.TrainData.DataState &lt;- DataState.Valid</Action><Action>Kernel.TrainData.TrainData.Value &lt;- DMI.MasterDMI().In_TrainData.Data</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</StateMachine></State></States>
</StateMachine></State><State
 X="930"
 Y="250"
 Width="100"
 Height="50"
 NeedsRequirement="FALSE"
 Name="D12"
>
<StateMachine
 InitialState=""
 Implemented="TRUE"
 NeedsRequirement="FALSE"
>
<Rules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="D12"
>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="D12"
>
<PreConditions>
</PreConditions>
<Actions>
</Actions>
<SubRules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="Train running number is unknown or invalid"
>
<ReqRef
 Id="Entry 5.4.3.2.D12.2"
>
</ReqRef><SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Train running number is invalid or unknown"
>
<PreConditions>
<PreCondition>Kernel.TrainRunningNumber.DataState in [DataState.Unknown, DataState.Invalid]</PreCondition></PreConditions>
<Actions>
<Action>THIS &lt;- HandleModeChange.StartOfMission.S13</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="Train running number is valid"
>
<ReqRef
 Id="Entry 5.4.3.2.D12.1"
>
</ReqRef><SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Train running number is valid"
>
<PreConditions>
<PreCondition>Kernel.TrainRunningNumber.DataState == DataState.Valid</PreCondition></PreConditions>
<Actions>
<Action>THIS &lt;- HandleModeChange.StartOfMission.D10</Action></Actions>
</RuleCondition></Conditions>
</Rule></SubRules>
</RuleCondition></Conditions>
</Rule></Rules>
</StateMachine></State><State
 X="680"
 Y="250"
 Width="100"
 Height="50"
 NeedsRequirement="FALSE"
 Name="D10"
>
<StateMachine
 InitialState=""
 Implemented="TRUE"
 NeedsRequirement="FALSE"
>
<Rules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="D10"
>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="D10"
>
<PreConditions>
</PreConditions>
<Actions>
</Actions>
<SubRules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="Level2 or Level3"
>
<ReqRef
 Id="Entry 5.4.3.2.D10.1"
>
</ReqRef><SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Level2 or Level3"
>
<PreConditions>
<PreCondition>Kernel.Level.Value in [Level.L2, Level.L3]</PreCondition></PreConditions>
<Actions>
<Action>THIS &lt;- HandleModeChange.StartOfMission.D11</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="Level0, Level1, Level NTC"
>
<ReqRef
 Id="Entry 5.4.3.2.D10.2"
>
</ReqRef><SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Level0, Level1, Level NTC"
>
<PreConditions>
<PreCondition>Kernel.Level.Value in [Level.L0, Level.L1, Level.LNTC]</PreCondition></PreConditions>
<Actions>
<Action>THIS &lt;- HandleModeChange.StartOfMission.S20</Action></Actions>
</RuleCondition></Conditions>
</Rule></SubRules>
</RuleCondition></Conditions>
</Rule></Rules>
</StateMachine></State><State
 X="680"
 Y="430"
 Width="100"
 Height="50"
 NeedsRequirement="FALSE"
 Name="D11"
>
<StateMachine
 InitialState=""
 Implemented="TRUE"
 NeedsRequirement="FALSE"
>
<Rules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="D11"
>
<ReqRef
 Id="Entry 5.4.3.2.D11"
>
</ReqRef><SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Session is open"
>
<PreConditions>
<PreCondition>EURORADIO.HasActiveSession()</PreCondition></PreConditions>
<Actions>
<Action>THIS &lt;- HandleModeChange.StartOfMission.S11</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Session is not open"
>
<PreConditions>
</PreConditions>
<Actions>
<Action>THIS &lt;- HandleModeChange.StartOfMission.S10</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</StateMachine></State><State
 X="110"
 Y="700"
 Width="100"
 Height="50"
 NeedsRequirement="FALSE"
 Name="S21"
>
<StateMachine
 InitialState="SendMARequest"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
>
<States>
<State
 X="110"
 Y="190"
 Width="200"
 Height="50"
 Implemented="TRUE"
 Name="MARequestSent"
>
<ReqRef
 Id="Entry 5.4.3.2.S21.1"
>
</ReqRef><ReqRef
 Id="Entry 5.4.3.2.S21.2"
>
</ReqRef><ReqRef
 Id="Entry 5.4.3.2.S21.3"
>
</ReqRef><StateMachine
 InitialState=""
 Implemented="TRUE"
 NeedsRequirement="FALSE"
>
<Rules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="ReceiveRBCAnswer"
>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="E26: SR mode"
>
<ReqRef
 Id="Entry 5.4.3.2.S21.1"
>
</ReqRef><PreConditions>
<PreCondition>SR.SRAuthorised()</PreCondition></PreConditions>
<Actions>
<Action>THIS &lt;- HandleModeChange.StartOfMission.S24</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="E27: OS/LS/SH mode"
>
<ReqRef
 Id="Entry 5.4.3.2.S21.2"
>
</ReqRef><ReqRef
 Id="5.9.5.1"
>
</ReqRef><ReqRef
 Id="5.7.4.1"
>
</ReqRef><ReqRef
 Id="5.19.5.1"
>
</ReqRef><PreConditions>
<PreCondition>MA.ModeProfile.ModeProfileIsApplicable()</PreCondition><PreCondition>Available ( MA.MA )</PreCondition></PreConditions>
<Actions>
<Action>THIS &lt;- HandleModeChange.StartOfMission.S25</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</StateMachine></State><State
 X="110"
 Y="80"
 Width="200"
 Height="50"
 Implemented="TRUE"
 Name="SendMARequest"
>
<ReqRef
 Id="Entry 5.4.3.2.S21"
>
</ReqRef><StateMachine
 InitialState=""
 Implemented="TRUE"
 NeedsRequirement="FALSE"
>
<Rules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="Send MA request"
>
<ReqRef
 Id="Entry 5.4.3.2.S21"
>
</ReqRef><SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Send MA request"
>
<PreConditions>
</PreConditions>
<Actions>
<Action>EURORADIO.SendMARequest ( aReason =&gt; Messages.Q_MARQSTREASON.Start_selected_by_driver )</Action><Action>THIS &lt;- HandleModeChange.StartOfMission.S21.MARequestSent</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</StateMachine></State></States>
</StateMachine></State><State
 X="360"
 Y="880"
 Width="100"
 Height="50"
 NeedsRequirement="FALSE"
 Name="S22"
>
<StateMachine
 InitialState="DisplayDriverAckRequest"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
>
<Rules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="Display driver ack request"
>
<ReqRef
 Id="Entry 5.4.3.2.S22"
>
</ReqRef><SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Display driver ack request"
>
<PreConditions>
<PreCondition>DMI.MasterDMI().In_AcknOfSNMode.InputInformation.RequestStatus == Request.Disabled</PreCondition></PreConditions>
<Actions>
<Action>DMI.MasterDMI().InitiateAcknOfSNMode(Kernel.NationalSystemId)</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</StateMachine></State><State
 X="500"
 Y="880"
 Width="100"
 Height="50"
 NeedsRequirement="FALSE"
 Name="S23"
>
<StateMachine
 InitialState="DisplayDriverAckRequest"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
>
<Rules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="Display driver ack request"
>
<ReqRef
 Id="Entry 5.4.3.2.S23"
>
</ReqRef><SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Display driver ack request"
>
<PreConditions>
<PreCondition>DMI.MasterDMI().In_AcknOfUNMode.InputInformation.RequestStatus == Request.Disabled</PreCondition></PreConditions>
<Actions>
<Action>DMI.MasterDMI().InitiateAcknOfUNMode()</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</StateMachine></State><State
 X="480"
 Y="50"
 Width="100"
 Height="50"
 NeedsRequirement="FALSE"
 Name="D7"
>
<StateMachine
 InitialState=""
 Implemented="TRUE"
 NeedsRequirement="FALSE"
>
<Rules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Terminal registered to network"
>
<ReqRef
 Id="Entry 5.4.3.2.D7.1"
>
</ReqRef><SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Terminal registered to network"
>
<PreConditions>
<PreCondition>EURORADIO.MobileTerminalRegisteredToNetwork == Boolean.True</PreCondition></PreConditions>
<Actions>
<Action>THIS &lt;- HandleModeChange.StartOfMission.A31</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Terminal not registered to network"
>
<ReqRef
 Id="Entry 5.4.3.2.D7.2"
>
</ReqRef><SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Terminal not registered to network"
>
<PreConditions>
<PreCondition>EURORADIO.MobileTerminalRegisteredToNetwork == Boolean.False</PreCondition></PreConditions>
<Actions>
<Action>THIS &lt;- HandleModeChange.StartOfMission.A29</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</StateMachine></State><State
 X="470"
 Y="310"
 Width="100"
 Height="50"
 NeedsRequirement="FALSE"
 Name="A29"
>
<StateMachine
 InitialState="InformDriver"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
>
<Rules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="A29"
>
<ReqRef
 Id="Entry 5.4.3.2.A29"
>
</ReqRef><SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Inform Driver equipment failed"
>
<PreConditions>
</PreConditions>
<Actions>
<Action>THIS &lt;- HandleModeChange.StartOfMission.S10</Action><Action>DMI.MasterDMI().DisplayRadioNetworkRegistrationFailed()</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</StateMachine></State></States>
<Rules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="End of SoM"
>
<ReqRef
 Id="5.4.3.2.1"
>
</ReqRef><SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="End of SoM"
>
<PreConditions>
</PreConditions>
<Actions>
</Actions>
<SubRules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Transition to a mode different from SB"
>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Transition to a mode different from SB"
>
<PreConditions>
<PreCondition>Kernel.Mode != Default.Mode.SB</PreCondition></PreConditions>
<Actions>
<Action>HandleModeChange &lt;- HandleModeChange.NoProcedure</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Desk is closed"
>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Desk is closed"
>
<ReqRef
 Id="Condition 3.A3.4.1.3.1.34.3"
>
</ReqRef><ReqRef
 Id="Condition 3.A3.4.1.3.1.37.3"
>
</ReqRef><ReqRef
 Id="Condition 3.A3.4.1.3.1.1.3"
>
</ReqRef><ReqRef
 Id="Condition 3.A3.4.1.3.1.11.3"
>
</ReqRef><ReqRef
 Id="Condition 3.A3.4.1.3.1.13.3"
>
</ReqRef><ReqRef
 Id="Condition 3.A3.4.1.3.1.14.3"
>
</ReqRef><ReqRef
 Id="Condition 3.A3.4.1.3.1.25.3"
>
</ReqRef><ReqRef
 Id="Condition 3.A3.4.1.3.1.29.3"
>
</ReqRef><ReqRef
 Id="Condition 3.A3.4.1.3.1.38.3"
>
</ReqRef><ReqRef
 Id="Condition 3.A3.4.1.3.1.39.3"
>
</ReqRef><ReqRef
 Id="Condition 3.A3.4.1.3.1.41.3"
>
</ReqRef><ReqRef
 Id="Condition 3.A3.4.1.3.1.42.3"
>
</ReqRef><ReqRef
 Id="Condition 3.A3.4.1.3.1.49.3"
>
</ReqRef><ReqRef
 Id="Condition 3.A3.4.1.3.1.50.3"
>
</ReqRef><ReqRef
 Id="Condition 3.A3.4.1.3.1.51.3"
>
</ReqRef><ReqRef
 Id="3.A3.4.1.2.k"
>
</ReqRef><ReqRef
 Id="3.5.5.1.4"
>
</ReqRef><PreConditions>
<PreCondition>DMI.DriverClosedTheDesk(DMI.MasterDMI())</PreCondition></PreConditions>
<Actions>
<Action>EURORADIO.CloseRBCSession()</Action><Action>HandleModeChange &lt;- HandleModeChange.NoProcedure</Action><Action>HandlingOfAcceptedAndStoredInformation.DeskClosedDuringSoM &lt;- True</Action></Actions>
</RuleCondition></Conditions>
</Rule></SubRules>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="Loss of open session"
>
<ReqRef
 Id="5.4.5.1"
>
</ReqRef><SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="After D11"
>
<PreConditions>
<PreCondition>THIS in [ S11, S20, S21, S22, S23, S24, S25 ]</PreCondition><PreCondition>EURORADIO.SessionState != SessionState.Established</PreCondition><PreCondition>Kernel.Level.Value in [Level.L2, Level.L3]</PreCondition></PreConditions>
<Actions>
<Action>THIS &lt;- S10</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="Allow override"
>
<ReqRef
 Id="5.4.5.3.1"
>
</ReqRef><ReqRef
 Id="Entry 5.4.3.3.20"
>
</ReqRef><SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Allow override for states S10 and S20"
>
<PreConditions>
<PreCondition>THIS in [S10, S20] </PreCondition><PreCondition>Kernel.TrainData.TrainData.DataState == DataState.Valid</PreCondition></PreConditions>
<Actions>
</Actions>
<SubRules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Allow override"
>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Override not yet proposed to driver"
>
<PreConditions>
<PreCondition>DMI.MasterDMI().In_OverrideRequest.InputInformation.RequestStatus == Request.Disabled</PreCondition></PreConditions>
<Actions>
<Action>DMI.MasterDMI().InitiateOverrideRequest()</Action></Actions>
</RuleCondition></Conditions>
</Rule></SubRules>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="Allow reenter driver ID"
>
<ReqRef
 Id="5.4.5.3.2"
>
</ReqRef><SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Allow reenter driver ID for states S10 and S20"
>
<PreConditions>
<PreCondition>THIS in [S10, S20] </PreCondition></PreConditions>
<Actions>
</Actions>
<SubRules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Allow Re-enter driver ID"
>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Reenter driver ID not yet proposed to driver"
>
<PreConditions>
<PreCondition>DMI.MasterDMI().In_DriverId.InputInformation.RequestStatus == Request.Disabled</PreCondition></PreConditions>
<Actions>
<Action>DMI.MasterDMI().InitiateDriverIdRequest(
  Id =&gt; DriverId.Value, 
  Enter =&gt; True,
  ReValidate =&gt; False
)</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Driver selected to reenter its driver ID"
>
<PreConditions>
<PreCondition>DMI.MasterDMI().In_DriverId.InputInformation.RequestStatus == Request.Response</PreCondition></PreConditions>
<Actions>
<Action>DMI.MasterDMI().In_DriverId.InputInformation.RequestStatus &lt;- Request.Disabled</Action><Action>DriverId.Value &lt;- DMI.MasterDMI().In_DriverId.Id</Action></Actions>
</RuleCondition></Conditions>
</Rule></SubRules>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="Allow reenter train running number"
>
<ReqRef
 Id="5.4.5.3.3"
>
</ReqRef><SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Allow reenter train running number for states S10 and S20"
>
<PreConditions>
<PreCondition>THIS in [S10, S20] </PreCondition></PreConditions>
<Actions>
</Actions>
<SubRules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Allow Re-enter train running number"
>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Reenter train running number not yet proposed to driver"
>
<PreConditions>
<PreCondition>DMI.MasterDMI().In_TrainRunningNumber.InputInformation.RequestStatus == Request.Disabled</PreCondition></PreConditions>
<Actions>
<Action>DMI.MasterDMI().InitiateTrainRunningNumberRequest(
  Number =&gt; TrainRunningNumber.Value, 
  Enter =&gt; True,
  ReValidate =&gt; False
)</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Driver selected to reenter the train runnning number"
>
<PreConditions>
<PreCondition>DMI.MasterDMI().In_TrainRunningNumber.InputInformation.RequestStatus == Request.Response</PreCondition></PreConditions>
<Actions>
<Action>DMI.MasterDMI().In_TrainRunningNumber.InputInformation.RequestStatus &lt;- Request.Disabled</Action><Action>TrainRunningNumber.Value &lt;- DMI.MasterDMI().In_TrainRunningNumber.Number</Action></Actions>
</RuleCondition></Conditions>
</Rule></SubRules>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="Allow reenter level"
>
<ReqRef
 Id="5.4.5.3.5"
>
</ReqRef><SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Allow reenter level for states S10 and S20"
>
<PreConditions>
<PreCondition>THIS in [S10, S20] </PreCondition></PreConditions>
<Actions>
</Actions>
<SubRules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Allow Re-enter level"
>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Reenter level not yet proposed to driver"
>
<PreConditions>
<PreCondition>DMI.MasterDMI().In_ErtmsEtcsLevelEntryRequest.InputInformation.RequestStatus == Request.Disabled</PreCondition></PreConditions>
<Actions>
<Action>DMI.MasterDMI().InitiateLevelEntryRequest()</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Driver selected to reenter the level"
>
<PreConditions>
<PreCondition>DMI.MasterDMI().In_ErtmsEtcsLevelEntryRequest.InputInformation.RequestStatus == Request.Response</PreCondition></PreConditions>
<Actions>
<Action>DMI.MasterDMI().In_ErtmsEtcsLevelEntryRequest.InputInformation.RequestStatus &lt;- Request.Disabled</Action><Action>THIS &lt;- S2</Action></Actions>
<SubRules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="Handle change of level validity"
>
<ReqRef
 Id="Entry 5.4.3.3.25"
>
</ReqRef><SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Valid level"
>
<PreConditions>
<PreCondition>Level.DataState == DataState.Valid</PreCondition></PreConditions>
<Actions>
<Action>Level.DataState &lt;- DataState.Invalid</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="Handle change of RBC ID / Phone number validity"
>
<ReqRef
 Id="Entry 5.4.3.3.25"
>
</ReqRef><SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Valid RBC ID / Phone number"
>
<PreConditions>
<PreCondition>EURORADIO.CurrentRadioSession.SessionInfo.DataState == DataState.Valid</PreCondition></PreConditions>
<Actions>
<Action>EURORADIO.CurrentRadioSession.SessionInfo.DataState &lt;- DataState.Invalid</Action></Actions>
</RuleCondition></Conditions>
</Rule></SubRules>
</RuleCondition></Conditions>
</Rule></SubRules>
</RuleCondition></Conditions>
</Rule></Rules>
</StateMachine></State><State
 X="320"
 Y="330"
 Width="500"
 Height="50"
 NeedsRequirement="FALSE"
 Name="TrainTrip"
>
<ReqRef
 Id="5.11"
>
</ReqRef><StateMachine
 InitialState="S010"
 NeedsRequirement="FALSE"
>
<States>
<State
 X="10"
 Y="10"
 Width="80"
 Height="40"
 Implemented="TRUE"
 Name="S010"
>
<ReqRef
 Id="Entry 5.11.2.2.S010"
>
</ReqRef><StateMachine
 InitialState=""
 NeedsRequirement="FALSE"
>
<Rules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="E015"
>
<ReqRef
 Id="Entry 5.11.2.2.S010"
>
</ReqRef><SubRules></SubRules>
<Conditions>
<RuleCondition
 NeedsRequirement="FALSE"
 Name="E015"
>
<PreConditions>
</PreConditions>
<Actions>
<Action>THIS &lt;- HandleModeChange.TrainTrip.A025</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</StateMachine></State><State
 X="170"
 Y="10"
 Width="80"
 Height="40"
 Implemented="TRUE"
 Name="A025"
>
<ReqRef
 Id="Entry 5.11.2.2.A025"
>
</ReqRef><StateMachine
 InitialState=""
 NeedsRequirement="FALSE"
>
<Rules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 Verified="TRUE"
 Name="A025"
>
<ReqRef
 Id="Entry 5.11.2.2.A025"
>
</ReqRef><SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Verified="TRUE"
 NeedsRequirement="FALSE"
 Name="A025"
>
<PreConditions>
</PreConditions>
<Actions>
<Action>Kernel.Mode &lt;- Mode.TR</Action><Action>THIS &lt;- HandleModeChange.TrainTrip.D020</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</StateMachine></State><State
 X="490"
 Y="10"
 Width="80"
 Height="40"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="A030"
>
<ReqRef
 Id="Entry 5.11.2.2.A030"
>
</ReqRef><StateMachine
 InitialState=""
 NeedsRequirement="FALSE"
>
<Rules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="A030"
>
<ReqRef
 Id="Entry 5.11.2.2.A030.2"
>
</ReqRef><SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="A030"
>
<PreConditions>
</PreConditions>
<Actions>
<Action>THIS &lt;- HandleModeChange.TrainTrip.A035</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</StateMachine></State><State
 X="490"
 Y="90"
 Width="80"
 Height="40"
 Implemented="TRUE"
 Name="A035"
>
<ReqRef
 Id="Entry 5.11.2.2.A035"
>
</ReqRef><StateMachine
 InitialState=""
 Implemented="TRUE"
 NeedsRequirement="FALSE"
>
<Rules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="A035"
>
<ReqRef
 Id="Entry 5.11.2.2.A035"
>
</ReqRef><SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="A035"
>
<PreConditions>
</PreConditions>
<Actions>
<Action>THIS &lt;- HandleModeChange.TrainTrip.S050</Action><Action>MA.MA &lt;- EMPTY</Action><Action>TrackDescription.StaticSpeedProfile.SSP &lt;- []</Action><Action>TrackDescription.Gradient.Gradients &lt;- []</Action><Action>TrackDescription.AxleLoad.ASP.ALs &lt;- []</Action><Action>TrackDescription.PermittedBrakingDistance.SpeedRestrictionsProfile.SpeedRestrictions &lt;- []</Action><Action>TrackDescription.AdhesionFactors.AdhFactors &lt;- []</Action><Action>TrackDescription.ReversingArea.ReversingAreaProfile &lt;- EMPTY</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</StateMachine></State><State
 X="490"
 Y="170"
 Width="80"
 Height="40"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="S050"
>
<ReqRef
 Id="Entry 5.11.2.2.S050"
>
</ReqRef><StateMachine
 InitialState=""
 NeedsRequirement="FALSE"
>
<Rules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="E055"
>
<ReqRef
 Id="Entry 5.11.2.2.S050.2"
>
</ReqRef><ReqRef
 Id="Entry 4.6.3.66"
>
</ReqRef><ReqRef
 Id="Entry 4.6.3.61"
>
</ReqRef><ReqRef
 Id="Entry 4.6.3.62"
>
</ReqRef><ReqRef
 Id="Entry 4.6.3.8"
>
</ReqRef><SubRules></SubRules>
<Conditions>
<RuleCondition
 NeedsRequirement="FALSE"
 Name="E055"
>
<PreConditions>
<PreCondition>Odometry.EstimatedSpeed == 0.0</PreCondition></PreConditions>
<Actions>
<Action>THIS &lt;- HandleModeChange.TrainTrip.S060</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</StateMachine></State><State
 X="490"
 Y="250"
 Width="80"
 Height="40"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="S060"
>
<ReqRef
 Id="Entry 5.11.2.2.S060"
>
</ReqRef><StateMachine
 InitialState="RequestDriverAck"
 NeedsRequirement="FALSE"
>
<ReqRef
 Id="Entry 5.11.2.2.S060"
>
</ReqRef><States>
<State
 X="30"
 Y="30"
 Width="110"
 Height="50"
 Implemented="TRUE"
 Name="RequestDriverAck"
>
<ReqRef
 Id="Entry 5.11.2.2.S060.1"
>
</ReqRef><StateMachine
 InitialState=""
 NeedsRequirement="FALSE"
>
<Rules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 Verified="TRUE"
 Name="Request driver ack"
>
<ReqRef
 Id="Entry 5.11.2.2.S060.1"
>
</ReqRef><SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Verified="TRUE"
 NeedsRequirement="FALSE"
 Name="Request driver ack"
>
<PreConditions>
</PreConditions>
<Actions>
<Action>DMI.MasterDMI().InitiateAcknOfTrainTrip()</Action><Action>THIS &lt;- HandleModeChange.TrainTrip.S060.DriverAckRequested</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</StateMachine></State><State
 X="30"
 Y="130"
 Width="110"
 Height="50"
 Implemented="TRUE"
 Name="DriverAckRequested"
>
<ReqRef
 Id="Entry 5.11.2.2.S060.2"
>
</ReqRef><StateMachine
 InitialState=""
 NeedsRequirement="FALSE"
>
<Rules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 Verified="TRUE"
 Name="E065"
>
<ReqRef
 Id="Entry 5.11.2.2.S060.2"
>
</ReqRef><ReqRef
 Id="Entry 4.6.3.66"
>
</ReqRef><ReqRef
 Id="Entry 4.6.3.61"
>
</ReqRef><ReqRef
 Id="Entry 4.6.3.62"
>
</ReqRef><ReqRef
 Id="Entry 4.6.3.8"
>
</ReqRef><SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Verified="TRUE"
 NeedsRequirement="FALSE"
 Name="E065"
>
<PreConditions>
<PreCondition>DMI.MasterDMI().In_AcknOfTrainTrip.InputInformation.RequestStatus == Default.Request.Response</PreCondition></PreConditions>
<Actions>
<Action>DMI.MasterDMI().In_AcknOfTrainTrip.InputInformation.RequestStatus &lt;- Default.Request.Disabled</Action><Action>THIS &lt;- HandleModeChange.TrainTrip.D080</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</StateMachine></State></States>
</StateMachine></State><State
 X="330"
 Y="330"
 Width="80"
 Height="40"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="D080"
>
<ReqRef
 Id="Entry 5.11.2.2.D80"
>
</ReqRef><StateMachine
 InitialState=""
 NeedsRequirement="FALSE"
>
<Rules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="D080"
>
<ReqRef
 Id="Entry 5.11.2.2.D80"
>
</ReqRef><SubRules></SubRules>
<Conditions>
<RuleCondition
 NeedsRequirement="FALSE"
 Name="D080"
>
<PreConditions>
</PreConditions>
<Actions>
</Actions>
<SubRules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 Verified="TRUE"
 Name="Level 1, 2, 3"
>
<ReqRef
 Id="Entry 5.11.2.2.D80.1"
>
</ReqRef><ReqRef
 Id="Entry 4.6.3.8"
>
</ReqRef><SubRules></SubRules>
<Conditions>
<RuleCondition
 NeedsRequirement="FALSE"
 Name="Level 1, 2, 3"
>
<PreConditions>
<PreCondition>Kernel.Level.Value in [Level.L1, Level.L2, Level.L3]</PreCondition></PreConditions>
<Actions>
<Action>THIS &lt;- HandleModeChange.TrainTrip.A105</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 Implemented="TRUE"
 Verified="TRUE"
 Name="Level 0, NTC"
>
<ReqRef
 Id="Entry 5.11.2.2.D80.2"
>
</ReqRef><ReqRef
 Id="Entry 4.6.3.66"
>
</ReqRef><SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Verified="TRUE"
 NeedsRequirement="FALSE"
 Name="Level 0, NTC"
>
<PreConditions>
<PreCondition>Kernel.Level.Value in [Level.L0, Level.LNTC]</PreCondition></PreConditions>
<Actions>
<Action>THIS &lt;- HandleModeChange.TrainTrip.D085</Action></Actions>
</RuleCondition></Conditions>
</Rule></SubRules>
</RuleCondition></Conditions>
</Rule></Rules>
</StateMachine></State><State
 X="730"
 Y="500"
 Width="80"
 Height="40"
 Implemented="TRUE"
 Name="A150"
>
<ReqRef
 Id="Entry 5.11.2.2.A150"
>
</ReqRef><StateMachine
 InitialState=""
 NeedsRequirement="FALSE"
>
</StateMachine></State><State
 X="330"
 Y="420"
 Width="80"
 Height="40"
 Implemented="TRUE"
 Name="A105"
>
<ReqRef
 Id="Entry 5.11.2.2.A105"
>
</ReqRef><StateMachine
 InitialState=""
 NeedsRequirement="FALSE"
>
</StateMachine></State><State
 X="330"
 Y="500"
 Width="80"
 Height="40"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="D110"
>
<ReqRef
 Id="Entry 5.11.2.2.D110"
>
</ReqRef><StateMachine
 InitialState=""
 NeedsRequirement="FALSE"
>
<Rules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 Verified="TRUE"
 NeedsRequirement="FALSE"
 Name="D110"
>
<ReqRef
 Id="Entry 5.11.2.2.D110"
>
</ReqRef><SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Verified="TRUE"
 NeedsRequirement="FALSE"
 Name="D110"
>
<PreConditions>
</PreConditions>
<Actions>
</Actions>
<SubRules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 Verified="TRUE"
 Name="Level 1"
>
<ReqRef
 Id="Entry 5.11.2.2.D110.1"
>
</ReqRef><SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Verified="TRUE"
 NeedsRequirement="FALSE"
 Name="Level 1"
>
<PreConditions>
<PreCondition>Kernel.Level.Value == Level.L1</PreCondition></PreConditions>
<Actions>
<Action>THIS &lt;- HandleModeChange.TrainTrip.S140</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 Implemented="TRUE"
 Verified="TRUE"
 Name="Level 2, Level 3"
>
<ReqRef
 Id="Entry 5.11.2.2.D110.2"
>
</ReqRef><SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Verified="TRUE"
 NeedsRequirement="FALSE"
 Name="Level 2, Level 3"
>
<PreConditions>
<PreCondition>Kernel.Level.Value in [Level.L2, Level.L3]</PreCondition></PreConditions>
<Actions>
<Action>THIS &lt;- HandleModeChange.TrainTrip.A115</Action></Actions>
</RuleCondition></Conditions>
</Rule></SubRules>
</RuleCondition></Conditions>
</Rule></Rules>
</StateMachine></State><State
 X="20"
 Y="500"
 Width="80"
 Height="40"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="S120"
>
<ReqRef
 Id="Entry 5.11.2.2.S120"
>
</ReqRef><StateMachine
 InitialState=""
 NeedsRequirement="FALSE"
>
<Rules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 Verified="TRUE"
 NeedsRequirement="FALSE"
 Name="S120"
>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="E125"
>
<ReqRef
 Id="Entry 5.11.2.2.S120.1"
>
</ReqRef><PreConditions>
<PreCondition>Available ( EURORADIO.EuroradioMessageIn.RECOGNITION_OF_EXIT_FROM_TRIP_MODE )</PreCondition></PreConditions>
<Actions>
<Action>THIS &lt;- HandleModeChange.TrainTrip.D130</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="No order received, maximum number of requests reached"
>
<ReqRef
 Id="A1.1.17.1"
>
</ReqRef><ReqRef
 Id="5.11.4.1.2"
>
</ReqRef><PreConditions>
<PreCondition>EURORADIO.PositionReport.LastPositionReport.Time + EURORADIO.TimeBeforeMessageRepetition &gt;= CurrentTime</PreCondition><PreCondition>EURORADIO.PositionReport.NumberOfSentReportRepetitions == 3</PreCondition></PreConditions>
<Actions>
<Action>EURORADIO.CloseRBCSession()</Action><Action>EURORADIO.PositionReport.NumberOfSentReportRepetitions &lt;- 0</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="No order received, a new request can be sent"
>
<ReqRef
 Id="5.11.4.1.1"
>
</ReqRef><PreConditions>
<PreCondition>EURORADIO.PositionReport.LastPositionReport.Time + EURORADIO.TimeBeforeMessageRepetition &gt;= CurrentTime</PreCondition><PreCondition>EURORADIO.HasActiveSession()</PreCondition></PreConditions>
<Actions>
<Action>EURORADIO.PositionReport.SendPositionReport()</Action><Action>EURORADIO.PositionReport.NumberOfSentReportRepetitions &lt;- EURORADIO.PositionReport.NumberOfSentReportRepetitions + 1</Action><Action>EURORADIO.PositionReport.LastPositionReport.Time &lt;- CurrentTime</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</StateMachine></State><State
 X="20"
 Y="580"
 Width="80"
 Height="40"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="D130"
>
<ReqRef
 Id="Entry 5.11.2.2.D130"
>
</ReqRef><StateMachine
 InitialState=""
 NeedsRequirement="FALSE"
>
<Rules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 Verified="TRUE"
 NeedsRequirement="FALSE"
 Name="D130"
>
<ReqRef
 Id="Entry 5.11.2.2.D130"
>
</ReqRef><SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Verified="TRUE"
 NeedsRequirement="FALSE"
 Name="D130"
>
<PreConditions>
</PreConditions>
<Actions>
</Actions>
<SubRules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 Verified="TRUE"
 Name="No emergency stop"
>
<ReqRef
 Id="Entry 5.11.2.2.D130.2"
>
</ReqRef><SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Verified="TRUE"
 NeedsRequirement="FALSE"
 Name="No emergency stop"
>
<PreConditions>
<PreCondition>Kernel.EmergencyStops == []</PreCondition></PreConditions>
<Actions>
<Action>THIS &lt;- HandleModeChange.TrainTrip.S140</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 Implemented="TRUE"
 Verified="TRUE"
 Name="Pending emergency stop"
>
<ReqRef
 Id="Entry 5.11.2.2.D130.1"
>
</ReqRef><SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Verified="TRUE"
 NeedsRequirement="FALSE"
 Name="Pending emergency stop"
>
<PreConditions>
<PreCondition>Kernel.EmergencyStops != []</PreCondition></PreConditions>
<Actions>
<Action>THIS &lt;- HandleModeChange.TrainTrip.S130</Action></Actions>
</RuleCondition></Conditions>
</Rule></SubRules>
</RuleCondition></Conditions>
</Rule></Rules>
</StateMachine></State><State
 X="260"
 Y="580"
 Width="80"
 Height="40"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="S130"
>
<ReqRef
 Id="Entry 5.11.2.2.D130"
>
</ReqRef><StateMachine
 InitialState=""
 NeedsRequirement="FALSE"
>
<Rules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 Verified="TRUE"
 Name="E135"
>
<ReqRef
 Id="Entry 5.11.2.2.S130"
>
</ReqRef><SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Verified="TRUE"
 NeedsRequirement="FALSE"
 Name="E135"
>
<PreConditions>
<PreCondition>Kernel.EmergencyStops == []</PreCondition></PreConditions>
<Actions>
<Action>THIS &lt;- HandleModeChange.TrainTrip.S140</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</StateMachine></State><State
 X="20"
 Y="660"
 Width="400"
 Height="40"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="S140"
>
<ReqRef
 Id="Entry 5.11.2.2.S140"
>
</ReqRef><StateMachine
 InitialState="RequestDriverSelection"
 NeedsRequirement="FALSE"
>
<ReqRef
 Id="Entry 5.11.2.2.S140"
>
</ReqRef><States>
<State
 X="100"
 Y="60"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="RequestDriverSelection"
>
<ReqRef
 Id="Entry 5.11.2.2.S140.1"
>
</ReqRef><StateMachine
 InitialState=""
 NeedsRequirement="FALSE"
>
<Rules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 Verified="TRUE"
 Name="RequestDriverSelection"
>
<ReqRef
 Id="Entry 5.11.2.2.S140.1"
>
</ReqRef><SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Verified="TRUE"
 NeedsRequirement="FALSE"
 Name="RequestDriverSelection"
>
<PreConditions>
</PreConditions>
<Actions>
<Action>THIS &lt;- HandleModeChange.TrainTrip.S140.DriverSelectionRequested</Action><Action>DMI.MasterDMI().InitiateShuntingRequest()</Action></Actions>
<SubRules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 Verified="TRUE"
 Name="Valid train data"
>
<ReqRef
 Id="A1.1.4.1"
>
</ReqRef><SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Verified="TRUE"
 NeedsRequirement="FALSE"
 Name="Valid Train data"
>
<PreConditions>
<PreCondition>Kernel.TrainData.TrainData.DataState == DataState.Valid</PreCondition></PreConditions>
<Actions>
<Action>DMI.MasterDMI().InitiateStartRequest()</Action></Actions>
</RuleCondition></Conditions>
</Rule></SubRules>
</RuleCondition></Conditions>
</Rule></Rules>
</StateMachine></State><State
 X="100"
 Y="180"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="DriverSelectionRequested"
>
<ReqRef
 Id="Entry 5.11.2.2.S140.2"
>
</ReqRef><ReqRef
 Id="Entry 5.11.2.2.S140.3"
>
</ReqRef><ReqRef
 Id="Entry 5.11.2.2.S140.4"
>
</ReqRef><StateMachine
 InitialState=""
 NeedsRequirement="FALSE"
>
<Rules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Driver has answered"
>
<ReqRef
 Id="A1.1.4.2"
>
</ReqRef><SubRules></SubRules>
<Conditions>
<RuleCondition
 NeedsRequirement="FALSE"
 Name="Driver has answered"
>
<PreConditions>
</PreConditions>
<Actions>
</Actions>
<SubRules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 Verified="TRUE"
 Name="E155"
>
<ReqRef
 Id="Entry 5.11.2.2.S140.3"
>
</ReqRef><SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Verified="TRUE"
 NeedsRequirement="FALSE"
 Name="E155"
>
<PreConditions>
<PreCondition>DMI.MasterDMI().In_Start.InputInformation.RequestStatus == Request.Response</PreCondition><PreCondition>Kernel.Level.Value in [Level.L2, Level.L3]</PreCondition></PreConditions>
<Actions>
<Action>THIS &lt;- HandleModeChange.TrainTrip.S150</Action><Action>DMI.MasterDMI().In_Start.InputInformation.RequestStatus &lt;- Request.Disabled</Action><Action>DMI.MasterDMI().In_ShuntingRequest.InputInformation.RequestStatus &lt;- Request.Disabled</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 Implemented="TRUE"
 Verified="TRUE"
 Name="E150"
>
<ReqRef
 Id="Entry 5.11.2.2.S140.2"
>
</ReqRef><SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Verified="TRUE"
 NeedsRequirement="FALSE"
 Name="E150"
>
<PreConditions>
<PreCondition>Kernel.Level.Value == Level.L1</PreCondition><PreCondition>DMI.MasterDMI().In_Start.InputInformation.RequestStatus == Request.Response</PreCondition></PreConditions>
<Actions>
<Action>THIS &lt;- HandleModeChange.TrainTrip.S160</Action><Action>DMI.MasterDMI().In_Start.InputInformation.RequestStatus &lt;- Request.Disabled</Action><Action>DMI.MasterDMI().In_ShuntingRequest.InputInformation.RequestStatus &lt;- Request.Disabled</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 Implemented="TRUE"
 Verified="TRUE"
 Name="E145"
>
<ReqRef
 Id="Entry 5.11.2.2.S140.4"
>
</ReqRef><ReqRef
 Id="Entry 5.6.2.2.E015"
>
</ReqRef><ReqRef
 Id="Entry 5.6.2.2.E015.1"
>
</ReqRef><SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Verified="TRUE"
 NeedsRequirement="FALSE"
 Name="E145: Shunting selected by driver"
>
<PreConditions>
<PreCondition>DMI.MasterDMI().In_ShuntingRequest.InputInformation.RequestStatus == Request.Response</PreCondition></PreConditions>
<Actions>
<Action>Kernel.HandleModeChange &lt;- HandleModeChange.ShuntingInitiatedByDriver</Action><Action>DMI.MasterDMI().In_ShuntingRequest.InputInformation.RequestStatus &lt;- Request.Disabled</Action><Action>DMI.MasterDMI().In_Start.InputInformation.RequestStatus &lt;- Request.Disabled</Action></Actions>
</RuleCondition></Conditions>
</Rule></SubRules>
</RuleCondition></Conditions>
</Rule></Rules>
</StateMachine></State></States>
</StateMachine></State><State
 X="340"
 Y="740"
 Width="80"
 Height="40"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="S150"
>
<ReqRef
 Id="Entry 5.11.2.2.S150"
>
</ReqRef><StateMachine
 InitialState="SendMARequest"
 NeedsRequirement="FALSE"
>
<ReqRef
 Id="Entry 5.11.2.2.S150"
>
</ReqRef><States>
<State
 X="110"
 Y="60"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="SendMARequest"
>
<ReqRef
 Id="Entry 5.11.2.2.S150.1"
>
</ReqRef><StateMachine
 InitialState=""
 NeedsRequirement="FALSE"
>
<Rules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 Verified="TRUE"
 Name="Send MA request"
>
<ReqRef
 Id="Entry 5.11.2.2.S150.1"
>
</ReqRef><SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Verified="TRUE"
 NeedsRequirement="FALSE"
 Name="Send MA request"
>
<PreConditions>
</PreConditions>
<Actions>
<Action>EURORADIO.SendMARequest ( aReason =&gt; Messages.Q_MARQSTREASON.Start_selected_by_driver )</Action><Action>THIS &lt;- HandleModeChange.TrainTrip.S150.MARequestSent</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</StateMachine></State><State
 X="110"
 Y="160"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="MARequestSent"
>
<ReqRef
 Id="Entry 5.11.2.2.S150.2"
>
</ReqRef><ReqRef
 Id="Entry 5.11.2.2.S150.3"
>
</ReqRef><ReqRef
 Id="Entry 5.11.2.2.S150.4"
>
</ReqRef><StateMachine
 InitialState=""
 NeedsRequirement="FALSE"
>
<Rules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 Verified="TRUE"
 NeedsRequirement="FALSE"
 Name="MARequestSent"
>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="E26"
>
<ReqRef
 Id="Entry 5.11.2.2.S150.2"
>
</ReqRef><PreConditions>
<PreCondition>SR.SRAuthorised()</PreCondition></PreConditions>
<Actions>
<Action>Kernel.HandleModeChange &lt;- HandleModeChange.TrainTrip.S160</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="E175"
>
<ReqRef
 Id="Entry 5.11.2.2.S150.3"
>
</ReqRef><ReqRef
 Id="5.9.5.1"
>
</ReqRef><ReqRef
 Id="5.7.4.1"
>
</ReqRef><ReqRef
 Id="5.19.5.1"
>
</ReqRef><PreConditions>
<PreCondition>Available ( MA.MA )</PreCondition><PreCondition>MA.ModeProfile.ModeProfileIsApplicable()</PreCondition></PreConditions>
<Actions>
<Action>Kernel.HandleModeChange &lt;- HandleModeChange.TrainTrip.S170</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</StateMachine></State></States>
</StateMachine></State><State
 X="20"
 Y="820"
 Width="80"
 Height="40"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="S160"
>
<ReqRef
 Id="Entry 5.11.2.2.S160"
>
</ReqRef><ReqRef
 Id="Entry 5.11.2.2.S160"
>
</ReqRef><StateMachine
 InitialState="RequestDriverAck"
 NeedsRequirement="FALSE"
>
<ReqRef
 Id="Entry 5.11.2.2.S160"
>
</ReqRef><Rules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="Request driver ack"
>
<ReqRef
 Id="Entry 5.11.2.2.S160.1"
>
</ReqRef><ReqRef
 Id="Entry 4.6.3.9"
>
</ReqRef><SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Request driver ack"
>
<PreConditions>
<PreCondition>DMI.MasterDMI().In_AcknOfSRMode.InputInformation.RequestStatus == Request.Disabled</PreCondition></PreConditions>
<Actions>
<Action>DMI.MasterDMI().InitiateAcknOfSRMode()</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</StateMachine></State><State
 X="340"
 Y="820"
 Width="80"
 Height="40"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="S170"
>
<ReqRef
 Id="Entry 5.11.2.2.S170"
>
</ReqRef><ReqRef
 Id="Entry 5.11.2.2.S170"
>
</ReqRef><StateMachine
 InitialState="RequestDriverAck"
 NeedsRequirement="FALSE"
>
<States>
<State
 X="70"
 Y="50"
 Width="110"
 Height="50"
 Implemented="TRUE"
 Name="RequestDriverAck"
>
<ReqRef
 Id="Entry 5.11.2.2.S170.1"
>
</ReqRef><StateMachine
 InitialState=""
 NeedsRequirement="FALSE"
>
<Rules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 Verified="TRUE"
 Name="Request driver ack"
>
<ReqRef
 Id="Entry 5.11.2.2.S170.1"
>
</ReqRef><ReqRef
 Id="Entry 4.6.3.16"
>
</ReqRef><SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Verified="TRUE"
 NeedsRequirement="FALSE"
 Name="Request driver ack"
>
<PreConditions>
</PreConditions>
<Actions>
<Action>THIS &lt;- HandleModeChange.TrainTrip.S170.DriverAckRequested</Action></Actions>
<SubRules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 Verified="TRUE"
 NeedsRequirement="FALSE"
 Name="Request ack for OS"
>
<ReqRef
 Id="5.9.5.1"
>
</ReqRef><ReqRef
 Id="5.9.1.2"
>
</ReqRef><SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Verified="TRUE"
 NeedsRequirement="FALSE"
 Name="OS"
>
<PreConditions>
<PreCondition>MA.ModeProfile.CurrentMode() == Default.Mode.ModeProfile.OS</PreCondition></PreConditions>
<Actions>
<Action>DMI.MasterDMI().InitiateAcknOfOSMode()</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 Implemented="TRUE"
 Verified="TRUE"
 NeedsRequirement="FALSE"
 Name="Request ack for LS"
>
<ReqRef
 Id="5.19.5.1"
>
</ReqRef><ReqRef
 Id="5.19.1.2"
>
</ReqRef><SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Verified="TRUE"
 NeedsRequirement="FALSE"
 Name="LS"
>
<PreConditions>
<PreCondition>MA.ModeProfile.CurrentMode() == Default.Mode.ModeProfile.LS</PreCondition></PreConditions>
<Actions>
<Action>DMI.MasterDMI().InitiateAcknOfLSMode()</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 Implemented="TRUE"
 Verified="TRUE"
 NeedsRequirement="FALSE"
 Name="Request ack for SH"
>
<ReqRef
 Id="5.7.4.1"
>
</ReqRef><ReqRef
 Id="5.7.1.4"
>
</ReqRef><SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Verified="TRUE"
 NeedsRequirement="FALSE"
 Name="SH"
>
<PreConditions>
<PreCondition>MA.ModeProfile.CurrentMode() == Default.Mode.ModeProfile.SH</PreCondition></PreConditions>
<Actions>
<Action>DMI.MasterDMI().InitiateAcknOfSHMode()</Action></Actions>
</RuleCondition></Conditions>
</Rule></SubRules>
</RuleCondition></Conditions>
</Rule></Rules>
</StateMachine></State><State
 X="70"
 Y="160"
 Width="110"
 Height="50"
 Implemented="TRUE"
 Name="DriverAckRequested"
>
<ReqRef
 Id="Entry 5.11.2.2.S170.2"
>
</ReqRef><StateMachine
 InitialState=""
 NeedsRequirement="FALSE"
>
</StateMachine></State></States>
</StateMachine></State><State
 X="330"
 Y="10"
 Width="80"
 Height="40"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="D020"
>
<ReqRef
 Id="Entry 5.11.2.2.D020"
>
</ReqRef><StateMachine
 InitialState=""
 NeedsRequirement="FALSE"
>
<Rules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="D020"
>
<ReqRef
 Id="Entry 5.11.2.2.D020"
>
</ReqRef><SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Verified="TRUE"
 NeedsRequirement="FALSE"
 Name="D020"
>
<PreConditions>
</PreConditions>
<Actions>
</Actions>
<SubRules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 Verified="TRUE"
 Name="Level 0, 1, NTC"
>
<ReqRef
 Id="Entry 5.11.2.2.D020.1"
>
</ReqRef><SubRules></SubRules>
<Conditions>
<RuleCondition
 NeedsRequirement="FALSE"
 Name="Level 0, 1, NTC"
>
<PreConditions>
<PreCondition>Kernel.Level.Value in [Level.L0, Level.L1, Level.LNTC]</PreCondition></PreConditions>
<Actions>
<Action>THIS &lt;- HandleModeChange.TrainTrip.A035</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 Implemented="TRUE"
 Verified="TRUE"
 Name="Level 2, 3"
>
<ReqRef
 Id="Entry 5.11.2.2.D020.2"
>
</ReqRef><SubRules></SubRules>
<Conditions>
<RuleCondition
 NeedsRequirement="FALSE"
 Name="Level 2, 3"
>
<PreConditions>
<PreCondition>Kernel.Level.Value in [Level.L2, Level.L3]</PreCondition></PreConditions>
<Actions>
<Action>THIS &lt;- HandleModeChange.TrainTrip.A030</Action></Actions>
</RuleCondition></Conditions>
</Rule></SubRules>
</RuleCondition></Conditions>
</Rule></Rules>
</StateMachine></State><State
 X="650"
 Y="330"
 Width="80"
 Height="40"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="D085"
>
<ReqRef
 Id="Entry 5.11.2.2.D085"
>
</ReqRef><StateMachine
 InitialState=""
 NeedsRequirement="FALSE"
>
<Rules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 Verified="TRUE"
 NeedsRequirement="FALSE"
 Name="D085"
>
<ReqRef
 Id="Entry 5.11.2.2.D085"
>
</ReqRef><SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Verified="TRUE"
 NeedsRequirement="FALSE"
 Name="D085"
>
<PreConditions>
</PreConditions>
<Actions>
</Actions>
<SubRules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 Verified="TRUE"
 Name="Valid data"
>
<ReqRef
 Id="Entry 5.11.2.2.D085.2"
>
</ReqRef><ReqRef
 Id="Entry 4.6.3.61"
>
</ReqRef><ReqRef
 Id="Entry 4.6.3.62"
>
</ReqRef><SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Verified="TRUE"
 NeedsRequirement="FALSE"
 Name="Valid data"
>
<PreConditions>
<PreCondition>Kernel.TrainData.TrainData.DataState == Default.DataState.Valid</PreCondition></PreConditions>
<Actions>
<Action>THIS &lt;- HandleModeChange.TrainTrip.D090</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 Implemented="TRUE"
 Verified="TRUE"
 Name="No valid data"
>
<ReqRef
 Id="Entry 5.11.2.2.D085.1"
>
</ReqRef><ReqRef
 Id="Entry 4.6.3.66"
>
</ReqRef><SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Verified="TRUE"
 NeedsRequirement="FALSE"
 Name="No valid data"
>
<PreConditions>
<PreCondition>Kernel.TrainData.TrainData.DataState != Default.DataState.Valid</PreCondition></PreConditions>
<Actions>
<Action>THIS &lt;- HandleModeChange.TrainTrip.A140</Action></Actions>
</RuleCondition></Conditions>
</Rule></SubRules>
</RuleCondition></Conditions>
</Rule></Rules>
</StateMachine></State><State
 X="650"
 Y="410"
 Width="80"
 Height="40"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="D090"
>
<ReqRef
 Id="Entry 5.11.2.2.D090"
>
</ReqRef><StateMachine
 InitialState=""
 NeedsRequirement="FALSE"
>
<Rules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 Verified="TRUE"
 NeedsRequirement="FALSE"
 Name="D090"
>
<ReqRef
 Id="Entry 5.11.2.2.D090"
>
</ReqRef><SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Verified="TRUE"
 NeedsRequirement="FALSE"
 Name="D090"
>
<PreConditions>
</PreConditions>
<Actions>
</Actions>
<SubRules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 Verified="TRUE"
 Name="Level 0"
>
<ReqRef
 Id="Entry 5.11.2.2.D090.1"
>
</ReqRef><ReqRef
 Id="Entry 4.6.3.61"
>
</ReqRef><SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Verified="TRUE"
 NeedsRequirement="FALSE"
 Name="Level 0"
>
<PreConditions>
<PreCondition>Kernel.Level.Value == Default.Level.L0</PreCondition></PreConditions>
<Actions>
<Action>THIS &lt;- HandleModeChange.TrainTrip.A145</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 Implemented="TRUE"
 Verified="TRUE"
 Name="Level NTC"
>
<ReqRef
 Id="Entry 5.11.2.2.D090.2"
>
</ReqRef><ReqRef
 Id="Entry 4.6.3.62"
>
</ReqRef><SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Verified="TRUE"
 NeedsRequirement="FALSE"
 Name="Level NTC"
>
<PreConditions>
<PreCondition>Kernel.Level.Value == Default.Level.LNTC</PreCondition></PreConditions>
<Actions>
<Action>THIS &lt;- HandleModeChange.TrainTrip.A150</Action></Actions>
</RuleCondition></Conditions>
</Rule></SubRules>
</RuleCondition></Conditions>
</Rule></Rules>
</StateMachine></State><State
 X="650"
 Y="250"
 Width="80"
 Height="40"
 Implemented="TRUE"
 Name="A140"
>
<ReqRef
 Id="Entry 5.11.2.2.A140"
>
</ReqRef><StateMachine
 InitialState=""
 NeedsRequirement="FALSE"
>
</StateMachine></State><State
 X="570"
 Y="500"
 Width="80"
 Height="40"
 Implemented="TRUE"
 Name="A145"
>
<ReqRef
 Id="Entry 5.11.2.2.A145"
>
</ReqRef><StateMachine
 InitialState=""
 NeedsRequirement="FALSE"
>
</StateMachine></State><State
 X="20"
 Y="420"
 Width="80"
 Height="40"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="A115"
>
<ReqRef
 Id="Entry 5.11.2.2.A115"
>
</ReqRef><StateMachine
 InitialState=""
 NeedsRequirement="FALSE"
>
<Rules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 Verified="TRUE"
 Name="A115"
>
<ReqRef
 Id="Entry 5.11.2.2.A115.2"
>
</ReqRef><SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Verified="TRUE"
 NeedsRequirement="FALSE"
 Name="A115"
>
<PreConditions>
</PreConditions>
<Actions>
<Action>THIS &lt;- HandleModeChange.TrainTrip.S120</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</StateMachine></State></States>
<Rules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="RBC session is lost"
>
<ReqRef
 Id="5.11.4.2"
>
</ReqRef><SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="RBC session is lost"
>
<PreConditions>
<PreCondition>Kernel.Level.Value in [Level.L2, Level.L3]</PreCondition><PreCondition>NOT EURORADIO.HasActiveSession()</PreCondition><PreCondition>Mode == Mode.PT</PreCondition></PreConditions>
<Actions>
<Action>DMI.MasterDMI().InitiateOverrideRequest()</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</StateMachine></State><State
 X="30"
 Y="160"
 Width="380"
 Height="50"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="ShuntingInitiatedByDriver"
>
<StateMachine
 InitialState="S0"
 NeedsRequirement="FALSE"
>
<ReqRef
 Id="5.6"
>
</ReqRef><States>
<State
 X="60"
 Y="180"
 Width="100"
 Height="50"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="D020"
>
<StateMachine
 InitialState=""
 Implemented="TRUE"
 NeedsRequirement="FALSE"
>
<Rules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="D020"
>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Level 0, 1 or NTC"
>
<ReqRef
 Id="Entry 5.6.2.2.D020.1"
>
</ReqRef><PreConditions>
<PreCondition>Level.Value in [Level.L0, Level.L1, Level.LNTC]</PreCondition></PreConditions>
<Actions>
<Action>THIS &lt;- ShuntingInitiatedByDriver.A050</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="Level 2 or 3"
>
<ReqRef
 Id="Entry 5.6.2.2.D020.2"
>
</ReqRef><PreConditions>
<PreCondition>Level.Value in [Level.L2, Level.L3]</PreCondition></PreConditions>
<Actions>
<Action>THIS &lt;- ShuntingInitiatedByDriver.A045</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</StateMachine></State><State
 X="60"
 Y="310"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="A050"
>
<ReqRef
 Id="Entry 5.6.2.2.A050"
>
</ReqRef><StateMachine
 InitialState=""
 Implemented="TRUE"
 NeedsRequirement="FALSE"
>
<Rules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="A050"
>
<ReqRef
 Id="Entry 5.6.2.2.A050.1"
>
</ReqRef><ReqRef
 Id="5.6.4.3"
>
</ReqRef><SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Transition to SH mode"
>
<PreConditions>
</PreConditions>
<Actions>
<Action>THIS &lt;- HandleModeChange.ShuntingInitiatedByDriver.D040</Action></Actions>
<SubRules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="Handle new balises"
>
<ReqRef
 Id="Entry 5.6.2.2.A050"
>
</ReqRef><SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="New list of balises received"
>
<PreConditions>
<PreCondition>Available ( FIRST_IN EURORADIO.EuroradioMessageIn.SH_AUTHORISED.Sequence1 | Available ( X.LIST_OF_BALISES_FOR_SH_AREA ) )</PreCondition></PreConditions>
<Actions>
<Action>Shunting.HandleNewListOfBaliseGroups ( ( FIRST_IN EURORADIO.EuroradioMessageIn.SH_AUTHORISED.Sequence1 | Available ( X.LIST_OF_BALISES_FOR_SH_AREA ) ).LIST_OF_BALISES_FOR_SH_AREA )</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Balises not received"
>
<PreConditions>
</PreConditions>
<Actions>
<Action>Kernel.Shunting.BaliseGroupsForShArea &lt;- []</Action></Actions>
</RuleCondition></Conditions>
</Rule></SubRules>
</RuleCondition></Conditions>
</Rule></Rules>
</StateMachine></State><State
 X="360"
 Y="180"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="A045"
>
<ReqRef
 Id="Entry 5.6.2.2.A045"
>
</ReqRef><Comment></Comment>
<StateMachine
 InitialState=""
 Implemented="TRUE"
 NeedsRequirement="FALSE"
>
<Rules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="A045"
>
<ReqRef
 Id="Entry 5.6.2.2.A045"
>
</ReqRef><ReqRef
 Id="Entry 5.6.2.2.A045.1"
>
</ReqRef><ReqRef
 Id="5.6.4.1.1"
>
</ReqRef><ReqRef
 Id="5.6.4.1.2"
>
</ReqRef><SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Send Request for Shunting"
>
<PreConditions>
</PreConditions>
<Actions>
<Action>THIS &lt;- HandleModeChange.ShuntingInitiatedByDriver.S050</Action><Action>EURORADIO.SendRequestForShunting()</Action><Action>Shunting.NumberOfSentRequestRepetitions &lt;- 0</Action><Action>Shunting.TimeOfTheLastSentRequest &lt;- CurrentTime</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</StateMachine></State><State
 X="360"
 Y="310"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="S050"
>
<ReqRef
 Id="Entry 5.6.2.2.S050"
>
</ReqRef><StateMachine
 InitialState=""
 Implemented="TRUE"
 NeedsRequirement="FALSE"
>
<Rules>
<Rule
 Priority="UpdateINTERNAL"
 Implemented="TRUE"
 Name="S050"
>
<ReqRef
 Id="Entry 5.6.2.2.S050"
>
</ReqRef><SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="E090: SH authorised"
>
<ReqRef
 Id="Entry 5.6.2.2.S050.1"
>
</ReqRef><PreConditions>
<PreCondition>Available ( EURORADIO.EuroradioMessageIn.SH_AUTHORISED )</PreCondition></PreConditions>
<Actions>
<Action>THIS &lt;- HandleModeChange.ShuntingInitiatedByDriver.A050</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="E215: SH refused"
>
<ReqRef
 Id="Entry 5.6.2.2.S050.2"
>
</ReqRef><PreConditions>
<PreCondition>Available ( EURORADIO.EuroradioMessageIn.SH_REFUSED )</PreCondition></PreConditions>
<Actions>
<Action>THIS &lt;- HandleModeChange.ShuntingInitiatedByDriver.A220</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="No answer, maximum number of requests reached"
>
<ReqRef
 Id="5.6.4.1.2"
>
</ReqRef><Comment></Comment>
<PreConditions>
<PreCondition>Shunting.TimeOfTheLastSentRequest + EURORADIO.TimeBeforeMessageRepetition &lt;= CurrentTime</PreCondition><PreCondition>Shunting.NumberOfSentRequestRepetitions == 3</PreCondition></PreConditions>
<Actions>
<Action>DMI.MasterDMI().DisplayShuntingRequestNotAnsweredByRbc()</Action><Action>EURORADIO.CloseRBCSession()</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="No answer, a new request can be sent"
>
<ReqRef
 Id="5.6.4.1.1"
>
</ReqRef><PreConditions>
<PreCondition>Shunting.TimeOfTheLastSentRequest + EURORADIO.TimeBeforeMessageRepetition &lt;= CurrentTime</PreCondition><PreCondition>EURORADIO.HasActiveSession()</PreCondition></PreConditions>
<Actions>
<Action>EURORADIO.SendRequestForShunting()</Action><Action>Shunting.NumberOfSentRequestRepetitions &lt;- Shunting.NumberOfSentRequestRepetitions + 1</Action><Action>Shunting.TimeOfTheLastSentRequest &lt;- CurrentTime</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="No answer, no communication session"
>
<ReqRef
 Id="5.6.4.1.3"
>
</ReqRef><PreConditions>
<PreCondition>EURORADIO.NoSession()</PreCondition></PreConditions>
<Actions>
<Action>THIS &lt;- HandleModeChange.Override</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</StateMachine></State><State
 X="660"
 Y="240"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="A220"
>
<ReqRef
 Id="Entry 5.6.2.2.A220"
>
</ReqRef><StateMachine
 InitialState=""
 Implemented="TRUE"
 NeedsRequirement="FALSE"
>
<Rules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="A220"
>
<ReqRef
 Id="Entry 5.6.2.2.A220"
>
</ReqRef><SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="E13: Inform driver SH refused"
>
<PreConditions>
</PreConditions>
<Actions>
<Action>DMI.MasterDMI().DisplayShuntingRefusedByRbc()</Action></Actions>
<SubRules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="Post action"
>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="E13: Shunting refused"
>
<ReqRef
 Id="Entry 5.4.3.2.S10.1.1"
>
</ReqRef><ReqRef
 Id="5.4.5.3.7.2"
>
</ReqRef><PreConditions>
<PreCondition>Kernel.Mode == Mode.SB</PreCondition></PreConditions>
<Actions>
<Action>THIS &lt;- HandleModeChange.StartOfMission.S10</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="E165: Shunting refused"
>
<ReqRef
 Id="Entry 5.11.2.2.S140.4"
>
</ReqRef><PreConditions>
<PreCondition>Kernel.Mode == Mode.PT</PreCondition></PreConditions>
<Actions>
<Action>THIS &lt;- HandleModeChange.TrainTrip.S140</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="End procedure"
>
<ReqRef
 Id="Entry 5.6.2.2.A220.1"
>
</ReqRef><PreConditions>
</PreConditions>
<Actions>
<Action>THIS &lt;- HandleModeChange.NoProcedure</Action></Actions>
</RuleCondition></Conditions>
</Rule></SubRules>
</RuleCondition></Conditions>
</Rule></Rules>
</StateMachine></State><State
 X="60"
 Y="440"
 Width="100"
 Height="50"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="D040"
>
<StateMachine
 InitialState=""
 Implemented="TRUE"
 NeedsRequirement="FALSE"
>
<Rules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="D040"
>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Mission is on-going"
>
<ReqRef
 Id="Entry 5.6.2.2.D040.1"
>
</ReqRef><PreConditions>
<PreCondition>MissionIsOnGoing</PreCondition></PreConditions>
<Actions>
<Action>THIS &lt;- ShuntingInitiatedByDriver.A100</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="No on-going mission"
>
<ReqRef
 Id="Entry 5.6.2.2.D040.2"
>
</ReqRef><PreConditions>
<PreCondition>NOT MissionIsOnGoing</PreCondition></PreConditions>
<Actions>
<Action>THIS &lt;- ShuntingInitiatedByDriver.D080</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</StateMachine></State><State
 X="660"
 Y="570"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="S100"
>
<ReqRef
 Id="Entry 5.6.2.2.S100"
>
</ReqRef><Comment></Comment>
<StateMachine
 InitialState=""
 Implemented="TRUE"
 NeedsRequirement="FALSE"
>
<Rules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="S100"
>
<ReqRef
 Id="Entry 5.6.2.2.S100"
>
</ReqRef><ReqRef
 Id="Entry 5.6.2.2.S100.1"
>
</ReqRef><SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="E055: RBC order to terminate session"
>
<PreConditions>
<PreCondition>Available ( EURORADIO.EuroradioMessageIn.ACKNOWLEDGEMENT_OF_TERMINATION_OF_A_COMMUNICATION_SESSION )</PreCondition></PreConditions>
<Actions>
<Action>THIS &lt;- HandleModeChange.ShuntingInitiatedByDriver.A115</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="No order received, maximum number of requests reached"
>
<ReqRef
 Id="5.6.4.3"
>
</ReqRef><ReqRef
 Id="A1.1.17.1"
>
</ReqRef><PreConditions>
<PreCondition>EURORADIO.PositionReport.LastPositionReport.Time + EURORADIO.TimeBeforeMessageRepetition &gt;= CurrentTime</PreCondition><PreCondition>EURORADIO.PositionReport.NumberOfSentReportRepetitions == 3</PreCondition></PreConditions>
<Actions>
<Action>EURORADIO.CloseRBCSession()</Action><Action>THIS &lt;- HandleModeChange.NoProcedure</Action><Action>EURORADIO.PositionReport.NumberOfSentReportRepetitions &lt;- 0</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="No order received, a new request can be sent"
>
<ReqRef
 Id="5.6.4.2"
>
</ReqRef><PreConditions>
<PreCondition>EURORADIO.PositionReport.LastPositionReport.Time + EURORADIO.TimeBeforeMessageRepetition &gt;= CurrentTime</PreCondition><PreCondition>EURORADIO.HasActiveSession()</PreCondition></PreConditions>
<Actions>
<Action>EURORADIO.PositionReport.SendPositionReport()</Action><Action>EURORADIO.PositionReport.NumberOfSentReportRepetitions &lt;- EURORADIO.PositionReport.NumberOfSentReportRepetitions + 1</Action><Action>EURORADIO.PositionReport.LastPositionReport.Time &lt;- CurrentTime</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</StateMachine></State><State
 X="360"
 Y="570"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="A115"
>
<ReqRef
 Id="Entry 5.6.2.2.A115"
>
</ReqRef><StateMachine
 InitialState=""
 Implemented="TRUE"
 NeedsRequirement="FALSE"
>
<Rules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="A115"
>
<ReqRef
 Id="Entry 5.6.2.2.A115"
>
</ReqRef><ReqRef
 Id="Entry 5.6.2.2.A115.1"
>
</ReqRef><SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Terminate session"
>
<PreConditions>
</PreConditions>
<Actions>
<Action>THIS &lt;- HandleModeChange.NoProcedure</Action><Action>EURORADIO.CloseRBCSession()</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</StateMachine></State><State
 X="60"
 Y="570"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="A100"
>
<ReqRef
 Id="Entry 5.6.2.2.A100"
>
</ReqRef><StateMachine
 InitialState=""
 Implemented="TRUE"
 NeedsRequirement="FALSE"
>
<Rules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="A100"
>
<ReqRef
 Id="Entry 5.6.2.2.A100"
>
</ReqRef><SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="End the mission"
>
<PreConditions>
</PreConditions>
<Actions>
<Action>THIS &lt;- HandleModeChange.EndOfMission</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</StateMachine></State><State
 X="360"
 Y="440"
 Width="100"
 Height="50"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="D080"
>
<StateMachine
 InitialState=""
 Implemented="TRUE"
 NeedsRequirement="FALSE"
>
<Rules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="D080"
>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 Name="Level 2 or 3"
>
<ReqRef
 Id="Entry 5.6.2.2.D080.1"
>
</ReqRef><PreConditions>
<PreCondition>Level.Value in [Level.L2, Level.L3]</PreCondition></PreConditions>
<Actions>
<Action>THIS &lt;- ShuntingInitiatedByDriver.A095</Action></Actions>
</RuleCondition><RuleCondition
 Implemented="TRUE"
 Name="Level 0, 1 or NTC"
>
<ReqRef
 Id="Entry 5.6.2.2.D080.2"
>
</ReqRef><PreConditions>
<PreCondition>Level.Value in [Level.L0, Level.L1, Level.LNTC]</PreCondition></PreConditions>
<Actions>
<Action>HandleModeChange &lt;- HandleModeChange.NoProcedure</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</StateMachine></State><State
 X="660"
 Y="440"
 Width="100"
 Height="50"
 Implemented="TRUE"
 Name="A095"
>
<ReqRef
 Id="Entry 5.6.2.2.A095.1"
>
</ReqRef><StateMachine
 InitialState=""
 Implemented="TRUE"
 NeedsRequirement="FALSE"
>
<Rules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="A095"
>
<ReqRef
 Id="Entry 5.6.2.2.A095.1"
>
</ReqRef><SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Report mode change to RBC"
>
<PreConditions>
</PreConditions>
<Actions>
<Action>THIS &lt;- HandleModeChange.ShuntingInitiatedByDriver.S100</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</StateMachine></State><State
 X="60"
 Y="50"
 Width="100"
 Height="50"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="S0"
>
<StateMachine
 InitialState=""
 Implemented="TRUE"
 NeedsRequirement="FALSE"
>
<Rules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 Name="E015"
>
<ReqRef
 Id="Entry 5.6.2.2.E015"
>
</ReqRef><ReqRef
 Id="Entry 5.6.2.2.E015.1"
>
</ReqRef><SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="E015"
>
<PreConditions>
</PreConditions>
<Actions>
<Action>THIS &lt;- HandleModeChange.ShuntingInitiatedByDriver.D020</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</StateMachine></State></States>
</StateMachine></State><State
 X="730"
 Y="60"
 Width="310"
 Height="50"
 Name="Override"
>
<StateMachine
 InitialState=""
 NeedsRequirement="FALSE"
>
<ReqRef
 Id="5.8"
>
</ReqRef></StateMachine></State><State
 X="30"
 Y="60"
 Width="380"
 Height="50"
 NeedsRequirement="FALSE"
 Name="EndOfMission"
>
<ReqRef
 Id="5.5"
>
</ReqRef><StateMachine
 InitialState=""
 NeedsRequirement="FALSE"
>
<ReqRef
 Id="5.5"
>
</ReqRef></StateMachine></State><State
 X="550"
 Y="690"
 Width="100"
 Height="50"
 Name="StandBy"
>
<StateMachine
 InitialState=""
 NeedsRequirement="FALSE"
>
</StateMachine></State><State
 X="220"
 Y="690"
 Width="100"
 Height="50"
 Name="SystemFailure"
>
<StateMachine
 InitialState=""
 NeedsRequirement="FALSE"
>
</StateMachine></State></States>
</StateMachine></StateMachines>
<Procedures>
<Procedure
 NeedsRequirement="FALSE"
 Name="HandleInputs"
>
<Rules>
<Rule
 Priority="Processing"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="HandleOdometryInputs"
>
<Comment>When a new odometer message is received, its content is copied to EFS internal variables.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 NeedsRequirement="FALSE"
 Name="HandleOdometryInputs"
>
<Comment></Comment>
<PreConditions>
<PreCondition>Available ( Odometry.Message )</PreCondition></PreConditions>
<Actions>
<Action>Odometry.StoreOdometerMessage ( Odometry.Message )</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="HandleBTMInputs"
>
<Comment>When a new balise telegram is received, its content is copied to EFS internal variables.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 NeedsRequirement="FALSE"
 Name="HandleBTMInputs"
>
<Comment></Comment>
<PreConditions>
<PreCondition>Available ( BTM.Message )</PreCondition></PreConditions>
<Actions>
<Action>BTM.StoreBaliseGroupMessage ( BTM.Message )</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 NeedsRequirement="FALSE"
 Name="HandleEuroradioInputs"
>
<Comment>When a new Euroradio message is received, its content is copied to EFS internal variables.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 NeedsRequirement="FALSE"
 Name="HandleEuroradioInputs"
>
<Comment></Comment>
<PreConditions>
<PreCondition>Available ( EURORADIO.EuroradioMessageIn )</PreCondition></PreConditions>
<Actions>
<Action>EURORADIO.HandleEuroradioMessage ( EURORADIO.EuroradioMessageIn )</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 NeedsRequirement="FALSE"
 Name="UpdateKernelMode"
>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 NeedsRequirement="FALSE"
 Name="UpdateKernelMode"
>
<PreConditions>
</PreConditions>
<Actions>
<Action>ModeTransitions.UpdateMode()</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 NeedsRequirement="FALSE"
 Name="UpdatePositionState"
>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 NeedsRequirement="FALSE"
 Name="UpdatePositionState"
>
<PreConditions>
</PreConditions>
<Actions>
<Action>TrainPosition.UpdatePositionState()</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 NeedsRequirement="FALSE"
 Name="InitializeInternalVariables"
>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 NeedsRequirement="FALSE"
 Name="InitializeInternalVariables"
>
<PreConditions>
</PreConditions>
<Actions>
<Action>SpeedAndDistanceMonitoring.UpdateMonitoring()</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</Procedure><Procedure
 NeedsRequirement="FALSE"
 Name="InitializeTestEnvironment"
>
<Rules>
<Rule
 Priority="Processing"
 NeedsRequirement="FALSE"
 Name="DMI"
>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 NeedsRequirement="FALSE"
 Name="DMI"
>
<PreConditions>
</PreConditions>
<Actions>
<Action>DMI.DMI1.DeskOpen &lt;- True</Action><Action>DMI.DMI1.IsMaster &lt;- True</Action><Action>DMI.DMI2.DeskOpen &lt;- False</Action><Action>DMI.DMI2.IsMaster &lt;- False</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 NeedsRequirement="FALSE"
 Name="Train position"
>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 NeedsRequirement="FALSE"
 Name="Train position"
>
<PreConditions>
</PreConditions>
<Actions>
<Action>BTM.LRBG &lt;- BTM.BaliseGroup
{
    Position =&gt; BTM.Position
    {
        Position =&gt; 150.0,
        UnderReadingAmountOdo =&gt; 2.0,
        OverReadingAmountOdo =&gt; 1.0
    },
    NID =&gt; 1986,
    Orientation =&gt; Orientation.Nominal
}</Action><Action>Kernel.TrainPosition.Position &lt;- Kernel.TrainPosition.TrainPosition
{
    DirectionalPositionInformation =&gt; Kernel.TrainPosition.DirectionalTrainPositionInformation
    {
        TrainFrontEndPosition =&gt; Orientation.Nominal,
        TrainOrientation =&gt; Orientation.Nominal,
        TrainRunningDirection =&gt; Orientation.Nominal
    },
    DataState =&gt; Default.DataState.Valid
}</Action><Action>Odometry.NominalDistance &lt;- 150.0</Action><Action>Odometry.Accuracy &lt;- Odometry.OdometerAccuracy
{
    D_ura =&gt; 12.0,
    D_ora =&gt; 14.0,
    V_ora =&gt; 1.0,
    V_ura =&gt; 2.0
}</Action><Action>Kernel.TrainPosition.Position.DirectionalPositionInformation.TrainOrientation &lt;- Default.Orientation.Nominal</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 NeedsRequirement="FALSE"
 Name="Train data"
>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 NeedsRequirement="FALSE"
 Name="Train data"
>
<PreConditions>
</PreConditions>
<Actions>
<Action>TrainData.Initialize()</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 NeedsRequirement="FALSE"
 Name="Euroradio"
>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 NeedsRequirement="FALSE"
 Name="Euroradio"
>
<PreConditions>
</PreConditions>
<Actions>
<Action>EURORADIO.CurrentRadioSession &lt;- EURORADIO.RadioSession{
SessionInfo =&gt; EURORADIO.RadioSessionInformation{}
}</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="Train integrity"
>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 NeedsRequirement="FALSE"
 Name="Train integrity"
>
<PreConditions>
</PreConditions>
<Actions>
<Action>Kernel.TrainIntegrity.Status &lt;- Messages.Q_LENGTH.Train_integrity_confirmed_by_driver</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="Processing"
 NeedsRequirement="FALSE"
 Name="Power on"
>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 NeedsRequirement="FALSE"
 Name="Power on"
>
<PreConditions>
</PreConditions>
<Actions>
<Action>PowerOn &lt;- True</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</Procedure></Procedures>
<Variables>
<Variable
 Type="DriverId"
 DefaultValue=""
 VariableMode="Internal"
 Implemented="TRUE"
 Name="DriverId"
>
<ReqRef
 Id="5.4.2.2"
>
</ReqRef><ReqRef
 Id="3.18.4.1.1"
>
</ReqRef><Comment>The data state and the value of the driver id.</Comment>
</Variable><Variable
 Type="Kernel.LevelData"
 DefaultValue=""
 VariableMode="Internal"
 Implemented="TRUE"
 Name="Level"
>
<ReqRef
 Id="5.4.2.2"
>
</ReqRef><ReqRef
 Id="2.6.2.1"
>
<Comment></Comment>
</ReqRef><Comment>Indicates the state and the value of the current ERTMS/ETCS level of the train.</Comment>
</Variable><Variable
 Type="InhibitedLevels"
 DefaultValue=""
 VariableMode="Internal"
 Implemented="TRUE"
 Name="InhibitedLevels"
>
<ReqRef
 Id="3.15.9.2"
>
</ReqRef><Comment></Comment>
</Variable><Variable
 Type="Mode"
 DefaultValue="Mode.NP"
 VariableMode="Internal"
 Implemented="TRUE"
 Name="Mode"
>
<ReqRef
 Id="4.3.2.1"
>
</ReqRef><Comment></Comment>
</Variable><Variable
 Type="Boolean"
 DefaultValue="False"
 VariableMode="Internal"
 Implemented="TRUE"
 Name="PowerOn"
>
<ReqRef
 Id="Entry 4.6.3.5"
>
</ReqRef><Comment>Indicates whether the EVC is On or Off.</Comment>
</Variable><Variable
 Type="TrainRunningNumber"
 DefaultValue=""
 VariableMode="Internal"
 Implemented="TRUE"
 Name="TrainRunningNumber"
>
<ReqRef
 Id="5.4.2.2"
>
<Comment></Comment>
</ReqRef><ReqRef
 Id="3.18.4.5.1"
>
</ReqRef><ReqRef
 Id="Entry 4.7.2.2.12"
>
</ReqRef><Comment></Comment>
</Variable><Variable
 Type="Kernel.EmergencyStops"
 DefaultValue=""
 VariableMode="Internal"
 Implemented="TRUE"
 Name="EmergencyStops"
>
<ReqRef
 Id="3.10.2.1"
>
</ReqRef><ReqRef
 Id="3.10.3.1"
>
</ReqRef><Comment></Comment>
</Variable><Variable
 Type="Boolean"
 DefaultValue="Boolean.False"
 VariableMode="Internal"
 Implemented="TRUE"
 Name="EmergencyBrakeApplied"
>
<ReqRef
 Id="3.10.2.1"
>
</ReqRef><ReqRef
 Id="Entry 5.11.2.2.A105"
>
</ReqRef><Comment>Indicates the status of emergency brake of the train.</Comment>
</Variable><Variable
 Type="Default.BaseTypes.Distance"
 DefaultValue=""
 VariableMode="Internal"
 Implemented="TRUE"
 Name="FirstTargetAtZeroSpeed"
>
<ReqRef
 Id="3.15.10.1"
>
</ReqRef><ReqRef
 Id="Entry 4.7.2.2.45"
>
</ReqRef><Comment>Represents the first target at zero speed.</Comment>
</Variable><Variable
 Type="Default.BaseTypes.Distance"
 VariableMode="Internal"
 Implemented="TRUE"
 Name="IndicationLocationAtMrspSpeed"
>
<ReqRef
 Id="Entry 4.7.2.2.44"
>
</ReqRef><ReqRef
 Id="3.15.10.1"
>
</ReqRef><Comment>The indication location at MRSP speed.</Comment>
</Variable><Variable
 Type="Kernel.SupervisionStatus"
 DefaultValue=""
 VariableMode="Internal"
 Implemented="TRUE"
 Name="SupervisionStatus"
>
<ReqRef
 Id="Entry 4.7.2.2.8"
>
</ReqRef><ReqRef
 Id="3.13.10.1.1"
>
</ReqRef><Comment></Comment>
</Variable><Variable
 Type="Default.BaseTypes.Distance"
 DefaultValue="0.0"
 VariableMode="Internal"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="TargetDistance"
>
<ReqRef
 Id="Entry 4.7.2.2.6"
>
</ReqRef><Comment>The target distance of the train.</Comment>
</Variable><Variable
 Type="TrainIntegrity"
 DefaultValue=""
 VariableMode="InOut"
 Implemented="TRUE"
 Name="TrainIntegrity"
>
<ReqRef
 Id="3.6.5.2.3"
>
</ReqRef><Comment>This variable represens the train integrity information as described in 3.6.5.2.3.</Comment>
</Variable><Variable
 Type="Kernel.NationalValues.NationalDefaultData"
 DefaultValue=""
 VariableMode="Internal"
 Implemented="TRUE"
 Name="DefaultValues"
>
<ReqRef
 Id="Table 3.A3.2.1"
>
</ReqRef><ReqRef
 Id="3.18.2.5"
>
</ReqRef><Comment></Comment>
</Variable><Variable
 Type="String"
 DefaultValue=""
 VariableMode="Internal"
 Implemented="TRUE"
 Name="NationalSystemId"
>
<ReqRef
 Id="3.15.6.1"
>
</ReqRef><Comment>Represents the id of the current national system.</Comment>
</Variable><Variable
 Type="OperatedSystemVersion"
 DefaultValue=""
 VariableMode="InOut"
 Implemented="TRUE"
 Name="OperatedSystemVersion"
>
<ReqRef
 Id="3.17.2.1"
>
<Comment></Comment>
</ReqRef><Comment>The version of the ERTMS/ETCS system.</Comment>
</Variable><Variable
 Type="Boolean"
 DefaultValue="Boolean.False"
 VariableMode="Internal"
 Implemented="TRUE"
 Name="EquipmentIsolated"
>
<ReqRef
 Id="Entry 4.6.3.2"
>
</ReqRef><Comment>Indicates if the ERTMS/ETCS on-board equipment is isolated.</Comment>
</Variable><Variable
 Type="Boolean"
 DefaultValue="Boolean.False"
 VariableMode="Internal"
 Implemented="TRUE"
 Name="MissionIsOnGoing"
>
<ReqRef
 Id="Entry 5.4.3.2.S10.2"
>
</ReqRef><ReqRef
 Id="Entry 5.4.3.2.S22.1"
>
</ReqRef><ReqRef
 Id="Entry 5.4.3.2.S23.1"
>
</ReqRef><ReqRef
 Id="Entry 5.4.3.2.S24.1"
>
</ReqRef><ReqRef
 Id="Entry 5.4.3.2.S25.1"
>
</ReqRef><ReqRef
 Id="5.4.6.1"
>
</ReqRef><ReqRef
 Id="5.4.6.2"
>
</ReqRef><ReqRef
 Id="Entry 5.4.3.2.S21.3"
>
</ReqRef><Comment>Indicates if the train has started a mission.</Comment>
</Variable><Variable
 Type="Default.BaseTypes.Time"
 DefaultValue="0.0"
 VariableMode="Internal"
 Implemented="TRUE"
 Name="CurrentTime"
>
<ReqRef
 Id="3.18.5.1"
>
</ReqRef><Comment>Represents the current time of the EVC. Its value increases each cycle by the value of the constant CycleDuration.</Comment>
</Variable><Variable
 Type="Default.BaseTypes.Time"
 DefaultValue="0.34"
 VariableMode="Internal"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="CycleDuration"
>
<Comment>Represents the duration of a whole EVC cycle.</Comment>
</Variable><Variable
 Type="Messages.NID_ENGINE"
 DefaultValue="0"
 VariableMode="Internal"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="NidEngine"
>
<Comment>The NID of the engine, used for sending messages to the trackside.</Comment>
</Variable><Variable
 Type="String"
 VariableMode="Internal"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="TripReason"
>
<ReqRef
 Id="Entry 4.7.2.2.9"
>
</ReqRef><Comment>Represents the trip raison, if any.</Comment>
</Variable><Variable
 Type="Boolean"
 DefaultValue="Boolean.False"
 VariableMode="Incoming"
 Implemented="TRUE"
 Name="NLSignalReceived"
>
<ReqRef
 Id="Entry 4.6.3.47"
>
</ReqRef><Comment>Indicates if the &quot;non leading&quot; input signal is received.</Comment>
</Variable><Variable
 Type="Boolean"
 DefaultValue="Boolean.False"
 VariableMode="Incoming"
 Implemented="TRUE"
 Name="SleepingSignalIsReceived"
>
<ReqRef
 Id="Entry 4.6.3.4"
>
</ReqRef><ReqRef
 Id="Entry 4.6.3.15"
>
</ReqRef><Comment>Indicates if the &quot;sleeping&quot; input signal is received.</Comment>
</Variable><Variable
 Type="Kernel.HandleModeChangeSM"
 VariableMode="Internal"
 Name="HandleModeChange"
>
</Variable></Variables>
<Rules>
<Rule
 Priority="UpdateINTERNAL"
 NeedsRequirement="FALSE"
 Name="HandleInputs"
>
<Comment>Initialises a new EFS cycle with input variables.</Comment>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 NeedsRequirement="FALSE"
 Name="HandleInputs"
>
<Comment></Comment>
<PreConditions>
</PreConditions>
<Actions>
<Action>HandleInputs()</Action></Actions>
</RuleCondition></Conditions>
</Rule><Rule
 Priority="CleanUp"
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="UpdateSystemTime"
>
<SubRules></SubRules>
<Conditions>
<RuleCondition
 Implemented="TRUE"
 NeedsRequirement="FALSE"
 Name="UpdateSystemTime"
>
<Comment></Comment>
<PreConditions>
</PreConditions>
<Actions>
<Action>CurrentTime &lt;- CurrentTime + CycleDuration</Action></Actions>
</RuleCondition></Conditions>
</Rule></Rules>
</NameSpace>
