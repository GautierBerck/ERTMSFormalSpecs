//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EFSDriver.EFSService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Value", Namespace="http://schemas.datacontract.org/2004/07/EFSIPCInterface")]
    [System.SerializableAttribute()]
    public partial class Value : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Priority", Namespace="http://schemas.datacontract.org/2004/07/EFSIPCInterface")]
    public enum Priority : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Verification = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UpdateInternal = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Process = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UpdateOutput = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CleanUp = 4,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="EFSService.IEFSService")]
    public interface IEFSService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEFSService/GetVariableValue", ReplyAction="http://tempuri.org/IEFSService/GetVariableValueResponse")]
        EFSService.Value GetVariableValue(string variableName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEFSService/SetVariableValue", ReplyAction="http://tempuri.org/IEFSService/SetVariableValueResponse")]
        void SetVariableValue(string variableName, EFSService.Value value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEFSService/Cycle", ReplyAction="http://tempuri.org/IEFSService/CycleResponse")]
        void Cycle(EFSService.Priority priority);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IEFSServiceChannel : IEFSService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EFSServiceClient : System.ServiceModel.ClientBase<EFSService.IEFSService>, EFSService.IEFSService {
        
        public EFSServiceClient() {
        }
        
        public EFSServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public EFSServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EFSServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EFSServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public EFSService.Value GetVariableValue(string variableName) {
            return base.Channel.GetVariableValue(variableName);
        }
        
        public void SetVariableValue(string variableName, EFSService.Value value) {
            base.Channel.SetVariableValue(variableName, value);
        }
        
        public void Cycle(EFSService.Priority priority) {
            base.Channel.Cycle(priority);
        }
    }
}
